!function(){"use strict";var e="https://localhost:3000";function r(){try{var e=t("/api/seeq/credentials");if(e.success&&e.credentials){var r=e.credentials,n=new Date(r.timestamp);if(((new Date).getTime()-n.getTime())/36e5<24)return r}return null}catch(e){return console.log("Could not get stored credentials from backend:",e),null}}function t(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;try{var n=new XMLHttpRequest,s="".concat(e).concat(r);if(console.log("[DEBUG] Attempting to connect to: ".concat(s)),console.log("[DEBUG] Endpoint: ".concat(r)),console.log("[DEBUG] Data:",t),n.open(t?"POST":"GET",s,!1),n.setRequestHeader("Content-Type","application/json"),console.log("[DEBUG] Request opened, sending..."),t?n.send(JSON.stringify(t)):n.send(),console.log("[DEBUG] Response received - Status: ".concat(n.status,", StatusText: ").concat(n.statusText)),console.log("[DEBUG] Response headers:",n.getAllResponseHeaders()),console.log("[DEBUG] Response text:",n.responseText.substring(0,200)+"..."),200!==n.status)return console.log("[DEBUG] HTTP error: ".concat(n.status," - ").concat(n.statusText)),{success:!1,error:"HTTP ".concat(n.status,": ").concat(n.statusText),responseText:n.responseText,url:s};try{var o=JSON.parse(n.responseText);return console.log("[DEBUG] Successfully parsed response:",o),o}catch(e){return console.log("[DEBUG] Failed to parse response:",e),{success:!1,error:"Failed to parse response: ".concat(e.message),rawResponse:n.responseText}}}catch(t){return console.log("[DEBUG] Exception during request:",t),{success:!1,error:"Backend request failed: ".concat(t instanceof Error?t.message:"Unknown error"),details:t instanceof Error?t.stack:"No stack trace",url:"".concat(e).concat(r)}}}CustomFunctions.associate("ADD",function(e,r){return e+r}),CustomFunctions.associate("CLOCK",function(e){var r=setInterval(function(){var r=(new Date).toLocaleTimeString();e.setResult(r)},1e3);e.onCanceled=function(){clearInterval(r)}}),CustomFunctions.associate("INCREMENT",function(e,r){var t=0,n=setInterval(function(){t+=e,r.setResult(t)},1e3);r.onCanceled=function(){clearInterval(n)}}),CustomFunctions.associate("LOG",function(e){return console.log(e),e}),CustomFunctions.associate("SEEQ_PYTHON_AUTH_STATUS",function(){try{var e=t("/api/seeq/auth/python-status");return e.success?e.isAuthenticated?[["Python Authentication Status: Authenticated"],["User: "+(e.user||"Unknown")],["Status: "+(e.message||"Success")]]:[["Python Authentication Status: Not Authenticated"],["Message: "+(e.message||"Not authenticated")]]:[["Python Authentication Status: Error"],["Error: "+(e.error||e.message||"Unknown error")]]}catch(e){return[["Error: "+(e instanceof Error?e.message:"Unknown error")]]}}),CustomFunctions.associate("SEEQ_REAUTH",function(){return[["SEEQ_REAUTH function is disabled"],["Please use the SqExcel taskpane for re-authentication:"],["1. Open the SqExcel taskpane"],["2. If credentials are expired, re-enter them"],["3. Click 'Authenticate' to re-authenticate"]]}),CustomFunctions.associate("SEEQ_TEST_CONNECTION",function(e){try{if(!e)return[["Error: Server URL is required"]];var r=t("/api/seeq/test-connection",{url:e});return r.success?[["Connection Test: Successful"],["Server: "+e],["Status: "+(r.message||"Server is reachable")],["Status Code: "+(r.status_code||"N/A")]]:r.error&&r.error.includes("Failed to fetch")||r.error.includes("NetworkError")?[["Backend server not running"],["Please start the backend server:"],["1. Open terminal in the backend folder"],["2. Run: npm install && npm start"],["3. Then use this function again"]]:[["Connection Test: Failed"],["Server: "+e],["Error: "+(r.error||r.message||"Unknown error")]]}catch(e){return[["Error: "+(e instanceof Error?e.message:"Unknown error")]]}}),CustomFunctions.associate("SEEQ_SERVER_INFO",function(e){try{if(!e)return[["Error: Server URL is required"]];var r=t("/api/seeq/server-info",{url:e});if(r.success){var n=r.server_info,s=[["Server Information for: "+e],["Status: "+(n.status||"Unknown")],["Message: "+r.message]];return n.version&&s.push(["Version: "+n.version]),n.name&&s.push(["Name: "+n.name]),n.description&&s.push(["Description: "+n.description]),s}return r.error&&r.error.includes("Failed to fetch")||r.error.includes("NetworkError")?[["Backend server not running"],["Please start the backend server:"],["1. Open terminal in the backend folder"],["2. Run: npm install && npm start"],["3. Then use this function again"]]:[["Failed to get server info"],["Error: "+(r.error||r.message||"Unknown error")],["Server: "+e]]}catch(e){return[["Error: "+(e instanceof Error?e.message:"Unknown error")]]}}),CustomFunctions.associate("SEEQ_SENSOR_DATA",function(e,n,s){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"15min";try{var a=e.flat().filter(function(e){return e&&""!==e.trim()});if(0===a.length)return[["Error: No sensor names provided"]];var c=new Date(n),i=new Date(s);if(isNaN(c.getTime())||isNaN(i.getTime()))return[["Error: Invalid datetime format. Use ISO format: YYYY-MM-DDTHH:MM:SS"]];if(c>=i)return[["Error: Start datetime must be before end datetime"]];if(!/^(\d+)(min|h|d|s)$/.test(o))return[["Error: Invalid grid format. Use format like '15min', '1h', '1d', '30s'"]];var u=r();if(!u)return[["Error: Not authenticated to Seeq. Please use the TSFlow taskpane to authenticate first."]];var l=t("/api/seeq/sensor-data",{sensorNames:a,startDatetime:n,endDatetime:s,grid:o,url:u.url,accessKey:u.accessKey,password:u.password,authProvider:"Seeq",ignoreSslErrors:u.ignoreSsl});if(l.success&&l.data&&l.data.length>0){var d=["Timestamp"].concat(l.data_columns||[]),f=l.data.map(function(e){var r=function(e){try{var r;if("string"==typeof e)r=new Date(e);else if(e instanceof Date)r=e;else{if("number"!=typeof e)return 0;r=new Date(e)}return isNaN(r.getTime())?0:r.getTime()/864e5+25569}catch(e){return 0}}(e.Timestamp||e.index||"N/A"),t=(l.data_columns||[]).map(function(r){return void 0!==e[r]?e[r]:"N/A"});return[r].concat(t)});return[d].concat(f)}return l.error&&l.error.includes("Failed to fetch")||l.error.includes("NetworkError")?[["Backend server not running"],["Please start the backend server:"],["1. Open terminal in the backend folder"],["2. Run: npm install && npm start"],["3. Then use this function again"]]:[["No data returned"],["Error: "+(l.error||l.message||"Unknown error")],["Sensors: "+a.join(", ")],["Time Range: "+n+" to "+s]]}catch(e){return[["Error: "+(e instanceof Error?e.message:"Unknown error")]]}}),CustomFunctions.associate("SEEQ_SEARCH_SENSORS",function(e){try{var n=e.flat().filter(function(e){return e&&""!==e.trim()});if(0===n.length)return[["Error: No sensor names provided"]];var s=r();if(!s)return[["Error: Not authenticated to Seeq. Please use SqExcel taskpane to authenticate first."]];var o=t("/api/seeq/search-sensors",{sensorNames:n,url:s.url,accessKey:s.accessKey,password:s.password,authProvider:"Seeq",ignoreSslErrors:s.ignoreSsl});if(o.success&&o.search_results&&o.search_results.length>0){var a=o.search_results.map(function(e){return[e.Name||"N/A",e.ID||"Not Found",e["Datasource Name"]||"N/A",e["Value Unit Of Measure"]||"N/A",e.Description||"N/A"]});return[["Name","ID","Datasource Name","Value Unit Of Measure","Description"]].concat(a)}return o.error&&o.error.includes("Failed to fetch")||o.error.includes("NetworkError")?[["Backend server not running"],["Please start the backend server:"],["1. Open terminal in the backend folder"],["2. Run: npm install && npm start"],["3. Then use this function again"]]:[["No search results returned"],["Error: "+(o.error||o.message||"Unknown error")],["Sensors: "+n.join(", ")]]}catch(e){return[["Error: "+(e instanceof Error?e.message:"Unknown error")]]}})}();
//# sourceMappingURL=functions.js.map