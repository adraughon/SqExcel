{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/webpack/runtime/global","webpack://excel-custom-functions/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions/webpack/runtime/publicPath","webpack://excel-custom-functions/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions/./src/taskpane/seeq-api-client.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Seeq API Client for Proxy Server (SqExcelWeb)\n * This client communicates with the FastAPI proxy server to avoid CORS issues\n */\n\nexport interface SeeqAuthResult {\n  success: boolean;\n  message: string;\n  user?: string;\n  server_url?: string;\n  error?: string;\n  token?: string;\n}\n\nexport interface SeeqConnectionResult {\n  success: boolean;\n  message: string;\n  status_code?: number;\n  error?: string;\n  diagnostics?: {\n    cors_headers?: any;\n    response_headers?: any;\n    request_timing?: number;\n    user_agent?: string;\n    origin?: string;\n    app_domain?: string;\n    network_type?: string;\n    ssl_info?: any;\n    cors_analysis?: any;\n    error_analysis?: any;\n    cors_status?: string;\n  };\n}\n\nexport interface SeeqSensor {\n  ID: string;\n  Name: string;\n  Type: string;\n  Original_Name?: string;\n  Status?: string;\n}\n\nexport interface SeeqSearchResult {\n  success: boolean;\n  message: string;\n  search_results: SeeqSensor[];\n  sensor_count: number;\n  error?: string;\n}\n\nexport interface SeeqDataResult {\n  success: boolean;\n  message: string;\n  search_results: SeeqSensor[];\n  data: any[];\n  data_columns: string[];\n  data_index: string[];\n  sensor_count: number;\n  time_range: {\n    start: string;\n    end: string;\n    mode: string;\n    modeValue: string | number;\n  };\n  error?: string;\n}\n\nexport class SeeqAPIClient {\n  private proxyUrl: string;\n  private seeqServerUrl: string;\n  private authToken: string | null = null;\n  private credentials: any = null;\n  private diagnosticLog: any[] = [];\n\n  constructor(seeqServerUrl: string) {\n    this.seeqServerUrl = seeqServerUrl.replace(/\\/$/, ''); // Remove trailing slash\n    this.proxyUrl = 'https://sqexcel.up.railway.app';\n    this.logDiagnostic('CLIENT_INIT', `SeeqAPIClient initialized with proxy: ${this.proxyUrl}, Seeq server: ${this.seeqServerUrl}`);\n  }\n\n  /**\n   * Get the user's IANA timezone from the browser/Excel webview\n   */\n  private getUserTimezone(): string {\n    try {\n      const tz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n      return tz || 'UTC';\n    } catch (_e) {\n      return 'UTC';\n    }\n  }\n\n  /**\n   * Adjust timestamps in data to account for timezone offset\n   * This ensures dates display correctly in Excel\n   */\n  private adjustTimestampsForTimezone(data: any[]): any[] {\n    if (!data || !Array.isArray(data)) return data;\n    \n    // Add debug information as the first row\n    const timezoneOffset = new Date().getTimezoneOffset();\n    const now = new Date();\n    const debugRow = {\n      'DEBUG_TIMEZONE_OFFSET_MINUTES': timezoneOffset,\n      'DEBUG_CURRENT_TIME_UTC': now.toISOString(),\n      'DEBUG_CURRENT_TIME_LOCAL': now.toString(),\n      'DEBUG_TIMEZONE_NAME': Intl.DateTimeFormat().resolvedOptions().timeZone\n    };\n    \n    // Process the first data row for debugging\n    if (data.length > 0) {\n      const firstRow = data[0];\n      if (firstRow.Timestamp) {\n        const originalTimestamp = new Date(firstRow.Timestamp);\n        debugRow['DEBUG_ORIGINAL_TIMESTAMP'] = firstRow.Timestamp;\n        debugRow['DEBUG_ORIGINAL_PARSED_UTC'] = originalTimestamp.toISOString();\n        debugRow['DEBUG_ORIGINAL_PARSED_LOCAL'] = originalTimestamp.toString();\n        debugRow['DEBUG_ORIGINAL_GETTIME'] = originalTimestamp.getTime();\n      }\n      if (firstRow.index) {\n        const originalIndex = new Date(firstRow.index);\n        debugRow['DEBUG_ORIGINAL_INDEX'] = firstRow.index;\n        debugRow['DEBUG_INDEX_PARSED_UTC'] = originalIndex.toISOString();\n        debugRow['DEBUG_INDEX_PARSED_LOCAL'] = originalIndex.toString();\n        debugRow['DEBUG_INDEX_GETTIME'] = originalIndex.getTime();\n      }\n    }\n    \n    // Return debug row first, then original data\n    return [debugRow, ...data];\n  }\n\n  /**\n   * Log diagnostic information for debugging\n   */\n  private logDiagnostic(category: string, message: string, data?: any): void {\n    const logEntry = {\n      timestamp: new Date().toISOString(),\n      category,\n      message,\n      data,\n      userAgent: navigator.userAgent,\n      origin: window.location.origin,\n      appDomain: this.detectAppDomain(),\n      networkInfo: this.getNetworkInfo()\n    };\n    \n    this.diagnosticLog.push(logEntry);\n  }\n\n  /**\n   * Detect the current AppDomain context\n   */\n  private detectAppDomain(): string {\n    try {\n      if (typeof Office !== 'undefined' && Office.context) {\n        return `Office.js - ${Office.context.host || 'Unknown Host'}`;\n      }\n      if (window.location.protocol === 'https:') {\n        return 'HTTPS Web Context';\n      }\n      if (window.location.protocol === 'http:') {\n        return 'HTTP Web Context';\n      }\n      if (window.location.protocol === 'file:') {\n        return 'File Protocol Context';\n      }\n      return `Unknown Context - ${window.location.protocol}`;\n    } catch (error) {\n      return `Error detecting context: ${error}`;\n    }\n  }\n\n  /**\n   * Get network information\n   */\n  private getNetworkInfo(): any {\n    try {\n      const connection = (navigator as any).connection || (navigator as any).mozConnection || (navigator as any).webkitConnection;\n      return {\n        online: navigator.onLine,\n        connectionType: connection?.effectiveType || 'unknown',\n        downlink: connection?.downlink || 'unknown',\n        rtt: connection?.rtt || 'unknown'\n      };\n    } catch (error) {\n      return { online: navigator.onLine, error: error.toString() };\n    }\n  }\n\n  /**\n   * Get comprehensive diagnostic information\n   */\n  getDiagnostics(): any {\n    return {\n      clientInfo: {\n        proxyUrl: this.proxyUrl,\n        seeqServerUrl: this.seeqServerUrl,\n        isAuthenticated: !!this.authToken,\n        diagnosticLogCount: this.diagnosticLog.length\n      },\n      environment: {\n        userAgent: navigator.userAgent,\n        origin: window.location.origin,\n        appDomain: this.detectAppDomain(),\n        networkInfo: this.getNetworkInfo(),\n        timestamp: new Date().toISOString()\n      },\n      recentLogs: this.diagnosticLog.slice(-20) // Last 20 log entries\n    };\n  }\n\n  /**\n   * Clear diagnostic logs\n   */\n  clearDiagnostics(): void {\n    this.diagnosticLog = [];\n    this.logDiagnostic('DIAGNOSTICS_CLEARED', 'Diagnostic logs cleared');\n  }\n\n  /**\n   * Test connection to the proxy server\n   */\n  async testConnection(): Promise<SeeqConnectionResult> {\n    const startTime = Date.now();\n    const url = `${this.proxyUrl}/api/seeq/test-connection`;\n    \n    this.logDiagnostic('PROXY_CONNECTION_TEST_START', `Testing connection to proxy server: ${this.proxyUrl}`, {\n      url,\n      seeqServerUrl: this.seeqServerUrl,\n      appDomain: this.detectAppDomain(),\n      networkInfo: this.getNetworkInfo()\n    });\n    \n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seeq_url: this.seeqServerUrl\n        })\n      });\n\n      const requestTime = Date.now() - startTime;\n      \n      // Log all response headers\n      const allHeaders: any = {};\n      response.headers.forEach((value, key) => {\n        allHeaders[key] = value;\n      });\n\n      this.logDiagnostic('PROXY_CONNECTION_RESPONSE', `Proxy connection test response received`, {\n        status: response.status,\n        statusText: response.statusText,\n        requestTime,\n        allHeaders,\n        url: response.url\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.logDiagnostic('PROXY_CONNECTION_SUCCESS', 'Proxy connection test successful', data);\n        \n        return {\n          success: true,\n          message: data.message || \"Proxy server is reachable and can connect to Seeq\",\n          status_code: response.status,\n          diagnostics: {\n            response_headers: allHeaders,\n            request_timing: requestTime,\n            user_agent: navigator.userAgent,\n            origin: window.location.origin,\n            app_domain: this.detectAppDomain(),\n            network_type: this.getNetworkInfo().connectionType,\n            cors_status: 'OK'\n          }\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        this.logDiagnostic('PROXY_CONNECTION_FAILED', `Proxy connection test failed with status: ${response.status}`, {\n          status: response.status,\n          statusText: response.statusText,\n          headers: allHeaders,\n          errorData\n        });\n        \n        return {\n          success: false,\n          message: errorData.message || `Proxy server responded with status code: ${response.status}`,\n          status_code: response.status,\n          error: errorData.error || `HTTP ${response.status}`,\n          diagnostics: {\n            response_headers: allHeaders,\n            request_timing: requestTime,\n            user_agent: navigator.userAgent,\n            origin: window.location.origin,\n            app_domain: this.detectAppDomain(),\n            network_type: this.getNetworkInfo().connectionType,\n            cors_status: 'OK'\n          }\n        };\n      }\n    } catch (error: any) {\n      const requestTime = Date.now() - startTime;\n      \n      this.logDiagnostic('PROXY_CONNECTION_ERROR', `Proxy connection test error`, {\n        error: error.message,\n        errorName: error.name,\n        errorStack: error.stack,\n        requestTime,\n        url\n      });\n      \n      let message = \"Proxy connection test failed\";\n      let errorType = \"Unknown\";\n      \n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        message = \"Cannot connect to proxy server - connection refused. This may be due to network issues.\";\n        errorType = \"ConnectionError\";\n      } else if (error.name === 'AbortError') {\n        message = \"Connection timeout - the proxy server took too long to respond.\";\n        errorType = \"Timeout\";\n      } else if (error.message.includes('Failed to fetch')) {\n        message = \"Connection failed - unable to reach the proxy server. This may be due to network problems.\";\n        errorType = \"FetchError\";\n      } else {\n        message = `Proxy connection test failed: ${error.message}`;\n        errorType = error.message;\n      }\n      \n      return {\n        success: false,\n        message,\n        error: errorType,\n        diagnostics: {\n          request_timing: requestTime,\n          user_agent: navigator.userAgent,\n          origin: window.location.origin,\n          app_domain: this.detectAppDomain(),\n          network_type: this.getNetworkInfo().connectionType,\n          cors_status: 'OK'\n        }\n      };\n    }\n  }\n\n  /**\n   * Authenticate with Seeq server through proxy\n   */\n  async authenticate(accessKey: string, password: string, authProvider: string = 'Seeq', ignoreSslErrors: boolean = false): Promise<SeeqAuthResult> {\n    try {\n      // Store credentials for later use\n      this.credentials = {\n        accessKey,\n        password,\n        authProvider,\n        ignoreSslErrors,\n        seeq_url: this.seeqServerUrl\n      };\n\n      this.logDiagnostic('PROXY_AUTH_START', `Attempting to authenticate through proxy: ${this.proxyUrl}`, {\n        seeqServerUrl: this.seeqServerUrl,\n        accessKey,\n        authProvider\n      });\n\n      const response = await fetch(`${this.proxyUrl}/api/seeq/auth`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seeq_url: this.seeqServerUrl,\n          username: accessKey,\n          password: password,\n          auth_provider: authProvider,\n          ignore_ssl_errors: ignoreSslErrors\n        })\n      });\n\n      this.logDiagnostic('PROXY_AUTH_RESPONSE', `Proxy authentication response received`, {\n        status: response.status,\n        statusText: response.statusText\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.authToken = data.token || 'authenticated';\n        \n        this.logDiagnostic('PROXY_AUTH_SUCCESS', 'Proxy authentication successful', {\n          user: data.user,\n          server_url: data.server_url\n        });\n        \n        // Store credentials in backend for Excel functions to use\n        try {\n          await this.storeCredentialsForExcel();\n        } catch (storeError) {\n          console.warn('Failed to store credentials for Excel functions:', storeError);\n          // Don't fail the authentication if credential storage fails\n        }\n        \n        return {\n          success: true,\n          message: data.message || `Successfully authenticated as ${accessKey}`,\n          user: data.user || accessKey,\n          server_url: data.server_url || this.seeqServerUrl,\n          token: this.authToken || undefined\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        this.logDiagnostic('PROXY_AUTH_FAILED', 'Proxy authentication failed', {\n          status: response.status,\n          errorData\n        });\n        \n        return {\n          success: false,\n          message: errorData.message || `Authentication failed with status ${response.status}`,\n          error: errorData.error || `HTTP ${response.status}`\n        };\n      }\n    } catch (error: any) {\n      this.logDiagnostic('PROXY_AUTH_ERROR', 'Proxy authentication error', {\n        error: error.message,\n        errorName: error.name\n      });\n      \n      let errorMessage = 'Authentication failed';\n      let errorType = 'Unknown';\n      \n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        errorMessage = 'Network error: Cannot connect to proxy server. Please check your internet connection.';\n        errorType = 'NetworkError';\n      } else if (error.name === 'AbortError') {\n        errorMessage = 'Request timeout: The authentication request took too long. Please try again.';\n        errorType = 'TimeoutError';\n      } else if (error.message.includes('Failed to fetch')) {\n        errorMessage = 'Connection failed: Unable to reach the proxy server. This may be due to network issues.';\n        errorType = 'ConnectionError';\n      } else {\n        errorMessage = `Authentication failed: ${error.message}`;\n        errorType = error.name || 'UnknownError';\n      }\n      \n      return {\n        success: false,\n        message: errorMessage,\n        error: errorType\n      };\n    }\n  }\n\n  /**\n   * Store credentials in backend for Excel functions to use\n   */\n  private async storeCredentialsForExcel(): Promise<void> {\n    if (!this.credentials) {\n      throw new Error('No credentials available to store');\n    }\n\n    const response = await fetch(`${this.proxyUrl}/api/seeq/credentials`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        url: this.seeqServerUrl,\n        accessKey: this.credentials.accessKey,\n        password: this.credentials.password,\n        authProvider: this.credentials.authProvider,\n        ignoreSslErrors: this.credentials.ignoreSslErrors,\n        timestamp: new Date().toISOString()\n      })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(`Failed to store credentials: ${errorData.error || response.statusText}`);\n    }\n  }\n\n  /**\n   * Search for sensors in Seeq through proxy\n   */\n  async searchSensors(sensorNames: string[]): Promise<SeeqSearchResult> {\n    if (!this.authToken && !this.credentials) {\n      return {\n        success: false,\n        message: \"Not authenticated. Please authenticate first.\",\n        error: \"Authentication required\",\n        search_results: [],\n        sensor_count: 0\n      };\n    }\n\n    try {\n      this.logDiagnostic('PROXY_SEARCH_START', `Searching for sensors through proxy`, {\n        sensorNames,\n        seeqServerUrl: this.seeqServerUrl\n      });\n\n      const response = await fetch(`${this.proxyUrl}/api/seeq/search`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seeq_url: this.seeqServerUrl,\n          sensor_names: sensorNames,\n          username: this.credentials?.accessKey,\n          password: this.credentials?.password,\n          auth_provider: this.credentials?.authProvider || 'Seeq'\n        })\n      });\n\n      this.logDiagnostic('PROXY_SEARCH_RESPONSE', `Proxy search response received`, {\n        status: response.status,\n        statusText: response.statusText\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.logDiagnostic('PROXY_SEARCH_SUCCESS', 'Proxy search successful', {\n          sensorCount: data.sensor_count,\n          searchResults: data.search_results\n        });\n\n        return {\n          success: true,\n          message: data.message || `Found ${data.sensor_count} sensors`,\n          search_results: data.search_results || [],\n          sensor_count: data.sensor_count || 0\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        this.logDiagnostic('PROXY_SEARCH_FAILED', 'Proxy search failed', {\n          status: response.status,\n          errorData\n        });\n\n        return {\n          success: false,\n          message: errorData.message || `Search failed with status ${response.status}`,\n          error: errorData.error || `HTTP ${response.status}`,\n          search_results: [],\n          sensor_count: 0\n        };\n      }\n    } catch (error: any) {\n      this.logDiagnostic('PROXY_SEARCH_ERROR', 'Proxy search error', {\n        error: error.message,\n        errorName: error.name\n      });\n\n      return {\n        success: false,\n        message: `Sensor search failed: ${error.message}`,\n        error: error.message,\n        search_results: [],\n        sensor_count: 0\n      };\n    }\n  }\n\n  /**\n   * Search for sensors and pull their data through proxy\n   */\n  async searchAndPullSensors(sensorNames: string[], startTime: string, endTime: string, mode: string = 'points', modeValue: string | number = 1000): Promise<SeeqDataResult> {\n    try {\n      // Calculate grid based on mode\n      let grid: string;\n      if (mode === 'grid') {\n        grid = String(modeValue);\n      } else {\n        // mode === 'points' - calculate grid from number of points\n        const numPoints = typeof modeValue === 'number' ? modeValue : parseInt(String(modeValue));\n        const startDate = new Date(startTime);\n        const endDate = new Date(endTime);\n        const timeRangeMs = endDate.getTime() - startDate.getTime();\n        const timeRangeSeconds = Math.floor(timeRangeMs / 1000);\n        const secondsPerPoint = Math.floor(timeRangeSeconds / numPoints);\n        grid = `${secondsPerPoint}s`;\n      }\n\n      this.logDiagnostic('PROXY_SEARCH_PULL_START', `Searching and pulling sensor data through proxy`, {\n        sensorNames,\n        startTime,\n        endTime,\n        mode,\n        modeValue,\n        calculatedGrid: grid,\n        seeqServerUrl: this.seeqServerUrl\n      });\n\n      const response = await fetch(`${this.proxyUrl}/api/seeq/data`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seeq_url: this.seeqServerUrl,\n          sensor_names: sensorNames,\n          start_time: startTime,\n          end_time: endTime,\n          grid: grid,\n          // Provide user's timezone so backend can localize naive times\n          user_timezone: this.getUserTimezone(),\n          username: this.credentials?.accessKey,\n          password: this.credentials?.password,\n          auth_provider: this.credentials?.authProvider || 'Seeq'\n        })\n      });\n\n      this.logDiagnostic('PROXY_SEARCH_PULL_RESPONSE', `Proxy search and pull response received`, {\n        status: response.status,\n        statusText: response.statusText\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.logDiagnostic('PROXY_SEARCH_PULL_SUCCESS', 'Proxy search and pull successful', {\n          sensorCount: data.sensor_count,\n          dataLength: data.data?.length || 0,\n          dataColumns: data.data_columns\n        });\n\n        // Adjust timestamps for timezone offset before returning\n        const adjustedData = this.adjustTimestampsForTimezone(data.data || []);\n\n        return {\n          success: true,\n          message: data.message || `Successfully retrieved data for ${data.sensor_count} sensors`,\n          search_results: data.search_results || [],\n          data: adjustedData,\n          data_columns: data.data_columns || [],\n          data_index: data.data_index || [],\n          sensor_count: data.sensor_count || 0,\n          time_range: {\n            start: startTime,\n            end: endTime,\n            mode: mode,\n            modeValue: modeValue\n          }\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        this.logDiagnostic('PROXY_SEARCH_PULL_FAILED', 'Proxy search and pull failed', {\n          status: response.status,\n          errorData\n        });\n\n        return {\n          success: false,\n          message: errorData.message || `Search and pull failed with status ${response.status}`,\n          error: errorData.error || `HTTP ${response.status}`,\n          search_results: [],\n          data: [],\n          data_columns: [],\n          data_index: [],\n          sensor_count: 0,\n          time_range: { start: startTime, end: endTime, mode, modeValue }\n        };\n      }\n    } catch (error: any) {\n      this.logDiagnostic('PROXY_SEARCH_PULL_ERROR', 'Proxy search and pull error', {\n        error: error.message,\n        errorName: error.name\n      });\n\n      return {\n        success: false,\n        message: `Search and pull operation failed: ${error.message}`,\n        error: error.message,\n        search_results: [],\n        data: [],\n        data_columns: [],\n        data_index: [],\n        sensor_count: 0,\n        time_range: { start: startTime, end: endTime, mode, modeValue }\n      };\n    }\n  }\n\n  /**\n   * Get current authentication status\n   */\n  getAuthStatus(): { isAuthenticated: boolean; user?: string } {\n    return {\n      isAuthenticated: !!this.authToken,\n      user: this.credentials?.accessKey\n    };\n  }\n\n  /**\n   * Clear authentication\n   */\n  async logout(): Promise<void> {\n    try {\n      if (this.authToken) {\n        this.logDiagnostic('PROXY_LOGOUT_START', 'Logging out through proxy');\n        \n        const response = await fetch(`${this.proxyUrl}/api/seeq/auth`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            seeq_url: this.seeqServerUrl,\n            username: this.credentials?.accessKey\n          })\n        });\n\n        this.logDiagnostic('PROXY_LOGOUT_RESPONSE', `Proxy logout response received`, {\n          status: response.status,\n          statusText: response.statusText\n        });\n      }\n      \n      // Clear credentials from backend for Excel functions\n      try {\n        await fetch(`${this.proxyUrl}/api/seeq/credentials`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        });\n      } catch (clearError) {\n        console.warn('Failed to clear credentials from backend:', clearError);\n        // Don't fail logout if credential clearing fails\n      }\n    } catch (error: any) {\n      this.logDiagnostic('PROXY_LOGOUT_ERROR', 'Proxy logout error', {\n        error: error.message\n      });\n    } finally {\n      this.authToken = null;\n      this.credentials = null;\n    }\n  }\n\n  /**\n   * Get stored credentials for persistence\n   */\n  getCredentials(): any {\n    return this.credentials;\n  }\n\n  /**\n   * Set credentials from storage\n   */\n  setCredentials(credentials: any): void {\n    this.credentials = credentials;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n// Import CSS for styling\nimport './taskpane.css';\n\n// Import the new Seeq API client\nimport { SeeqAPIClient } from './seeq-api-client';\n\n// Version will be dynamically loaded from version.json\nlet ADDIN_VERSION = \"Loading...\";\n\n// Global API client instance\nlet seeqClient: SeeqAPIClient | null = null;\n\n// Load version information from version.json\nasync function loadVersionInfo(): Promise<void> {\n  try {\n    // Try relative path first, then fallback to full URL\n    let response = await fetch('./version.json');\n    \n    if (!response.ok) {\n      // Fallback to full URL if relative path fails\n      response = await fetch('https://adraughon.github.io/SqExcel/version.json');\n    }\n    \n    if (response.ok) {\n      const versionData = await response.json();\n      ADDIN_VERSION = versionData.version;\n    } else {\n      ADDIN_VERSION = \"Version info unavailable\";\n    }\n  } catch (error) {\n    ADDIN_VERSION = \"Version info unavailable\";\n  }\n}\n\n// The initialize function must be run each time a new page is loaded\nOffice.onReady(async () => {\n  const sideloadMsg = document.getElementById(\"sideload-msg\");\n  const appBody = document.getElementById(\"app-body\");\n  if (sideloadMsg) sideloadMsg.style.display = \"none\";\n  if (appBody) appBody.style.display = \"flex\";\n  \n  // Load version information first\n  await loadVersionInfo();\n  \n  // Initialize Seeq authentication\n  initializeSeeqAuth();\n});\n\n// Seeq Authentication Interface\ninterface SeeqAuthResult {\n  success: boolean;\n  message: string;\n  user?: string;\n  server_url?: string;\n  error?: string;\n}\n\ninterface SeeqConnectionResult {\n  success: boolean;\n  message: string;\n  status_code?: number;\n  error?: string;\n}\n\n// Seeq Authentication Functions\nfunction initializeSeeqAuth(): void {\n  const authenticateBtn = document.getElementById(\"authenticate\") as HTMLButtonElement;\n  const logoutBtn = document.getElementById(\"logout\") as HTMLButtonElement;\n  const searchSensorsBtn = document.getElementById(\"search-sensors\") as HTMLButtonElement;\n  const pullDataBtn = document.getElementById(\"pull-data\") as HTMLButtonElement;\n\n  if (authenticateBtn) {\n    authenticateBtn.onclick = authenticateWithSeeq;\n  }\n  \n  if (logoutBtn) {\n    logoutBtn.onclick = logoutFromSeeq;\n  }\n\n  if (searchSensorsBtn) {\n    searchSensorsBtn.onclick = searchSensors;\n  }\n\n  if (pullDataBtn) {\n    pullDataBtn.onclick = pullSensorData;\n  }\n\n  // Add event listener for mode selection change\n  const dataModeSelect = document.getElementById(\"data-mode\") as HTMLSelectElement;\n  if (dataModeSelect) {\n    dataModeSelect.onchange = handleModeChange;\n  }\n\n  // Load saved credentials if available\n  loadSavedCredentials();\n  \n  // Display version number to prove we're using new code\n  showAuthStatus(`Add-in Version: ${ADDIN_VERSION}`, \"info\");\n}\n\nfunction handleModeChange(): void {\n  const dataModeSelect = document.getElementById(\"data-mode\") as HTMLSelectElement;\n  const modeValueInput = document.getElementById(\"mode-value\") as HTMLInputElement;\n  const modeValueLabel = document.getElementById(\"mode-value-label\") as HTMLLabelElement;\n  \n  if (!dataModeSelect || !modeValueInput || !modeValueLabel) return;\n  \n  const selectedMode = dataModeSelect.value;\n  \n  if (selectedMode === \"grid\") {\n    modeValueLabel.textContent = \"Grid Interval:\";\n    modeValueInput.placeholder = \"15min\";\n    modeValueInput.value = \"15min\";\n    modeValueInput.type = \"text\";\n  } else {\n    modeValueLabel.textContent = \"Number of Points:\";\n    modeValueInput.placeholder = \"1000\";\n    modeValueInput.value = \"1000\";\n    modeValueInput.type = \"number\";\n  }\n}\n\nasync function authenticateWithSeeq(): Promise<void> {\n  const url = (document.getElementById(\"seeq-url\") as HTMLInputElement)?.value;\n  const accessKey = (document.getElementById(\"seeq-access-key\") as HTMLInputElement)?.value;\n  const password = (document.getElementById(\"seeq-password\") as HTMLInputElement)?.value;\n\n  if (!url || !accessKey || !password) {\n    showAuthStatus(\"Please fill in all required fields\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Authenticating...\", \"loading\");\n  \n  try {\n    // Use the API client to authenticate\n    if (!seeqClient) {\n      seeqClient = new SeeqAPIClient(url);\n    }\n    \n    const result = await seeqClient.authenticate(accessKey, password, 'Seeq', false);\n    \n    if (result.success) {\n      showAuthStatus(\"Authentication successful\", \"success\");\n      saveCredentials(url, accessKey, password, false);\n      updateAuthUI(true);\n      // Update Excel function cache\n      updateExcelCache(\"auth\", result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Authentication failed: ${error}`, \"error\");\n  }\n}\n\nasync function searchSensors(): Promise<void> {\n  const sensorNamesInput = (document.getElementById(\"sensor-names\") as HTMLInputElement)?.value;\n  \n  if (!sensorNamesInput) {\n    showAuthStatus(\"Please enter sensor names to search for\", \"error\");\n    return;\n  }\n\n  const sensorNames = sensorNamesInput.split(',').map(name => name.trim()).filter(name => name);\n  \n  if (sensorNames.length === 0) {\n    showAuthStatus(\"Please enter valid sensor names\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Searching for sensors...\", \"loading\");\n  \n  try {\n    // Use the API client to search for sensors\n    if (!seeqClient) {\n      showAuthStatus(\"Please test connection first\", \"error\");\n      return;\n    }\n    \n    const result = await seeqClient.searchSensors(sensorNames);\n    \n    if (result.success) {\n      showAuthStatus(`Found ${result.sensor_count} sensors`, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"search\", result);\n      // Display results\n      displaySearchResults(result.search_results);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Sensor search failed: ${error}`, \"error\");\n  }\n}\n\nasync function pullSensorData(): Promise<void> {\n  const sensorNamesInput = (document.getElementById(\"sensor-names\") as HTMLInputElement)?.value;\n  const startTimeInput = (document.getElementById(\"start-time\") as HTMLInputElement)?.value;\n  const endTimeInput = (document.getElementById(\"end-time\") as HTMLInputElement)?.value;\n  const dataMode = (document.getElementById(\"data-mode\") as HTMLSelectElement)?.value;\n  const modeValueInput = (document.getElementById(\"mode-value\") as HTMLInputElement)?.value;\n  \n  if (!sensorNamesInput || !startTimeInput || !endTimeInput) {\n    showAuthStatus(\"Please fill in all required fields\", \"error\");\n    return;\n  }\n\n  const sensorNames = sensorNamesInput.split(',').map(name => name.trim()).filter(name => name);\n  const mode = dataMode || \"points\";\n  const modeValue = modeValueInput || (mode === \"points\" ? \"1000\" : \"15min\");\n  \n  if (sensorNames.length === 0) {\n    showAuthStatus(\"Please enter valid sensor names\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Pulling sensor data...\", \"loading\");\n  \n  try {\n    // Use the API client to search and pull data\n    if (!seeqClient) {\n      showAuthStatus(\"Please test connection first\", \"error\");\n      return;\n    }\n    \n    const result = await seeqClient.searchAndPullSensors(sensorNames, startTimeInput, endTimeInput, mode, modeValue);\n    \n    if (result.success) {\n      showAuthStatus(`Retrieved data for ${result.sensor_count} sensors`, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"data\", result);\n      // Display results\n      displayDataResults(result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Data retrieval failed: ${error}`, \"error\");\n  }\n}\n\nfunction logoutFromSeeq(): void {\n  // Clear saved credentials\n  localStorage.removeItem(\"seeq_credentials\");\n  \n  // Clear API client state\n  if (seeqClient) {\n    seeqClient.logout();\n  }\n  \n  // Update UI\n  updateAuthUI(false);\n  showAuthStatus(\"Logged out successfully\", \"info\");\n  \n  // Clear form fields\n  (document.getElementById(\"seeq-url\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"seeq-access-key\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"seeq-password\") as HTMLInputElement).value = \"\";\n}\n\nfunction showAuthStatus(message: string, type: \"success\" | \"error\" | \"info\" | \"loading\" | \"warning\"): void {\n  const statusElement = document.getElementById(\"auth-status\");\n  if (statusElement) {\n    statusElement.textContent = message;\n    statusElement.className = `auth-status ${type}`;\n  }\n}\n\nfunction updateAuthUI(isAuthenticated: boolean): void {\n  const authBtn = document.getElementById(\"authenticate\") as HTMLButtonElement;\n  const logoutBtn = document.getElementById(\"logout\") as HTMLButtonElement;\n  const urlInput = document.getElementById(\"seeq-url\") as HTMLInputElement;\n  const accessKeyInput = document.getElementById(\"seeq-access-key\") as HTMLInputElement;\n  const passwordInput = document.getElementById(\"seeq-password\") as HTMLInputElement;\n\n  if (isAuthenticated) {\n    authBtn.style.display = \"none\";\n    logoutBtn.style.display = \"inline-block\";\n    \n    // Disable form inputs\n    urlInput.disabled = true;\n    accessKeyInput.disabled = true;\n    passwordInput.disabled = true;\n  } else {\n    authBtn.style.display = \"inline-block\";\n    logoutBtn.style.display = \"none\";\n    \n    // Enable form inputs\n    urlInput.disabled = false;\n    accessKeyInput.disabled = false;\n    passwordInput.disabled = false;\n  }\n}\n\nfunction saveCredentials(url: string, accessKey: string, password: string, ignoreSsl: boolean): void {\n  const credentials = {\n    url,\n    accessKey,\n    password,\n    ignoreSsl: false,\n    timestamp: new Date().toISOString()\n  };\n  \n  localStorage.setItem(\"seeq_credentials\", JSON.stringify(credentials));\n}\n\n// Load saved credentials from localStorage\nfunction loadSavedCredentials(): void {\n  const saved = localStorage.getItem(\"seeq_credentials\");\n  if (saved) {\n    try {\n      const credentials = JSON.parse(saved);\n      \n      // Populate form fields\n      (document.getElementById(\"seeq-url\") as HTMLInputElement).value = credentials.url || \"\";\n      (document.getElementById(\"seeq-access-key\") as HTMLInputElement).value = credentials.accessKey || \"\";\n      (document.getElementById(\"seeq-password\") as HTMLInputElement).value = credentials.password || \"\";\n      \n      // Check if credentials are still valid (less than 24 hours old)\n      const timestamp = new Date(credentials.timestamp);\n      const now = new Date();\n      const hoursDiff = (now.getTime() - timestamp.getTime()) / (1000 * 60 * 60);\n      \n      if (hoursDiff < 24) {\n        // Credentials are still valid, update UI\n        updateAuthUI(true);\n        showAuthStatus(\"Using saved credentials\", \"info\");\n        \n        // Recreate API client with saved URL\n        if (credentials.url) {\n          seeqClient = new SeeqAPIClient(credentials.url);\n        }\n      } else {\n        // Credentials expired, remove them\n        localStorage.removeItem(\"seeq_credentials\");\n      }\n    } catch (error) {\n      localStorage.removeItem(\"seeq_credentials\");\n    }\n  }\n}\n\n// Update Excel function cache\nfunction updateExcelCache(operationType: string, data: any): void {\n  try {\n    const jsonData = JSON.stringify(data);\n    const cacheUpdate = `=SEEQ_UPDATE_CACHE(\"${operationType}\", '${jsonData}')`;\n    \n    Excel.run(async (context) => {\n      const worksheet = context.workbook.worksheets.getActiveWorksheet();\n      const range = worksheet.getRange(\"A1\");\n      range.values = [[cacheUpdate]];\n      await context.sync();\n    }).catch(error => {\n      // Silent fail for cache update\n    });\n  } catch (error) {\n    // Silent fail for cache update\n  }\n}\n\n// Display search results in the UI\nfunction displaySearchResults(results: any[]): void {\n  const resultsDiv = document.getElementById(\"search-results\");\n  if (resultsDiv && results.length > 0) {\n    let html = `\n      <h3>Search Results (${results.length} sensors)</h3>\n      <div class=\"results-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Original Name</th>\n              <th>Seeq Name</th>\n              <th>ID</th>\n              <th>Type</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n    `;\n    \n    results.forEach(result => {\n      html += `\n        <tr>\n          <td>${result.Original_Name || result.Name || \"N/A\"}</td>\n          <td>${result.Name || \"N/A\"}</td>\n          <td>${result.ID || \"Not Found\"}</td>\n          <td>${result.Type || \"N/A\"}</td>\n          <td>${result.Status || \"Unknown\"}</td>\n        </tr>\n      `;\n    });\n    \n    html += `\n          </tbody>\n        </table>\n      </div>\n    `;\n    \n    resultsDiv.innerHTML = html;\n  }\n}\n\n// Display data results in the UI\nfunction displayDataResults(result: any): void {\n  const resultsDiv = document.getElementById(\"data-results\");\n  if (resultsDiv && result.data && result.data.length > 0) {\n    const dataToShow = result.data.slice(0, 10); // Show first 10 rows\n    \n    // Check if first row contains debug information\n    const firstRow = result.data[0];\n    const isDebugRow = firstRow && Object.keys(firstRow).some(key => key.startsWith('DEBUG_'));\n    \n    let html = `\n      <h3>Data Results (${result.data.length} rows)</h3>\n      <div class=\"results-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Timestamp</th>\n              ${result.data_columns.map(col => `<th>${col}</th>`).join('')}\n            </tr>\n          </thead>\n          <tbody>\n    `;\n    \n    dataToShow.forEach(row => {\n      html += `\n        <tr>\n          <td>${row.Timestamp || row.index || \"N/A\"}</td>\n          ${result.data_columns.map(col => `<td>${row[col] !== undefined ? row[col] : \"N/A\"}</td>`).join('')}\n        </tr>\n      `;\n    });\n    \n    html += `\n          </tbody>\n        </table>\n        ${result.data.length > 10 ? `<p><em>Showing first 10 of ${result.data.length} rows</em></p>` : ''}\n      </div>\n    `;\n    \n    // Add debug information if present\n    if (isDebugRow) {\n      html += `\n        <div style=\"margin-top: 20px; padding: 15px; background-color: #f0f0f0; border: 1px solid #ccc; border-radius: 5px;\">\n          <h4>Debug Information (First Row)</h4>\n          <div style=\"font-family: monospace; font-size: 12px;\">\n      `;\n      \n      Object.keys(firstRow).forEach(key => {\n        if (key.startsWith('DEBUG_')) {\n          html += `<div><strong>${key}:</strong> ${firstRow[key]}</div>`;\n        }\n      });\n      \n      html += `\n          </div>\n        </div>\n      `;\n    }\n    \n    resultsDiv.innerHTML = html;\n  }\n}\n\n// Display comprehensive diagnostics\nfunction displayDiagnostics(connectionResult: any, authResult: any = null): void {\n  const diagnosticsDiv = document.getElementById(\"diagnostics\");\n  if (!diagnosticsDiv) return;\n\n  const diagnostics = seeqClient?.getDiagnostics();\n  if (!diagnostics) return;\n\n  let html = `\n    <div class=\"diagnostics-panel\">\n      <h3>🔍 Connection Diagnostics</h3>\n      <div class=\"diagnostic-section\">\n        <h4>Environment Information</h4>\n        <div class=\"diagnostic-grid\">\n          <div class=\"diagnostic-item\">\n            <strong>App Domain:</strong> ${diagnostics.environment.appDomain}\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Origin:</strong> ${diagnostics.environment.origin}\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Network Type:</strong> ${diagnostics.environment.networkInfo.connectionType}\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Online Status:</strong> ${diagnostics.environment.networkInfo.online ? '✅ Online' : '❌ Offline'}\n          </div>\n        </div>\n      </div>\n  `;\n\n  // Connection test results\n  if (connectionResult.diagnostics) {\n    html += `\n      <div class=\"diagnostic-section\">\n        <h4>Connection Test Results</h4>\n        <div class=\"diagnostic-grid\">\n          <div class=\"diagnostic-item\">\n            <strong>Response Time:</strong> ${connectionResult.diagnostics.request_timing}ms\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Status Code:</strong> ${connectionResult.status_code}\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>CORS Status:</strong> ${connectionResult.diagnostics.cors_status}\n          </div>\n        </div>\n    `;\n\n    // Show CORS headers if available\n    if (connectionResult.diagnostics.response_headers) {\n      const corsHeaders = [\n        'access-control-allow-origin',\n        'access-control-allow-methods',\n        'access-control-allow-headers',\n        'access-control-allow-credentials'\n      ];\n      \n      html += `\n        <div class=\"cors-headers\">\n          <h5>CORS Headers:</h5>\n          <ul>\n      `;\n      \n      corsHeaders.forEach(header => {\n        const value = connectionResult.diagnostics.response_headers[header];\n        html += `<li><strong>${header}:</strong> ${value || 'Not set'}</li>`;\n      });\n      \n      html += `</ul></div>`;\n    }\n    \n    html += `</div>`;\n  }\n\n  // Auth endpoint test results\n  if (authResult && authResult.diagnostics) {\n    html += `\n      <div class=\"diagnostic-section\">\n        <h4>Authentication Endpoint Test</h4>\n        <div class=\"diagnostic-grid\">\n          <div class=\"diagnostic-item\">\n            <strong>Response Time:</strong> ${authResult.diagnostics.request_timing}ms\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Status Code:</strong> ${authResult.status_code}\n          </div>\n        </div>\n    `;\n\n    // Show CORS analysis if available\n    if (authResult.diagnostics.cors_analysis) {\n      const corsAnalysis = authResult.diagnostics.cors_analysis;\n      html += `\n        <div class=\"cors-analysis\">\n          <h5>CORS Configuration Analysis:</h5>\n          <div class=\"cors-status\">\n            <div class=\"cors-item ${corsAnalysis.allowsOrigin ? 'success' : 'error'}\">\n              <strong>Origin Allowed:</strong> ${corsAnalysis.allowsOrigin ? '✅ Yes' : '❌ No'}\n            </div>\n            <div class=\"cors-item ${corsAnalysis.allowsMethods ? 'success' : 'error'}\">\n              <strong>Methods Allowed:</strong> ${corsAnalysis.allowsMethods ? '✅ Yes' : '❌ No'}\n            </div>\n            <div class=\"cors-item ${corsAnalysis.allowsHeaders ? 'success' : 'error'}\">\n              <strong>Headers Allowed:</strong> ${corsAnalysis.allowsHeaders ? '✅ Yes' : '❌ No'}\n            </div>\n          </div>\n      `;\n\n      if (corsAnalysis.issues.length > 0) {\n        html += `\n          <div class=\"cors-issues\">\n            <h6>Issues Found:</h6>\n            <ul>\n              ${corsAnalysis.issues.map(issue => `<li>❌ ${issue}</li>`).join('')}\n            </ul>\n          </div>\n        `;\n      }\n\n      if (corsAnalysis.recommendations.length > 0) {\n        html += `\n          <div class=\"cors-recommendations\">\n            <h6>Recommendations:</h6>\n            <ul>\n              ${corsAnalysis.recommendations.map(rec => `<li>💡 ${rec}</li>`).join('')}\n            </ul>\n          </div>\n        `;\n      }\n\n      html += `</div>`;\n    }\n    \n    html += `</div>`;\n  }\n\n  // Recent diagnostic logs\n  if (diagnostics.recentLogs && diagnostics.recentLogs.length > 0) {\n    html += `\n      <div class=\"diagnostic-section\">\n        <h4>Recent Diagnostic Logs</h4>\n        <div class=\"log-entries\">\n    `;\n    \n    diagnostics.recentLogs.slice(-10).forEach((log: any) => {\n      const timestamp = new Date(log.timestamp).toLocaleTimeString();\n      html += `\n        <div class=\"log-entry\">\n          <span class=\"log-time\">${timestamp}</span>\n          <span class=\"log-category\">[${log.category}]</span>\n          <span class=\"log-message\">${log.message}</span>\n        </div>\n      `;\n    });\n    \n    html += `</div></div>`;\n  }\n\n  html += `\n      <div class=\"diagnostic-actions\">\n        <button onclick=\"clearDiagnostics()\" class=\"btn-secondary\">Clear Logs</button>\n        <button onclick=\"exportDiagnostics()\" class=\"btn-secondary\">Export Diagnostics</button>\n      </div>\n    </div>\n  `;\n\n  diagnosticsDiv.innerHTML = html;\n}\n\n// Display error diagnostics\nfunction displayErrorDiagnostics(result: any): void {\n  const diagnosticsDiv = document.getElementById(\"diagnostics\");\n  if (!diagnosticsDiv) return;\n\n  const diagnostics = seeqClient?.getDiagnostics();\n  if (!diagnostics) return;\n\n  let html = `\n    <div class=\"diagnostics-panel error\">\n      <h3>❌ Error Diagnostics</h3>\n      <div class=\"error-summary\">\n        <h4>Error Summary</h4>\n        <div class=\"error-details\">\n          <div class=\"error-item\">\n            <strong>Error Message:</strong> ${result.message}\n          </div>\n          <div class=\"error-item\">\n            <strong>Error Type:</strong> ${result.error || 'Unknown'}\n          </div>\n        </div>\n      </div>\n  `;\n\n  // Show error analysis if available\n  if (result.diagnostics && result.diagnostics.error_analysis) {\n    const errorAnalysis = result.diagnostics.error_analysis;\n    html += `\n      <div class=\"diagnostic-section\">\n        <h4>Error Analysis</h4>\n        <div class=\"error-analysis\">\n          <div class=\"analysis-item\">\n            <strong>Error Type:</strong> ${errorAnalysis.errorType}\n          </div>\n          <div class=\"analysis-item\">\n            <strong>Likely Cause:</strong> ${errorAnalysis.likelyCause}\n          </div>\n          <div class=\"analysis-flags\">\n            <div class=\"flag ${errorAnalysis.isCorsRelated ? 'active' : ''}\">CORS Related</div>\n            <div class=\"flag ${errorAnalysis.isNetworkRelated ? 'active' : ''}\">Network Related</div>\n            <div class=\"flag ${errorAnalysis.isSslRelated ? 'active' : ''}\">SSL Related</div>\n            <div class=\"flag ${errorAnalysis.isAppDomainRelated ? 'active' : ''}\">AppDomain Related</div>\n          </div>\n        </div>\n    `;\n\n    if (errorAnalysis.recommendations.length > 0) {\n      html += `\n        <div class=\"recommendations\">\n          <h5>Recommendations:</h5>\n          <ul>\n            ${errorAnalysis.recommendations.map(rec => `<li>💡 ${rec}</li>`).join('')}\n          </ul>\n        </div>\n      `;\n    }\n    \n    html += `</div>`;\n  }\n\n  // Environment information\n  html += `\n    <div class=\"diagnostic-section\">\n      <h4>Environment Information</h4>\n      <div class=\"diagnostic-grid\">\n        <div class=\"diagnostic-item\">\n          <strong>App Domain:</strong> ${diagnostics.environment.appDomain}\n        </div>\n        <div class=\"diagnostic-item\">\n          <strong>Origin:</strong> ${diagnostics.environment.origin}\n        </div>\n        <div class=\"diagnostic-item\">\n          <strong>Network Type:</strong> ${diagnostics.environment.networkInfo.connectionType}\n        </div>\n        <div class=\"diagnostic-item\">\n          <strong>Online Status:</strong> ${diagnostics.environment.networkInfo.online ? '✅ Online' : '❌ Offline'}\n        </div>\n      </div>\n    </div>\n  `;\n\n  html += `\n    <div class=\"diagnostic-actions\">\n      <button onclick=\"clearDiagnostics()\" class=\"btn-secondary\">Clear Logs</button>\n      <button onclick=\"exportDiagnostics()\" class=\"btn-secondary\">Export Diagnostics</button>\n    </div>\n  </div>\n  `;\n\n  diagnosticsDiv.innerHTML = html;\n}\n\n// Clear diagnostics\nfunction clearDiagnostics(): void {\n  if (seeqClient) {\n    seeqClient.clearDiagnostics();\n  }\n  const diagnosticsDiv = document.getElementById(\"diagnostics\");\n  if (diagnosticsDiv) {\n    diagnosticsDiv.innerHTML = '<div class=\"diagnostics-panel\"><p>Diagnostics cleared. Run a connection test to generate new diagnostics.</p></div>';\n  }\n}\n\n// Export diagnostics\nfunction exportDiagnostics(): void {\n  if (!seeqClient) return;\n  \n  const diagnostics = seeqClient.getDiagnostics();\n  const exportData = {\n    timestamp: new Date().toISOString(),\n    diagnostics,\n    userAgent: navigator.userAgent,\n    url: window.location.href\n  };\n  \n  const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `sqexcel-diagnostics-${new Date().toISOString().split('T')[0]}.json`;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n}\n\n// Make functions globally available\n(window as any).clearDiagnostics = clearDiagnostics;\n(window as any).exportDiagnostics = exportDiagnostics;\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>SqExcel Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" alt=\\\"SqExcel\\\" title=\\\"SqExcel\\\"/> <h1 class=\\\"ms-font-su\\\">Welcome to SqExcel</h1> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <div class=\\\"seeq-auth-section\\\"> <h3 class=\\\"ms-font-l\\\">Seeq Authentication</h3> <div class=\\\"auth-form\\\"> <div class=\\\"form-group\\\"> <label for=\\\"seeq-url\\\">Seeq Server URL:</label> <input type=\\\"url\\\" id=\\\"seeq-url\\\" placeholder=\\\"https://your-server.seeq.site\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"seeq-access-key\\\">Access Key:</label> <input type=\\\"text\\\" id=\\\"seeq-access-key\\\" placeholder=\\\"Your Seeq access key\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"seeq-password\\\">Password:</label> <input type=\\\"password\\\" id=\\\"seeq-password\\\" placeholder=\\\"Your Seeq password\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"auth-buttons\\\"> <button id=\\\"authenticate\\\" class=\\\"ms-Button ms-Button--primary\\\">Authenticate</button> <button id=\\\"logout\\\" class=\\\"ms-Button ms-Button--secondary\\\" style=\\\"display:none\\\">Logout</button> </div> </div> <div id=\\\"auth-status\\\" class=\\\"auth-status\\\"></div> </div> <div id=\\\"diagnostics\\\" class=\\\"diagnostics-section\\\"> <div class=\\\"diagnostics-panel\\\"> <h3>📋 Getting Started</h3> <h4>🔑 Step 1: Create a Seeq Access Key</h4> <ol> <li>Go to your Seeq environment in your web browser</li> <li>Click on your username in the top right corner</li> <li>Select \\\"Access Keys\\\" from the dropdown menu</li> <li>Click \\\"Create Access Key\\\"</li> <li>Give it a name (e.g., \\\"Excel Integration\\\")</li> <li>Copy both the <strong>Key ID</strong> and <strong>Password</strong> - you'll need both!</li> </ol> <h4>🔐 Step 2: Authenticate in Excel</h4> <ol> <li>Enter your Seeq server URL above (e.g., https://your-server.seeq.tech)</li> <li>Enter the Access Key ID and Password from Step 1</li> <li>Click \\\"Authenticate\\\"</li> <li>Once successful, you can use the Excel functions below!</li> </ol> <h4>⚡ Step 3: Use the Excel Functions</h4> <div class=\\\"function-examples\\\"> <div class=\\\"function-example\\\"> <h5>🔍 SEARCH_SENSORS</h5> <p>Find sensors in your Seeq environment:</p> <code>=SEARCH_SENSORS(A1:C1)</code> <p><small>Where A1:C1 contains sensor names like \\\"Temperature\\\", \\\"Pressure\\\", etc.</small></p> <div class=\\\"function-returns\\\"> <strong>Returns:</strong> A table with columns: <ul> <li><strong>Name:</strong> The actual sensor name in Seeq</li> <li><strong>ID:</strong> Unique sensor identifier</li> <li><strong>Datasource Name:</strong> Where the sensor data comes from</li> <li><strong>Value Unit Of Measure:</strong> Units (e.g., °C, PSI, etc.)</li> <li><strong>Description:</strong> Sensor description if available</li> </ul> </div> </div> <div class=\\\"function-example\\\"> <h5>📊 PULL</h5> <p>Get time series data from sensors:</p> <code>=PULL(A1:C1,\\\"2024-01-01T00:00:00\\\",\\\"2024-01-31T23:59:59)</code> <p><small>Default: 1000 points across the time range</small></p> <br> <code>=PULL(A1:C1,\\\"2024-01-01T00:00:00\\\",\\\"2024-01-31T23:59:59,\\\"grid\\\",\\\"15min\\\")</code> <p><small>Grid mode: Specify time interval (15min, 1h, 1d, etc.)</small></p> <br> <code>=PULL(A1:C1,\\\"2024-01-01T00:00:00\\\",\\\"2024-01-31T23:59:59,\\\"points\\\",500)</code> <p><small>Points mode: Specify number of data points</small></p> <div class=\\\"function-returns\\\"> <strong>Returns:</strong> A time series table with: <ul> <li><strong>Timestamp column:</strong> Time points (as Excel serial numbers - format as dates to see readable times)</li> <li><strong>Data columns:</strong> One column per sensor with actual measurement values</li> <li><strong>Grid spacing:</strong> Data points at your specified interval or calculated from points</li> </ul> <p><em>Note: Timestamps appear as large numbers - select the timestamp column and format as Date to see readable times!</em></p> </div> </div> </div> <h4>❓ Troubleshooting</h4> <ul> <li><strong>#NAME? errors:</strong> Make sure the add-in is properly loaded</li> <li><strong>Authentication fails:</strong> Check your Seeq server URL and credentials</li> <li><strong>No data returned:</strong> Verify your sensor names exist in Seeq</li> <li><strong>Need help?</strong> <a href=\\\"mailto:austin@radialflow.net\\\">Contact Us</a></li> </ul> </div> </div> <div class=\\\"search-section\\\" style=\\\"display:none\\\"> <h3 class=\\\"ms-font-l\\\">Sensor Search</h3> <div class=\\\"form-group\\\"> <label for=\\\"sensor-names\\\">Sensor Names (comma-separated):</label> <input type=\\\"text\\\" id=\\\"sensor-names\\\" placeholder=\\\"Sensor1, Sensor2, Sensor3\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"start-time\\\">Start Time:</label> <input type=\\\"datetime-local\\\" id=\\\"start-time\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"end-time\\\">End Time:</label> <input type=\\\"datetime-local\\\" id=\\\"end-time\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"data-mode\\\">Data Mode:</label> <select id=\\\"data-mode\\\" class=\\\"ms-TextField-field\\\"> <option value=\\\"points\\\">Points (number of data points)</option> <option value=\\\"grid\\\">Grid (time interval)</option> </select> </div> <div class=\\\"form-group\\\"> <label for=\\\"mode-value\\\" id=\\\"mode-value-label\\\">Number of Points:</label> <input type=\\\"number\\\" id=\\\"mode-value\\\" placeholder=\\\"1000\\\" value=\\\"1000\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"search-buttons\\\"> <button id=\\\"search-sensors\\\" class=\\\"ms-Button ms-Button--primary\\\">Search Sensors</button> <button id=\\\"pull-data\\\" class=\\\"ms-Button ms-Button--primary\\\">Pull Data</button> </div> <div id=\\\"search-results\\\" class=\\\"results-section\\\"></div> <div id=\\\"data-results\\\" class=\\\"results-section\\\"></div> </div> <p><label id=\\\"item-subject\\\"></label></p> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_arrayLikeToArray","Array","_defineProperties","_toPropertyKey","key","_defineProperty","_typeof","toPrimitive","String","_toPrimitive","SeeqAPIClient","seeqServerUrl","_classCallCheck","proxyUrl","logDiagnostic","concat","Intl","DateTimeFormat","resolvedOptions","timeZone","_e","data","isArray","timezoneOffset","Date","getTimezoneOffset","now","debugRow","toISOString","toString","firstRow","Timestamp","originalTimestamp","getTime","index","originalIndex","_arrayWithoutHoles","from","_iterableToArray","slice","constructor","name","_unsupportedIterableToArray","_nonIterableSpread","_toConsumableArray","category","message","logEntry","timestamp","userAgent","navigator","origin","appDomain","detectAppDomain","networkInfo","getNetworkInfo","diagnosticLog","push","Office","context","host","protocol","error","connection","mozConnection","webkitConnection","online","onLine","connectionType","effectiveType","downlink","rtt","clientInfo","isAuthenticated","authToken","diagnosticLogCount","environment","recentLogs","_testConnection","_callee","startTime","url","response","requestTime","allHeaders","errorData","_requestTime","errorType","_t","_context","fetch","method","headers","body","JSON","stringify","seeq_url","forEach","status","statusText","ok","json","success","status_code","diagnostics","response_headers","request_timing","user_agent","app_domain","network_type","cors_status","catch","errorName","errorStack","stack","includes","_authenticate","_callee2","accessKey","password","authProvider","ignoreSslErrors","errorMessage","_t2","_t3","_args2","_context2","credentials","username","auth_provider","ignore_ssl_errors","token","user","server_url","storeCredentialsForExcel","console","warn","_x","_x2","_storeCredentialsForExcel","_callee3","_context3","_searchSensors","_callee4","sensorNames","_this$credentials","_this$credentials2","_this$credentials3","_t4","_context4","search_results","sensor_count","sensor_names","sensorCount","searchResults","_x3","_searchAndPullSensors","_callee5","endTime","mode","modeValue","_this$credentials4","_this$credentials5","_this$credentials6","grid","numPoints","startDate","endDate","timeRangeMs","timeRangeSeconds","secondsPerPoint","_data$data","adjustedData","_t5","_args5","_context5","parseInt","Math","floor","calculatedGrid","start_time","end_time","user_timezone","getUserTimezone","dataLength","dataColumns","data_columns","adjustTimestampsForTimezone","data_index","time_range","start","end","_x4","_x5","_x6","_this$credentials7","_logout","_callee6","_this$credentials8","_t6","_t7","_context6","ADDIN_VERSION","seeqClient","loadVersionInfo","_loadVersionInfo","versionData","version","initializeSeeqAuth","authenticateBtn","getElementById","logoutBtn","searchSensorsBtn","pullDataBtn","onclick","authenticateWithSeeq","logoutFromSeeq","searchSensors","pullSensorData","dataModeSelect","onchange","handleModeChange","saved","localStorage","getItem","parse","updateAuthUI","showAuthStatus","removeItem","loadSavedCredentials","modeValueInput","modeValueLabel","textContent","placeholder","type","_authenticateWithSeeq","_document$getElementB","_document$getElementB2","_document$getElementB3","result","authenticate","saveCredentials","updateExcelCache","_document$getElementB4","sensorNamesInput","split","map","trim","filter","displaySearchResults","_pullSensorData","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","_document$getElementB9","startTimeInput","endTimeInput","dataMode","searchAndPullSensors","displayDataResults","logout","statusElement","className","authBtn","urlInput","accessKeyInput","passwordInput","style","display","disabled","ignoreSsl","setItem","operationType","jsonData","cacheUpdate","Excel","run","_ref2","workbook","worksheets","getActiveWorksheet","getRange","values","sync","results","resultsDiv","html","Original_Name","Name","ID","Type","Status","innerHTML","dataToShow","isDebugRow","keys","some","startsWith","col","join","row","onReady","sideloadMsg","appBody","clearDiagnostics","diagnosticsDiv","exportDiagnostics","getDiagnostics","exportData","blob","Blob","URL","createObjectURL","createElement","download","appendChild","click","removeChild","revokeObjectURL"],"sourceRoot":""}