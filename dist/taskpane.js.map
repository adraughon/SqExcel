{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/webpack/runtime/define property getters","webpack://excel-custom-functions/webpack/runtime/global","webpack://excel-custom-functions/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions/webpack/runtime/publicPath","webpack://excel-custom-functions/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions/./src/taskpane/taskpane.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n// Backend server configuration\nconst BACKEND_URL = 'https://localhost:3000';\n\n// The initialize function must be run each time a new page is loaded\nOffice.onReady(() => {\n  document.getElementById(\"sideload-msg\").style.display = \"none\";\n  document.getElementById(\"app-body\").style.display = \"flex\";\n  document.getElementById(\"run\").onclick = run;\n  \n  // Initialize Seeq authentication\n  initializeSeeqAuth();\n});\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      /**\n       * Insert your Excel code here\n       */\n      const range = context.workbook.getSelectedRange();\n\n      // Read the range address\n      range.load(\"address\");\n\n      // Update the fill color\n      range.format.fill.color = \"yellow\";\n\n      await context.sync();\n      console.log(`The range address was ${range.address}.`);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// Seeq Authentication Interface\ninterface SeeqAuthResult {\n  success: boolean;\n  message: string;\n  user?: string;\n  server_url?: string;\n  error?: string;\n}\n\ninterface SeeqConnectionResult {\n  success: boolean;\n  message: string;\n  status_code?: number;\n  error?: string;\n}\n\n// Seeq Authentication Functions\nfunction initializeSeeqAuth(): void {\n  const testConnectionBtn = document.getElementById(\"test-connection\") as HTMLButtonElement;\n  const authenticateBtn = document.getElementById(\"authenticate\") as HTMLButtonElement;\n  const logoutBtn = document.getElementById(\"logout\") as HTMLButtonElement;\n  const searchSensorsBtn = document.getElementById(\"search-sensors\") as HTMLButtonElement;\n  const pullDataBtn = document.getElementById(\"pull-data\") as HTMLButtonElement;\n\n  if (testConnectionBtn) {\n    testConnectionBtn.onclick = testSeeqConnection;\n  }\n  \n  if (authenticateBtn) {\n    authenticateBtn.onclick = authenticateWithSeeq;\n  }\n  \n  if (logoutBtn) {\n    logoutBtn.onclick = logoutFromSeeq;\n  }\n\n  if (searchSensorsBtn) {\n    searchSensorsBtn.onclick = searchSensors;\n  }\n\n  if (pullDataBtn) {\n    pullDataBtn.onclick = pullSensorData;\n  }\n\n  // Load saved credentials if available\n  loadSavedCredentials();\n}\n\nasync function testSeeqConnection(): Promise<void> {\n  const url = (document.getElementById(\"seeq-url\") as HTMLInputElement)?.value;\n  \n  if (!url) {\n    showAuthStatus(\"Please enter a Seeq server URL\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Testing connection...\", \"loading\");\n  \n  try {\n    // Call the Python backend to test connection\n    const result = await testConnection(url);\n    \n    if (result.success) {\n      showAuthStatus(result.message, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"auth\", result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Connection test failed: ${error}`, \"error\");\n  }\n}\n\nasync function authenticateWithSeeq(): Promise<void> {\n  const url = (document.getElementById(\"seeq-url\") as HTMLInputElement)?.value;\n  const accessKey = (document.getElementById(\"seeq-access-key\") as HTMLInputElement)?.value;\n  const password = (document.getElementById(\"seeq-password\") as HTMLInputElement)?.value;\n  const ignoreSsl = (document.getElementById(\"ignore-ssl\") as HTMLInputElement)?.checked;\n\n  if (!url || !accessKey || !password) {\n    showAuthStatus(\"Please fill in all required fields\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Authenticating...\", \"loading\");\n  \n  try {\n    // Call the Python backend to authenticate\n    const result = await authenticate(url, accessKey, password, ignoreSsl);\n    \n    if (result.success) {\n      showAuthStatus(\"Authentication successful\", \"success\");\n      saveCredentials(url, accessKey, password, ignoreSsl);\n      updateAuthUI(true);\n      // Update Excel function cache\n      updateExcelCache(\"auth\", result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Authentication failed: ${error}`, \"error\");\n  }\n}\n\nasync function searchSensors(): Promise<void> {\n  const sensorNamesInput = (document.getElementById(\"sensor-names\") as HTMLInputElement)?.value;\n  \n  if (!sensorNamesInput) {\n    showAuthStatus(\"Please enter sensor names to search for\", \"error\");\n    return;\n  }\n\n  const sensorNames = sensorNamesInput.split(',').map(name => name.trim()).filter(name => name);\n  \n  if (sensorNames.length === 0) {\n    showAuthStatus(\"Please enter valid sensor names\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Searching for sensors...\", \"loading\");\n  \n  try {\n    // Call the Python backend to search for sensors\n    const result = await searchSensorsOnly(sensorNames);\n    \n    if (result.success) {\n      showAuthStatus(`Found ${result.sensor_count} sensors`, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"search\", result);\n      // Display results\n      displaySearchResults(result.search_results);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Sensor search failed: ${error}`, \"error\");\n  }\n}\n\nasync function pullSensorData(): Promise<void> {\n  const sensorNamesInput = (document.getElementById(\"sensor-names\") as HTMLInputElement)?.value;\n  const startTimeInput = (document.getElementById(\"start-time\") as HTMLInputElement)?.value;\n  const endTimeInput = (document.getElementById(\"end-time\") as HTMLInputElement)?.value;\n  const gridInput = (document.getElementById(\"grid-interval\") as HTMLInputElement)?.value;\n  \n  if (!sensorNamesInput || !startTimeInput || !endTimeInput) {\n    showAuthStatus(\"Please fill in all required fields\", \"error\");\n    return;\n  }\n\n  const sensorNames = sensorNamesInput.split(',').map(name => name.trim()).filter(name => name);\n  const grid = gridInput || \"15min\";\n  \n  if (sensorNames.length === 0) {\n    showAuthStatus(\"Please enter valid sensor names\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Pulling sensor data...\", \"loading\");\n  \n  try {\n    // Call the Python backend to search and pull data\n    const result = await searchAndPullSensors(sensorNames, startTimeInput, endTimeInput, grid);\n    \n    if (result.success) {\n      showAuthStatus(`Retrieved data for ${result.sensor_count} sensors`, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"data\", result);\n      // Display results\n      displayDataResults(result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Data retrieval failed: ${error}`, \"error\");\n  }\n}\n\nfunction logoutFromSeeq(): void {\n  // Clear saved credentials\n  localStorage.removeItem(\"seeq_credentials\");\n  \n  // Clear credentials from backend so Excel functions won't work\n  try {\n    fetch(`${BACKEND_URL}/api/seeq/credentials`, {\n      method: 'DELETE'\n    }).catch(error => {\n      console.log(\"Could not clear backend credentials:\", error);\n    });\n  } catch (error) {\n    console.log(\"Could not clear backend credentials:\", error);\n  }\n  \n  // Update UI\n  updateAuthUI(false);\n  showAuthStatus(\"Logged out successfully\", \"info\");\n  \n  // Clear form fields\n  (document.getElementById(\"seeq-url\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"seeq-access-key\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"seeq-password\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"ignore-ssl\") as HTMLInputElement).checked = false;\n}\n\nfunction showAuthStatus(message: string, type: \"success\" | \"error\" | \"info\" | \"loading\"): void {\n  const statusElement = document.getElementById(\"auth-status\");\n  if (statusElement) {\n    statusElement.textContent = message;\n    statusElement.className = `auth-status ${type}`;\n  }\n}\n\nfunction updateAuthUI(isAuthenticated: boolean): void {\n  const testBtn = document.getElementById(\"test-connection\") as HTMLButtonElement;\n  const authBtn = document.getElementById(\"authenticate\") as HTMLButtonElement;\n  const logoutBtn = document.getElementById(\"logout\") as HTMLButtonElement;\n  const urlInput = document.getElementById(\"seeq-url\") as HTMLInputElement;\n  const accessKeyInput = document.getElementById(\"seeq-access-key\") as HTMLInputElement;\n  const passwordInput = document.getElementById(\"seeq-password\") as HTMLInputElement;\n  const sslCheckbox = document.getElementById(\"ignore-ssl\") as HTMLInputElement;\n\n  if (isAuthenticated) {\n    testBtn.style.display = \"none\";\n    authBtn.style.display = \"none\";\n    logoutBtn.style.display = \"inline-block\";\n    \n    // Disable form inputs\n    urlInput.disabled = true;\n    accessKeyInput.disabled = true;\n    passwordInput.disabled = true;\n    sslCheckbox.disabled = true;\n  } else {\n    testBtn.style.display = \"inline-block\";\n    authBtn.style.display = \"inline-block\";\n    logoutBtn.style.display = \"none\";\n    \n    // Enable form inputs\n    urlInput.disabled = false;\n    accessKeyInput.disabled = false;\n    passwordInput.disabled = false;\n    sslCheckbox.disabled = false;\n  }\n}\n\nfunction saveCredentials(url: string, accessKey: string, password: string, ignoreSsl: boolean): void {\n  const credentials = {\n    url,\n    accessKey,\n    password,\n    ignoreSsl,\n    timestamp: new Date().toISOString()\n  };\n  \n  localStorage.setItem(\"seeq_credentials\", JSON.stringify(credentials));\n}\n\n// Function to update credentials in the backend for Excel functions\nasync function updateBackendCredentials(url: string, accessKey: string, password: string, ignoreSsl: boolean): Promise<void> {\n  try {\n    const response = await fetch(`${BACKEND_URL}/api/seeq/credentials`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ \n        url, \n        accessKey, \n        password, \n        authProvider: 'Seeq', \n        ignoreSslErrors: ignoreSsl,\n        timestamp: new Date().toISOString()\n      })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const result = await response.json();\n    if (result.success) {\n      showAuthStatus(\"Credentials updated for Excel functions\", \"success\");\n    } else {\n      showAuthStatus(\"Failed to update credentials for Excel functions\", \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Failed to update backend credentials: ${error}`, \"error\");\n  }\n}\n\nfunction loadSavedCredentials(): void {\n  const saved = localStorage.getItem(\"seeq_credentials\");\n  if (saved) {\n    try {\n      const credentials = JSON.parse(saved);\n      \n      (document.getElementById(\"seeq-url\") as HTMLInputElement).value = credentials.url || \"\";\n      (document.getElementById(\"seeq-access-key\") as HTMLInputElement).value = credentials.accessKey || \"\";\n      (document.getElementById(\"seeq-password\") as HTMLInputElement).value = credentials.password || \"\";\n      (document.getElementById(\"ignore-ssl\") as HTMLInputElement).checked = credentials.ignoreSsl || false;\n      \n      // Check if credentials are still valid (not expired)\n      const savedTime = new Date(credentials.timestamp);\n      const now = new Date();\n      const hoursDiff = (now.getTime() - savedTime.getTime()) / (1000 * 60 * 60);\n      \n      if (hoursDiff < 24) { // Credentials valid for 24 hours\n        updateAuthUI(true);\n        showAuthStatus(\"Using saved credentials\", \"info\");\n      } else {\n        // Clear expired credentials\n        localStorage.removeItem(\"seeq_credentials\");\n      }\n    } catch (error) {\n      console.error(\"Failed to load saved credentials:\", error);\n    }\n  }\n}\n\n\n\n// Python backend integration functions\nasync function testConnection(url: string): Promise<SeeqConnectionResult> {\n  try {\n    const response = await fetch(`${BACKEND_URL}/api/seeq/test-connection`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    // Fallback to direct Python call if API not available\n    return await callPythonBackend('test_connection', [url]);\n  }\n}\n\nasync function authenticate(url: string, accessKey: string, password: string, ignoreSsl: boolean): Promise<SeeqAuthResult> {\n  try {\n    const response = await fetch(`${BACKEND_URL}/api/seeq/auth`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url, accessKey, password, authProvider: 'Seeq', ignoreSslErrors: ignoreSsl })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const result = await response.json();\n    \n    // If authentication is successful, also send credentials to the credentials endpoint\n    // so Excel functions can access them\n    if (result.success) {\n      try {\n        await fetch(`${BACKEND_URL}/api/seeq/credentials`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ \n            url, \n            accessKey, \n            password, \n            authProvider: 'Seeq', \n            ignoreSslErrors: ignoreSsl,\n            timestamp: new Date().toISOString()\n          })\n        });\n      } catch (credError) {\n        console.log(\"Could not update credentials endpoint:\", credError);\n        // Don't fail authentication if credentials endpoint update fails\n      }\n    }\n    \n    return result;\n  } catch (error) {\n    // Fallback to direct Python call if API not available\n    return await callPythonBackend('authenticate_seeq', [url, accessKey, password, 'Seeq', ignoreSsl]);\n  }\n}\n\nasync function searchSensorsOnly(sensorNames: string[]): Promise<any> {\n  try {\n    // Get stored credentials\n    const saved = localStorage.getItem(\"seeq_credentials\");\n    if (!saved) {\n      throw new Error('No stored credentials. Please authenticate first.');\n    }\n    \n    const credentials = JSON.parse(saved);\n    \n    const response = await fetch(`${BACKEND_URL}/api/seeq/search-sensors`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ \n        sensorNames,\n        url: credentials.url,\n        accessKey: credentials.accessKey,\n        password: credentials.password,\n        authProvider: 'Seeq',\n        ignoreSslErrors: credentials.ignoreSsl\n      })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    // Fallback to direct Python call if API not available\n    return await callPythonBackend('search_sensors_only', [sensorNames]);\n  }\n}\n\nasync function searchAndPullSensors(sensorNames: string[], startTime: string, endTime: string, grid: string): Promise<any> {\n  try {\n    // Get stored credentials\n    const saved = localStorage.getItem(\"seeq_credentials\");\n    if (!saved) {\n      throw new Error('No stored credentials. Please authenticate first.');\n    }\n    \n    const credentials = JSON.parse(saved);\n    \n    const response = await fetch(`${BACKEND_URL}/api/seeq/sensor-data`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ \n        sensorNames, \n        startDatetime: startTime, \n        endDatetime: endTime, \n        grid,\n        url: credentials.url,\n        accessKey: credentials.accessKey,\n        password: credentials.password,\n        authProvider: 'Seeq',\n        ignoreSslErrors: credentials.ignoreSsl\n      })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    // Fallback to direct Python call if API not available\n    return await callPythonBackend('search_and_pull_sensors', [sensorNames, startTime, endTime, grid]);\n  }\n}\n\n// Direct Python backend call (fallback)\nasync function callPythonBackend(functionName: string, args: any[]): Promise<any> {\n  // This would be implemented to directly call the Python backend\n  // For now, return a placeholder\n  return {\n    success: false,\n    message: \"Direct Python backend calls not yet implemented\",\n    error: \"Use taskpane interface instead\"\n  };\n}\n\n// Update Excel function cache\nfunction updateExcelCache(operationType: string, data: any): void {\n  try {\n    // Call the Excel function to update cache\n    const dataJson = JSON.stringify(data);\n    const cacheUpdate = `=SEEQ_UPDATE_CACHE(\"${operationType}\", '${dataJson}')`;\n    \n    // Insert the cache update into the active worksheet\n    Excel.run(async (context) => {\n      const worksheet = context.workbook.worksheets.getActiveWorksheet();\n      const range = worksheet.getRange(\"A1\");\n      range.values = [[cacheUpdate]];\n      await context.sync();\n    }).catch(error => {\n      console.log(\"Could not update Excel cache automatically:\", error);\n      console.log(\"Manual cache update required:\", cacheUpdate);\n    });\n    \n  } catch (error) {\n    console.error(\"Failed to update Excel cache:\", error);\n  }\n}\n\n// Display functions for results\nfunction displaySearchResults(results: any[]): void {\n  const resultsDiv = document.getElementById(\"search-results\");\n  if (resultsDiv) {\n    resultsDiv.innerHTML = `\n      <h3>Search Results (${results.length} sensors)</h3>\n      <div class=\"results-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Original Name</th>\n              <th>Seeq Name</th>\n              <th>ID</th>\n              <th>Type</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${results.map(sensor => `\n              <tr>\n                <td>${sensor.Original_Name || sensor.Name || 'N/A'}</td>\n                <td>${sensor.Name || 'N/A'}</td>\n                <td>${sensor.ID || 'Not Found'}</td>\n                <td>${sensor.Type || 'N/A'}</td>\n                <td>${sensor.Status || 'Unknown'}</td>\n              </tr>\n            `).join('')}\n          </tbody>\n        </table>\n      </div>\n    `;\n  }\n}\n\nfunction displayDataResults(result: any): void {\n  const resultsDiv = document.getElementById(\"data-results\");\n  if (resultsDiv && result.data && result.data.length > 0) {\n    const sampleData = result.data.slice(0, 10); // Show first 10 rows\n    resultsDiv.innerHTML = `\n      <h3>Data Results (${result.data.length} rows)</h3>\n      <div class=\"results-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Timestamp</th>\n              ${result.data_columns.map((col: string) => `<th>${col}</th>`).join('')}\n            </tr>\n          </thead>\n          <tbody>\n            ${sampleData.map((row: any) => `\n              <tr>\n                <td>${row.Timestamp || row.index || 'N/A'}</td>\n                ${result.data_columns.map((col: string) => `<td>${row[col] !== undefined ? row[col] : 'N/A'}</td>`).join('')}\n              </tr>\n            `).join('')}\n          </tbody>\n        </table>\n        ${result.data.length > 10 ? `<p><em>Showing first 10 of ${result.data.length} rows</em></p>` : ''}\n      </div>\n    `;\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>SqExcel Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\" alt=\\\"SqExcel\\\" title=\\\"SqExcel\\\"/> <h1 class=\\\"ms-font-su\\\">Welcome to SqExcel</h1> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <h2 class=\\\"ms-font-xl\\\">Welcome to SqExcel - Your Excel Power Tool!</h2> <div class=\\\"seeq-auth-section\\\"> <h3 class=\\\"ms-font-l\\\">Seeq Authentication</h3> <div class=\\\"auth-form\\\"> <div class=\\\"form-group\\\"> <label for=\\\"seeq-url\\\">Seeq Server URL:</label> <input type=\\\"url\\\" id=\\\"seeq-url\\\" placeholder=\\\"https://your-server.seeq.site\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"seeq-access-key\\\">Access Key:</label> <input type=\\\"text\\\" id=\\\"seeq-access-key\\\" placeholder=\\\"Your Seeq access key\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"seeq-password\\\">Password:</label> <input type=\\\"password\\\" id=\\\"seeq-password\\\" placeholder=\\\"Your Seeq password\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"ignore-ssl\\\">Ignore SSL Errors:</label> <input type=\\\"checkbox\\\" id=\\\"ignore-ssl\\\" class=\\\"ms-Checkbox-input\\\"> </div> <div class=\\\"auth-buttons\\\"> <button id=\\\"test-connection\\\" class=\\\"ms-Button ms-Button--primary\\\">Test Connection</button> <button id=\\\"authenticate\\\" class=\\\"ms-Button ms-Button--primary\\\">Authenticate</button> <button id=\\\"logout\\\" class=\\\"ms-Button ms-Button--secondary\\\" style=\\\"display:none\\\">Logout</button> </div> </div> <div id=\\\"auth-status\\\" class=\\\"auth-status\\\"></div> </div> <p><label id=\\\"item-subject\\\"></label></p> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","_invoke","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","BACKEND_URL","run","_run","_callee3","_t","_context3","Excel","_ref2","_callee2","context","range","_context2","workbook","getSelectedRange","load","format","fill","color","sync","console","log","concat","address","_x16","error","testSeeqConnection","_testSeeqConnection","_callee4","_document$getElementB","url","result","_t2","_context4","getElementById","showAuthStatus","testConnection","success","message","updateExcelCache","authenticateWithSeeq","_authenticateWithSeeq","_callee5","_document$getElementB2","_document$getElementB3","_document$getElementB4","_document$getElementB5","accessKey","password","ignoreSsl","_t3","_context5","checked","authenticate","saveCredentials","updateAuthUI","searchSensors","_searchSensors","_callee6","_document$getElementB6","sensorNamesInput","sensorNames","_t4","_context6","split","map","name","trim","filter","searchSensorsOnly","sensor_count","displaySearchResults","search_results","pullSensorData","_pullSensorData","_callee7","_document$getElementB7","_document$getElementB8","_document$getElementB9","_document$getElementB0","startTimeInput","endTimeInput","gridInput","grid","_t5","_context7","searchAndPullSensors","displayDataResults","logoutFromSeeq","localStorage","removeItem","fetch","method","catch","type","statusElement","textContent","className","isAuthenticated","testBtn","authBtn","logoutBtn","urlInput","accessKeyInput","passwordInput","sslCheckbox","style","display","disabled","credentials","timestamp","Date","toISOString","setItem","JSON","stringify","_x5","_testConnection","_callee9","response","_context9","headers","body","ok","status","json","callPythonBackend","_x6","_x7","_x8","_x9","_authenticate","_callee0","_t8","_context0","authProvider","ignoreSslErrors","_x0","_searchSensorsOnly","_callee1","saved","_context1","getItem","parse","_x1","_x10","_x11","_x12","_searchAndPullSensors","_callee10","startTime","endTime","_context10","startDatetime","endDatetime","_x13","_x14","_callPythonBackend","_callee11","functionName","args","_context11","operationType","data","dataJson","cacheUpdate","_ref","_callee","_context","worksheets","getActiveWorksheet","getRange","values","_x15","results","resultsDiv","innerHTML","sensor","Original_Name","Name","ID","Type","Status","join","sampleData","slice","data_columns","col","row","Timestamp","index","Office","onReady","testConnectionBtn","authenticateBtn","searchSensorsBtn","pullDataBtn","onclick","savedTime","getTime","loadSavedCredentials","URL"],"sourceRoot":""}