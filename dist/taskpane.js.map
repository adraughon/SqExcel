{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/webpack/runtime/global","webpack://excel-custom-functions/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions/webpack/runtime/publicPath","webpack://excel-custom-functions/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions/./src/taskpane/taskpane.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n// Backend server configuration\nconst BACKEND_URL = 'https://localhost:3000';\n\n// The initialize function must be run each time a new page is loaded\nOffice.onReady(() => {\n  document.getElementById(\"sideload-msg\").style.display = \"none\";\n  document.getElementById(\"app-body\").style.display = \"flex\";\n  \n  // Initialize Seeq authentication\n  initializeSeeqAuth();\n});\n\n\n\n// Seeq Authentication Interface\ninterface SeeqAuthResult {\n  success: boolean;\n  message: string;\n  user?: string;\n  server_url?: string;\n  error?: string;\n}\n\ninterface SeeqConnectionResult {\n  success: boolean;\n  message: string;\n  status_code?: number;\n  error?: string;\n}\n\n// Seeq Authentication Functions\nfunction initializeSeeqAuth(): void {\n  const testConnectionBtn = document.getElementById(\"test-connection\") as HTMLButtonElement;\n  const authenticateBtn = document.getElementById(\"authenticate\") as HTMLButtonElement;\n  const logoutBtn = document.getElementById(\"logout\") as HTMLButtonElement;\n  const searchSensorsBtn = document.getElementById(\"search-sensors\") as HTMLButtonElement;\n  const pullDataBtn = document.getElementById(\"pull-data\") as HTMLButtonElement;\n\n  if (testConnectionBtn) {\n    testConnectionBtn.onclick = testSeeqConnection;\n  }\n  \n  if (authenticateBtn) {\n    authenticateBtn.onclick = authenticateWithSeeq;\n  }\n  \n  if (logoutBtn) {\n    logoutBtn.onclick = logoutFromSeeq;\n  }\n\n  if (searchSensorsBtn) {\n    searchSensorsBtn.onclick = searchSensors;\n  }\n\n  if (pullDataBtn) {\n    pullDataBtn.onclick = pullSensorData;\n  }\n\n  // Load saved credentials if available\n  loadSavedCredentials();\n}\n\nasync function testSeeqConnection(): Promise<void> {\n  const url = (document.getElementById(\"seeq-url\") as HTMLInputElement)?.value;\n  \n  if (!url) {\n    showAuthStatus(\"Please enter a Seeq server URL\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Testing connection...\", \"loading\");\n  \n  try {\n    // Call the Python backend to test connection\n    const result = await testConnection(url);\n    \n    if (result.success) {\n      showAuthStatus(result.message, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"auth\", result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Connection test failed: ${error}`, \"error\");\n  }\n}\n\nasync function authenticateWithSeeq(): Promise<void> {\n  const url = (document.getElementById(\"seeq-url\") as HTMLInputElement)?.value;\n  const accessKey = (document.getElementById(\"seeq-access-key\") as HTMLInputElement)?.value;\n  const password = (document.getElementById(\"seeq-password\") as HTMLInputElement)?.value;\n  const ignoreSsl = (document.getElementById(\"ignore-ssl\") as HTMLInputElement)?.checked;\n\n  if (!url || !accessKey || !password) {\n    showAuthStatus(\"Please fill in all required fields\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Authenticating...\", \"loading\");\n  \n  try {\n    // Call the Python backend to authenticate\n    const result = await authenticate(url, accessKey, password, ignoreSsl);\n    \n    if (result.success) {\n      showAuthStatus(\"Authentication successful\", \"success\");\n      saveCredentials(url, accessKey, password, ignoreSsl);\n      updateAuthUI(true);\n      // Update Excel function cache\n      updateExcelCache(\"auth\", result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Authentication failed: ${error}`, \"error\");\n  }\n}\n\nasync function searchSensors(): Promise<void> {\n  const sensorNamesInput = (document.getElementById(\"sensor-names\") as HTMLInputElement)?.value;\n  \n  if (!sensorNamesInput) {\n    showAuthStatus(\"Please enter sensor names to search for\", \"error\");\n    return;\n  }\n\n  const sensorNames = sensorNamesInput.split(',').map(name => name.trim()).filter(name => name);\n  \n  if (sensorNames.length === 0) {\n    showAuthStatus(\"Please enter valid sensor names\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Searching for sensors...\", \"loading\");\n  \n  try {\n    // Call the Python backend to search for sensors\n    const result = await searchSensorsOnly(sensorNames);\n    \n    if (result.success) {\n      showAuthStatus(`Found ${result.sensor_count} sensors`, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"search\", result);\n      // Display results\n      displaySearchResults(result.search_results);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Sensor search failed: ${error}`, \"error\");\n  }\n}\n\nasync function pullSensorData(): Promise<void> {\n  const sensorNamesInput = (document.getElementById(\"sensor-names\") as HTMLInputElement)?.value;\n  const startTimeInput = (document.getElementById(\"start-time\") as HTMLInputElement)?.value;\n  const endTimeInput = (document.getElementById(\"end-time\") as HTMLInputElement)?.value;\n  const gridInput = (document.getElementById(\"grid-interval\") as HTMLInputElement)?.value;\n  \n  if (!sensorNamesInput || !startTimeInput || !endTimeInput) {\n    showAuthStatus(\"Please fill in all required fields\", \"error\");\n    return;\n  }\n\n  const sensorNames = sensorNamesInput.split(',').map(name => name.trim()).filter(name => name);\n  const grid = gridInput || \"15min\";\n  \n  if (sensorNames.length === 0) {\n    showAuthStatus(\"Please enter valid sensor names\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Pulling sensor data...\", \"loading\");\n  \n  try {\n    // Call the Python backend to search and pull data\n    const result = await searchAndPullSensors(sensorNames, startTimeInput, endTimeInput, grid);\n    \n    if (result.success) {\n      showAuthStatus(`Retrieved data for ${result.sensor_count} sensors`, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"data\", result);\n      // Display results\n      displayDataResults(result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Data retrieval failed: ${error}`, \"error\");\n  }\n}\n\nfunction logoutFromSeeq(): void {\n  // Clear saved credentials\n  localStorage.removeItem(\"seeq_credentials\");\n  \n  // Clear credentials from backend so Excel functions won't work\n  try {\n    fetch(`${BACKEND_URL}/api/seeq/credentials`, {\n      method: 'DELETE'\n    }).catch(error => {\n      console.log(\"Could not clear backend credentials:\", error);\n    });\n  } catch (error) {\n    console.log(\"Could not clear backend credentials:\", error);\n  }\n  \n  // Update UI\n  updateAuthUI(false);\n  showAuthStatus(\"Logged out successfully\", \"info\");\n  \n  // Clear form fields\n  (document.getElementById(\"seeq-url\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"seeq-access-key\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"seeq-password\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"ignore-ssl\") as HTMLInputElement).checked = false;\n}\n\nfunction showAuthStatus(message: string, type: \"success\" | \"error\" | \"info\" | \"loading\"): void {\n  const statusElement = document.getElementById(\"auth-status\");\n  if (statusElement) {\n    statusElement.textContent = message;\n    statusElement.className = `auth-status ${type}`;\n  }\n}\n\nfunction updateAuthUI(isAuthenticated: boolean): void {\n  const testBtn = document.getElementById(\"test-connection\") as HTMLButtonElement;\n  const authBtn = document.getElementById(\"authenticate\") as HTMLButtonElement;\n  const logoutBtn = document.getElementById(\"logout\") as HTMLButtonElement;\n  const urlInput = document.getElementById(\"seeq-url\") as HTMLInputElement;\n  const accessKeyInput = document.getElementById(\"seeq-access-key\") as HTMLInputElement;\n  const passwordInput = document.getElementById(\"seeq-password\") as HTMLInputElement;\n  const sslCheckbox = document.getElementById(\"ignore-ssl\") as HTMLInputElement;\n\n  if (isAuthenticated) {\n    testBtn.style.display = \"none\";\n    authBtn.style.display = \"none\";\n    logoutBtn.style.display = \"inline-block\";\n    \n    // Disable form inputs\n    urlInput.disabled = true;\n    accessKeyInput.disabled = true;\n    passwordInput.disabled = true;\n    sslCheckbox.disabled = true;\n  } else {\n    testBtn.style.display = \"inline-block\";\n    authBtn.style.display = \"inline-block\";\n    logoutBtn.style.display = \"none\";\n    \n    // Enable form inputs\n    urlInput.disabled = false;\n    accessKeyInput.disabled = false;\n    passwordInput.disabled = false;\n    sslCheckbox.disabled = false;\n  }\n}\n\nfunction saveCredentials(url: string, accessKey: string, password: string, ignoreSsl: boolean): void {\n  const credentials = {\n    url,\n    accessKey,\n    password,\n    ignoreSsl,\n    timestamp: new Date().toISOString()\n  };\n  \n  localStorage.setItem(\"seeq_credentials\", JSON.stringify(credentials));\n}\n\n// Function to update credentials in the backend for Excel functions\nasync function updateBackendCredentials(url: string, accessKey: string, password: string, ignoreSsl: boolean): Promise<void> {\n  try {\n    const response = await fetch(`${BACKEND_URL}/api/seeq/credentials`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ \n        url, \n        accessKey, \n        password, \n        authProvider: 'Seeq', \n        ignoreSslErrors: ignoreSsl,\n        timestamp: new Date().toISOString()\n      })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const result = await response.json();\n    if (result.success) {\n      showAuthStatus(\"Credentials updated for Excel functions\", \"success\");\n    } else {\n      showAuthStatus(\"Failed to update credentials for Excel functions\", \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Failed to update backend credentials: ${error}`, \"error\");\n  }\n}\n\nfunction loadSavedCredentials(): void {\n  const saved = localStorage.getItem(\"seeq_credentials\");\n  if (saved) {\n    try {\n      const credentials = JSON.parse(saved);\n      \n      (document.getElementById(\"seeq-url\") as HTMLInputElement).value = credentials.url || \"\";\n      (document.getElementById(\"seeq-access-key\") as HTMLInputElement).value = credentials.accessKey || \"\";\n      (document.getElementById(\"seeq-password\") as HTMLInputElement).value = credentials.password || \"\";\n      (document.getElementById(\"ignore-ssl\") as HTMLInputElement).checked = credentials.ignoreSsl || false;\n      \n      // Check if credentials are still valid (not expired)\n      const savedTime = new Date(credentials.timestamp);\n      const now = new Date();\n      const hoursDiff = (now.getTime() - savedTime.getTime()) / (1000 * 60 * 60);\n      \n      if (hoursDiff < 24) { // Credentials valid for 24 hours\n        updateAuthUI(true);\n        showAuthStatus(\"Using saved credentials\", \"info\");\n      } else {\n        // Clear expired credentials\n        localStorage.removeItem(\"seeq_credentials\");\n      }\n    } catch (error) {\n      console.error(\"Failed to load saved credentials:\", error);\n    }\n  }\n}\n\n\n\n// Python backend integration functions\nasync function testConnection(url: string): Promise<SeeqConnectionResult> {\n  try {\n    const response = await fetch(`${BACKEND_URL}/api/seeq/test-connection`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    // Fallback to direct Python call if API not available\n    return await callPythonBackend('test_connection', [url]);\n  }\n}\n\nasync function authenticate(url: string, accessKey: string, password: string, ignoreSsl: boolean): Promise<SeeqAuthResult> {\n  try {\n    const response = await fetch(`${BACKEND_URL}/api/seeq/auth`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url, accessKey, password, authProvider: 'Seeq', ignoreSslErrors: ignoreSsl })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const result = await response.json();\n    \n    // If authentication is successful, also send credentials to the credentials endpoint\n    // so Excel functions can access them\n    if (result.success) {\n      try {\n        await fetch(`${BACKEND_URL}/api/seeq/credentials`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ \n            url, \n            accessKey, \n            password, \n            authProvider: 'Seeq', \n            ignoreSslErrors: ignoreSsl,\n            timestamp: new Date().toISOString()\n          })\n        });\n      } catch (credError) {\n        console.log(\"Could not update credentials endpoint:\", credError);\n        // Don't fail authentication if credentials endpoint update fails\n      }\n    }\n    \n    return result;\n  } catch (error) {\n    // Fallback to direct Python call if API not available\n    return await callPythonBackend('authenticate_seeq', [url, accessKey, password, 'Seeq', ignoreSsl]);\n  }\n}\n\nasync function searchSensorsOnly(sensorNames: string[]): Promise<any> {\n  try {\n    // Get stored credentials\n    const saved = localStorage.getItem(\"seeq_credentials\");\n    if (!saved) {\n      throw new Error('No stored credentials. Please authenticate first.');\n    }\n    \n    const credentials = JSON.parse(saved);\n    \n    const response = await fetch(`${BACKEND_URL}/api/seeq/search-sensors`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ \n        sensorNames,\n        url: credentials.url,\n        accessKey: credentials.accessKey,\n        password: credentials.password,\n        authProvider: 'Seeq',\n        ignoreSslErrors: credentials.ignoreSsl\n      })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    // Fallback to direct Python call if API not available\n    return await callPythonBackend('search_sensors_only', [sensorNames]);\n  }\n}\n\nasync function searchAndPullSensors(sensorNames: string[], startTime: string, endTime: string, grid: string): Promise<any> {\n  try {\n    // Get stored credentials\n    const saved = localStorage.getItem(\"seeq_credentials\");\n    if (!saved) {\n      throw new Error('No stored credentials. Please authenticate first.');\n    }\n    \n    const credentials = JSON.parse(saved);\n    \n    const response = await fetch(`${BACKEND_URL}/api/seeq/sensor-data`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ \n        sensorNames, \n        startDatetime: startTime, \n        endDatetime: endTime, \n        grid,\n        url: credentials.url,\n        accessKey: credentials.accessKey,\n        password: credentials.password,\n        authProvider: 'Seeq',\n        ignoreSslErrors: credentials.ignoreSsl\n      })\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    // Fallback to direct Python call if API not available\n    return await callPythonBackend('search_and_pull_sensors', [sensorNames, startTime, endTime, grid]);\n  }\n}\n\n// Direct Python backend call (fallback)\nasync function callPythonBackend(functionName: string, args: any[]): Promise<any> {\n  // This would be implemented to directly call the Python backend\n  // For now, return a placeholder\n  return {\n    success: false,\n    message: \"Direct Python backend calls not yet implemented\",\n    error: \"Use taskpane interface instead\"\n  };\n}\n\n// Update Excel function cache\nfunction updateExcelCache(operationType: string, data: any): void {\n  try {\n    // Call the Excel function to update cache\n    const dataJson = JSON.stringify(data);\n    const cacheUpdate = `=SEEQ_UPDATE_CACHE(\"${operationType}\", '${dataJson}')`;\n    \n    // Insert the cache update into the active worksheet\n    Excel.run(async (context) => {\n      const worksheet = context.workbook.worksheets.getActiveWorksheet();\n      const range = worksheet.getRange(\"A1\");\n      range.values = [[cacheUpdate]];\n      await context.sync();\n    }).catch(error => {\n      console.log(\"Could not update Excel cache automatically:\", error);\n      console.log(\"Manual cache update required:\", cacheUpdate);\n    });\n    \n  } catch (error) {\n    console.error(\"Failed to update Excel cache:\", error);\n  }\n}\n\n// Display functions for results\nfunction displaySearchResults(results: any[]): void {\n  const resultsDiv = document.getElementById(\"search-results\");\n  if (resultsDiv) {\n    resultsDiv.innerHTML = `\n      <h3>Search Results (${results.length} sensors)</h3>\n      <div class=\"results-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Original Name</th>\n              <th>Seeq Name</th>\n              <th>ID</th>\n              <th>Type</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${results.map(sensor => `\n              <tr>\n                <td>${sensor.Original_Name || sensor.Name || 'N/A'}</td>\n                <td>${sensor.Name || 'N/A'}</td>\n                <td>${sensor.ID || 'Not Found'}</td>\n                <td>${sensor.Type || 'N/A'}</td>\n                <td>${sensor.Status || 'Unknown'}</td>\n              </tr>\n            `).join('')}\n          </tbody>\n        </table>\n      </div>\n    `;\n  }\n}\n\nfunction displayDataResults(result: any): void {\n  const resultsDiv = document.getElementById(\"data-results\");\n  if (resultsDiv && result.data && result.data.length > 0) {\n    const sampleData = result.data.slice(0, 10); // Show first 10 rows\n    resultsDiv.innerHTML = `\n      <h3>Data Results (${result.data.length} rows)</h3>\n      <div class=\"results-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Timestamp</th>\n              ${result.data_columns.map((col: string) => `<th>${col}</th>`).join('')}\n            </tr>\n          </thead>\n          <tbody>\n            ${sampleData.map((row: any) => `\n              <tr>\n                <td>${row.Timestamp || row.index || 'N/A'}</td>\n                ${result.data_columns.map((col: string) => `<td>${row[col] !== undefined ? row[col] : 'N/A'}</td>`).join('')}\n              </tr>\n            `).join('')}\n          </tbody>\n        </table>\n        ${result.data.length > 10 ? `<p><em>Showing first 10 of ${result.data.length} rows</em></p>` : ''}\n      </div>\n    `;\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>SqExcel Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\" alt=\\\"SqExcel\\\" title=\\\"SqExcel\\\"/> <h1 class=\\\"ms-font-su\\\">Welcome to SqExcel</h1> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <h2 class=\\\"ms-font-xl\\\">Welcome to SqExcel - Your Excel Power Tool!</h2> <div class=\\\"seeq-auth-section\\\"> <h3 class=\\\"ms-font-l\\\">Seeq Authentication</h3> <div class=\\\"auth-form\\\"> <div class=\\\"form-group\\\"> <label for=\\\"seeq-url\\\">Seeq Server URL:</label> <input type=\\\"url\\\" id=\\\"seeq-url\\\" placeholder=\\\"https://your-server.seeq.site\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"seeq-access-key\\\">Access Key:</label> <input type=\\\"text\\\" id=\\\"seeq-access-key\\\" placeholder=\\\"Your Seeq access key\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"seeq-password\\\">Password:</label> <input type=\\\"password\\\" id=\\\"seeq-password\\\" placeholder=\\\"Your Seeq password\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"ignore-ssl\\\">Ignore SSL Errors:</label> <input type=\\\"checkbox\\\" id=\\\"ignore-ssl\\\" class=\\\"ms-Checkbox-input\\\"> </div> <div class=\\\"auth-buttons\\\"> <button id=\\\"test-connection\\\" class=\\\"ms-Button ms-Button--primary\\\">Test Connection</button> <button id=\\\"authenticate\\\" class=\\\"ms-Button ms-Button--primary\\\">Authenticate</button> <button id=\\\"logout\\\" class=\\\"ms-Button ms-Button--secondary\\\" style=\\\"display:none\\\">Logout</button> </div> </div> <div id=\\\"auth-status\\\" class=\\\"auth-status\\\"></div> </div> <p><label id=\\\"item-subject\\\"></label></p> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","BACKEND_URL","testSeeqConnection","_testSeeqConnection","_callee2","_document$getElementB","url","result","_t","_context2","getElementById","showAuthStatus","testConnection","success","message","updateExcelCache","concat","authenticateWithSeeq","_authenticateWithSeeq","_callee3","_document$getElementB2","_document$getElementB3","_document$getElementB4","_document$getElementB5","accessKey","password","ignoreSsl","_t2","_context3","checked","authenticate","saveCredentials","updateAuthUI","searchSensors","_searchSensors","_callee4","_document$getElementB6","sensorNamesInput","sensorNames","_t3","_context4","split","map","name","trim","filter","searchSensorsOnly","sensor_count","displaySearchResults","search_results","pullSensorData","_pullSensorData","_callee5","_document$getElementB7","_document$getElementB8","_document$getElementB9","_document$getElementB0","startTimeInput","endTimeInput","gridInput","grid","_t4","_context5","searchAndPullSensors","displayDataResults","logoutFromSeeq","localStorage","removeItem","fetch","method","catch","error","console","log","type","statusElement","textContent","className","isAuthenticated","testBtn","authBtn","logoutBtn","urlInput","accessKeyInput","passwordInput","sslCheckbox","style","display","disabled","credentials","timestamp","Date","toISOString","setItem","JSON","stringify","_x5","_testConnection","_callee7","response","_context7","headers","body","ok","status","json","callPythonBackend","_x6","_x7","_x8","_x9","_authenticate","_callee8","_t7","_context8","authProvider","ignoreSslErrors","_x0","_searchSensorsOnly","_callee9","saved","_context9","getItem","parse","_x1","_x10","_x11","_x12","_searchAndPullSensors","_callee0","startTime","endTime","_context0","startDatetime","endDatetime","_x13","_x14","_callPythonBackend","_callee1","functionName","args","_context1","operationType","data","dataJson","cacheUpdate","Excel","run","_ref","_callee","context","_context","workbook","worksheets","getActiveWorksheet","getRange","values","sync","_x15","results","resultsDiv","innerHTML","sensor","Original_Name","Name","ID","Type","Status","join","sampleData","slice","data_columns","col","row","Timestamp","index","Office","onReady","testConnectionBtn","authenticateBtn","searchSensorsBtn","pullDataBtn","onclick","savedTime","getTime","loadSavedCredentials","URL"],"sourceRoot":""}