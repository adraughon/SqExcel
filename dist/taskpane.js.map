{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/webpack/runtime/global","webpack://excel-custom-functions/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions/webpack/runtime/publicPath","webpack://excel-custom-functions/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions/./src/taskpane/seeq-api-client.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Seeq API Client for Direct REST API Calls\n * This replaces the Python backend with direct Seeq API communication\n */\n\nexport interface SeeqAuthResult {\n  success: boolean;\n  message: string;\n  user?: string;\n  server_url?: string;\n  error?: string;\n  token?: string;\n}\n\nexport interface SeeqConnectionResult {\n  success: boolean;\n  message: string;\n  status_code?: number;\n  error?: string;\n}\n\nexport interface SeeqSensor {\n  ID: string;\n  Name: string;\n  Type: string;\n  Original_Name?: string;\n  Status?: string;\n}\n\nexport interface SeeqSearchResult {\n  success: boolean;\n  message: string;\n  search_results: SeeqSensor[];\n  sensor_count: number;\n  error?: string;\n}\n\nexport interface SeeqDataResult {\n  success: boolean;\n  message: string;\n  search_results: SeeqSensor[];\n  data: any[];\n  data_columns: string[];\n  data_index: string[];\n  sensor_count: number;\n  time_range: {\n    start: string;\n    end: string;\n    grid: string;\n  };\n  error?: string;\n}\n\nexport class SeeqAPIClient {\n  private baseUrl: string;\n  private authToken: string | null = null;\n  private credentials: any = null;\n\n  constructor(baseUrl: string) {\n    this.baseUrl = baseUrl.replace(/\\/$/, ''); // Remove trailing slash\n  }\n\n  /**\n   * Test the authentication endpoint specifically\n   */\n  async testAuthEndpoint(): Promise<SeeqConnectionResult> {\n    try {\n      console.log(`Testing authentication endpoint: ${this.baseUrl}/api/auth/login`);\n      \n      // Test with OPTIONS request to check if the endpoint exists and CORS is configured\n      const response = await fetch(`${this.baseUrl}/api/auth/login`, {\n        method: 'OPTIONS',\n        headers: {\n          'Origin': window.location.origin,\n          'Access-Control-Request-Method': 'POST',\n          'Access-Control-Request-Headers': 'Content-Type'\n        }\n      });\n\n      console.log(`Auth endpoint OPTIONS response status: ${response.status}`);\n      console.log(`Auth endpoint CORS headers:`, {\n        'Access-Control-Allow-Origin': response.headers.get('Access-Control-Allow-Origin'),\n        'Access-Control-Allow-Methods': response.headers.get('Access-Control-Allow-Methods'),\n        'Access-Control-Allow-Headers': response.headers.get('Access-Control-Allow-Headers'),\n        'Access-Control-Allow-Credentials': response.headers.get('Access-Control-Allow-Credentials')\n      });\n\n      return {\n        success: true,\n        message: \"Authentication endpoint is accessible\",\n        status_code: response.status\n      };\n    } catch (error: any) {\n      console.error('Auth endpoint test error:', error);\n      return {\n        success: false,\n        message: `Authentication endpoint test failed: ${error.message}`,\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Test CORS preflight to the Seeq server\n   */\n  async testCorsPreflight(): Promise<SeeqConnectionResult> {\n    try {\n      console.log(`Testing CORS preflight to Seeq server: ${this.baseUrl}`);\n      \n      // Test with OPTIONS request to check CORS\n      const response = await fetch(`${this.baseUrl}/api/system/open-ping`, {\n        method: 'OPTIONS',\n        headers: {\n          'Origin': window.location.origin,\n          'Access-Control-Request-Method': 'POST',\n          'Access-Control-Request-Headers': 'Content-Type'\n        }\n      });\n\n      console.log(`CORS preflight response status: ${response.status}`);\n      console.log(`CORS headers:`, {\n        'Access-Control-Allow-Origin': response.headers.get('Access-Control-Allow-Origin'),\n        'Access-Control-Allow-Methods': response.headers.get('Access-Control-Allow-Methods'),\n        'Access-Control-Allow-Headers': response.headers.get('Access-Control-Allow-Headers'),\n        'Access-Control-Allow-Credentials': response.headers.get('Access-Control-Allow-Credentials')\n      });\n\n      return {\n        success: true,\n        message: \"CORS preflight successful\",\n        status_code: response.status\n      };\n    } catch (error: any) {\n      console.error('CORS preflight error:', error);\n      return {\n        success: false,\n        message: `CORS preflight failed: ${error.message}`,\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Test connection to Seeq server without authentication\n   */\n  async testConnection(): Promise<SeeqConnectionResult> {\n    try {\n      console.log(`Testing connection to Seeq server: ${this.baseUrl}`);\n      \n      // First test CORS preflight\n      const corsResult = await this.testCorsPreflight();\n      if (!corsResult.success) {\n        console.warn('CORS preflight failed, but continuing with connection test');\n      }\n      \n      const response = await fetch(`${this.baseUrl}/api/system/open-ping`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      console.log(`Connection test response status: ${response.status}`);\n      console.log(`Response headers:`, response.headers);\n\n      if (response.ok) {\n        console.log('Connection test successful');\n        return {\n          success: true,\n          message: \"Server is reachable\",\n          status_code: response.status\n        };\n      } else {\n        console.error(`Connection test failed with status: ${response.status}`);\n        return {\n          success: false,\n          message: `Server responded with status code: ${response.status}`,\n          status_code: response.status\n        };\n      }\n    } catch (error: any) {\n      console.error('Connection test error details:', error);\n      \n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        return {\n          success: false,\n          message: \"Cannot connect to server - connection refused. This may be due to CORS restrictions or network issues.\",\n          error: \"ConnectionError\"\n        };\n      } else if (error.name === 'AbortError') {\n        return {\n          success: false,\n          message: \"Connection timeout - the server took too long to respond.\",\n          error: \"Timeout\"\n        };\n      } else if (error.message.includes('Failed to fetch')) {\n        return {\n          success: false,\n          message: \"Connection failed - unable to reach the server. This may be due to CORS restrictions, SSL issues, or network problems.\",\n          error: \"FetchError\"\n        };\n      } else if (error.message.includes('Load failed')) {\n        return {\n          success: false,\n          message: \"Load failed - the connection request could not be completed. This may be due to CORS restrictions, SSL certificate issues, or network connectivity problems.\",\n          error: \"LoadError\"\n        };\n      } else {\n        return {\n          success: false,\n          message: `Connection test failed: ${error.message}`,\n          error: error.message\n        };\n      }\n    }\n  }\n\n  /**\n   * Authenticate with Seeq server\n   */\n  async authenticate(accessKey: string, password: string, authProvider: string = 'Seeq', ignoreSslErrors: boolean = false): Promise<SeeqAuthResult> {\n    try {\n      // Store credentials for later use\n      this.credentials = {\n        accessKey,\n        password,\n        authProvider,\n        ignoreSslErrors\n      };\n\n      console.log(`Attempting to authenticate with Seeq server: ${this.baseUrl}`);\n      console.log(`Using access key: ${accessKey}, auth provider: ${authProvider}`);\n\n      // Try to authenticate using Seeq's REST API\n      const response = await fetch(`${this.baseUrl}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include', // Include cookies for session management\n        body: JSON.stringify({\n          username: accessKey,\n          password: password\n        })\n      });\n\n      console.log(`Authentication response status: ${response.status}`);\n      console.log(`Response headers:`, response.headers);\n\n      if (response.ok) {\n        // Seeq uses session-based authentication, so we don't get a token\n        // Instead, we rely on cookies/session\n        this.authToken = 'session'; // Placeholder to indicate we're authenticated\n        \n        console.log('Authentication successful');\n        \n        return {\n          success: true,\n          message: `Successfully authenticated as ${accessKey}`,\n          user: accessKey,\n          server_url: this.baseUrl,\n          token: this.authToken\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('Authentication failed with response:', errorData);\n        \n        return {\n          success: false,\n          message: errorData.message || `Authentication failed with status ${response.status}`,\n          error: errorData.error || `HTTP ${response.status}`\n        };\n      }\n    } catch (error: any) {\n      console.error('Authentication error details:', error);\n      \n      // Provide more specific error messages based on error type\n      let errorMessage = 'Authentication failed';\n      let errorType = 'Unknown';\n      \n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        errorMessage = 'Network error: Cannot connect to Seeq server. Please check the server URL and ensure it\\'s accessible.';\n        errorType = 'NetworkError';\n      } else if (error.name === 'AbortError') {\n        errorMessage = 'Request timeout: The authentication request took too long. Please try again.';\n        errorType = 'TimeoutError';\n      } else if (error.message.includes('Failed to fetch')) {\n        errorMessage = 'Connection failed: Unable to reach the Seeq server. This may be due to CORS restrictions, network issues, or an invalid server URL.';\n        errorType = 'ConnectionError';\n      } else if (error.message.includes('Load failed')) {\n        errorMessage = 'Load failed: The authentication request could not be completed. This may be due to CORS restrictions, SSL certificate issues, or network connectivity problems.';\n        errorType = 'LoadError';\n      } else {\n        errorMessage = `Authentication failed: ${error.message}`;\n        errorType = error.name || 'UnknownError';\n      }\n      \n      return {\n        success: false,\n        message: errorMessage,\n        error: errorType\n      };\n    }\n  }\n\n  /**\n   * Search for sensors in Seeq\n   */\n  async searchSensors(sensorNames: string[]): Promise<SeeqSearchResult> {\n    if (!this.authToken && !this.credentials) {\n      return {\n        success: false,\n        message: \"Not authenticated. Please authenticate first.\",\n        error: \"Authentication required\",\n        search_results: [],\n        sensor_count: 0\n      };\n    }\n\n    try {\n      // Use Seeq's items API to search for signals\n      const searchResults: SeeqSensor[] = [];\n      \n      for (const sensorName of sensorNames) {\n        try {\n          // Search for items with the sensor name\n          const response = await fetch(`${this.baseUrl}/api/items?Name=${encodeURIComponent(sensorName)}&Type=Signal`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            credentials: 'include' // Include session cookies\n          });\n\n          if (response.ok) {\n            const data = await response.json();\n            if (data && data.length > 0) {\n              // Map Seeq API response to our format\n              data.forEach((result: any) => {\n                searchResults.push({\n                  ID: result.Id || result.id,\n                  Name: result.Name || result.name,\n                  Type: result.Type || 'Signal',\n                  Original_Name: sensorName,\n                  Status: 'Found'\n                });\n              });\n            } else {\n              // Sensor not found\n              searchResults.push({\n                ID: '',\n                Name: sensorName,\n                Type: 'Signal',\n                Original_Name: sensorName,\n                Status: 'Not Found'\n              });\n            }\n          } else {\n            // Search failed for this sensor\n            searchResults.push({\n              ID: '',\n              Name: sensorName,\n              Type: 'Signal',\n              Original_Name: sensorName,\n              Status: `Search Error: HTTP ${response.status}`\n            });\n          }\n        } catch (error: any) {\n          // Individual sensor search failed\n          searchResults.push({\n            ID: '',\n            Name: sensorName,\n            Type: 'Signal',\n            Original_Name: sensorName,\n            Status: `Search Error: ${error.message}`\n          });\n        }\n      }\n\n      const validSensors = searchResults.filter(sensor => sensor.ID);\n      \n      return {\n        success: true,\n        message: `Found ${validSensors.length} sensors`,\n        search_results: searchResults,\n        sensor_count: validSensors.length\n      };\n\n    } catch (error: any) {\n      return {\n        success: false,\n        message: `Sensor search failed: ${error.message}`,\n        error: error.message,\n        search_results: [],\n        sensor_count: 0\n      };\n    }\n  }\n\n  /**\n   * Search for sensors and pull their data\n   */\n  async searchAndPullSensors(sensorNames: string[], startTime: string, endTime: string, grid: string = '15min'): Promise<SeeqDataResult> {\n    try {\n      // First search for sensors\n      const searchResult = await this.searchSensors(sensorNames);\n      \n      if (!searchResult.success) {\n        return {\n          success: false,\n          message: searchResult.message,\n          error: searchResult.error,\n          search_results: [],\n          data: [],\n          data_columns: [],\n          data_index: [],\n          sensor_count: 0,\n          time_range: { start: startTime, end: endTime, grid }\n        };\n      }\n\n      const validSensors = searchResult.search_results.filter(sensor => sensor.ID);\n      \n      if (validSensors.length === 0) {\n        return {\n          success: false,\n          message: \"No valid sensors found to pull data from\",\n          error: \"All sensors failed search\",\n          search_results: searchResult.search_results,\n          data: [],\n          data_columns: [],\n          data_index: [],\n          sensor_count: 0,\n          time_range: { start: startTime, end: endTime, grid }\n        };\n      }\n\n      // Pull data for valid sensors using Seeq's signals API\n      try {\n        const allData: any[] = [];\n        const dataColumns: string[] = [];\n        \n        // Get data for each sensor individually\n        for (const sensor of validSensors) {\n          try {\n            const response = await fetch(`${this.baseUrl}/api/signals/${sensor.ID}/samples?start=${encodeURIComponent(startTime)}&end=${encodeURIComponent(endTime)}`, {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              credentials: 'include' // Include session cookies\n            });\n\n            if (response.ok) {\n              const data = await response.json();\n              if (data && data.length > 0) {\n                // Add sensor name as column if not already present\n                const sensorColumnName = sensor.Name || `Sensor_${sensor.ID}`;\n                if (!dataColumns.includes(sensorColumnName)) {\n                  dataColumns.push(sensorColumnName);\n                }\n                \n                // Add data with sensor name\n                data.forEach((point: any) => {\n                  const existingPoint = allData.find(p => p.Timestamp === point.Timestamp);\n                  if (existingPoint) {\n                    existingPoint[sensorColumnName] = point.Value;\n                  } else {\n                    allData.push({\n                      Timestamp: point.Timestamp,\n                      [sensorColumnName]: point.Value\n                    });\n                  }\n                });\n              }\n            }\n          } catch (error: any) {\n            console.warn(`Failed to get data for sensor ${sensor.Name}:`, error);\n          }\n        }\n\n        // Sort data by timestamp\n        allData.sort((a, b) => new Date(a.Timestamp).getTime() - new Date(b.Timestamp).getTime());\n\n        return {\n          success: true,\n          message: `Successfully retrieved data for ${validSensors.length} sensors`,\n          search_results: searchResult.search_results,\n          data: allData,\n          data_columns: dataColumns,\n          data_index: allData.map((_, i) => i.toString()),\n          sensor_count: validSensors.length,\n          time_range: {\n            start: startTime,\n            end: endTime,\n            grid: grid\n          }\n        };\n      } catch (error: any) {\n        return {\n          success: false,\n          message: `Failed to pull data: ${error.message}`,\n          error: \"Data pull failed\",\n          search_results: searchResult.search_results,\n          data: [],\n          data_columns: [],\n          data_index: [],\n          sensor_count: validSensors.length,\n          time_range: { start: startTime, end: endTime, grid }\n        };\n      }\n\n    } catch (error: any) {\n      return {\n        success: false,\n        message: `Search and pull operation failed: ${error.message}`,\n        error: error.message,\n        search_results: [],\n        data: [],\n        data_columns: [],\n        data_index: [],\n        sensor_count: 0,\n        time_range: { start: startTime, end: endTime, grid }\n      };\n    }\n  }\n\n  /**\n   * Get current authentication status\n   */\n  getAuthStatus(): { isAuthenticated: boolean; user?: string } {\n    return {\n      isAuthenticated: !!this.authToken,\n      user: this.credentials?.accessKey\n    };\n  }\n\n  /**\n   * Clear authentication\n   */\n  logout(): void {\n    this.authToken = null;\n    this.credentials = null;\n  }\n\n  /**\n   * Get stored credentials for persistence\n   */\n  getCredentials(): any {\n    return this.credentials;\n  }\n\n  /**\n   * Set credentials from storage\n   */\n  setCredentials(credentials: any): void {\n    this.credentials = credentials;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n// Import the new Seeq API client\nimport { SeeqAPIClient } from './seeq-api-client';\n\n// Version number to prove we're using the new code\nconst ADDIN_VERSION = \"2.0.0 - Direct Seeq API Implementation\";\n\n// Global API client instance\nlet seeqClient: SeeqAPIClient | null = null;\n\n// The initialize function must be run each time a new page is loaded\nOffice.onReady(() => {\n  document.getElementById(\"sideload-msg\").style.display = \"none\";\n  document.getElementById(\"app-body\").style.display = \"flex\";\n  \n  // Initialize Seeq authentication\n  initializeSeeqAuth();\n});\n\n// Seeq Authentication Interface\ninterface SeeqAuthResult {\n  success: boolean;\n  message: string;\n  user?: string;\n  server_url?: string;\n  error?: string;\n}\n\ninterface SeeqConnectionResult {\n  success: boolean;\n  message: string;\n  status_code?: number;\n  error?: string;\n}\n\n// Seeq Authentication Functions\nfunction initializeSeeqAuth(): void {\n  const testConnectionBtn = document.getElementById(\"test-connection\") as HTMLButtonElement;\n  const authenticateBtn = document.getElementById(\"authenticate\") as HTMLButtonElement;\n  const logoutBtn = document.getElementById(\"logout\") as HTMLButtonElement;\n  const searchSensorsBtn = document.getElementById(\"search-sensors\") as HTMLButtonElement;\n  const pullDataBtn = document.getElementById(\"pull-data\") as HTMLButtonElement;\n\n  if (testConnectionBtn) {\n    testConnectionBtn.onclick = testSeeqConnection;\n  }\n  \n  if (authenticateBtn) {\n    authenticateBtn.onclick = authenticateWithSeeq;\n  }\n  \n  if (logoutBtn) {\n    logoutBtn.onclick = logoutFromSeeq;\n  }\n\n  if (searchSensorsBtn) {\n    searchSensorsBtn.onclick = searchSensors;\n  }\n\n  if (pullDataBtn) {\n    pullDataBtn.onclick = pullSensorData;\n  }\n\n  // Load saved credentials if available\n  loadSavedCredentials();\n  \n  // Display version number to prove we're using new code\n  console.log(`SqExcel Add-in Version: ${ADDIN_VERSION}`);\n  showAuthStatus(`Add-in Version: ${ADDIN_VERSION}`, \"info\");\n}\n\nasync function testSeeqConnection(): Promise<void> {\n  const url = (document.getElementById(\"seeq-url\") as HTMLInputElement)?.value;\n  \n  if (!url) {\n    showAuthStatus(\"Please enter a Seeq server URL\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Testing connection...\", \"loading\");\n  \n  try {\n    // Create new API client and test connection\n    seeqClient = new SeeqAPIClient(url);\n    \n    // Test basic connection first\n    const result = await seeqClient.testConnection();\n    \n    if (result.success) {\n      showAuthStatus(result.message, \"success\");\n      \n      // Test authentication endpoint specifically\n      showAuthStatus(\"Testing authentication endpoint...\", \"loading\");\n      const authEndpointResult = await seeqClient.testAuthEndpoint();\n      \n      if (authEndpointResult.success) {\n        showAuthStatus(`${result.message} - ${authEndpointResult.message}`, \"success\");\n      } else {\n        showAuthStatus(`${result.message} - Warning: ${authEndpointResult.message}`, \"warning\");\n      }\n      \n      // Update Excel function cache\n      updateExcelCache(\"auth\", result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Connection test failed: ${error}`, \"error\");\n  }\n}\n\nasync function authenticateWithSeeq(): Promise<void> {\n  const url = (document.getElementById(\"seeq-url\") as HTMLInputElement)?.value;\n  const accessKey = (document.getElementById(\"seeq-access-key\") as HTMLInputElement)?.value;\n  const password = (document.getElementById(\"seeq-password\") as HTMLInputElement)?.value;\n  const ignoreSsl = (document.getElementById(\"ignore-ssl\") as HTMLInputElement)?.checked;\n\n  if (!url || !accessKey || !password) {\n    showAuthStatus(\"Please fill in all required fields\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Authenticating...\", \"loading\");\n  \n  try {\n    // Use the API client to authenticate\n    if (!seeqClient) {\n      seeqClient = new SeeqAPIClient(url);\n    }\n    \n    const result = await seeqClient.authenticate(accessKey, password, 'Seeq', ignoreSsl);\n    \n    if (result.success) {\n      showAuthStatus(\"Authentication successful\", \"success\");\n      saveCredentials(url, accessKey, password, ignoreSsl);\n      updateAuthUI(true);\n      // Update Excel function cache\n      updateExcelCache(\"auth\", result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Authentication failed: ${error}`, \"error\");\n  }\n}\n\nasync function searchSensors(): Promise<void> {\n  const sensorNamesInput = (document.getElementById(\"sensor-names\") as HTMLInputElement)?.value;\n  \n  if (!sensorNamesInput) {\n    showAuthStatus(\"Please enter sensor names to search for\", \"error\");\n    return;\n  }\n\n  const sensorNames = sensorNamesInput.split(',').map(name => name.trim()).filter(name => name);\n  \n  if (sensorNames.length === 0) {\n    showAuthStatus(\"Please enter valid sensor names\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Searching for sensors...\", \"loading\");\n  \n  try {\n    // Use the API client to search for sensors\n    if (!seeqClient) {\n      showAuthStatus(\"Please test connection first\", \"error\");\n      return;\n    }\n    \n    const result = await seeqClient.searchSensors(sensorNames);\n    \n    if (result.success) {\n      showAuthStatus(`Found ${result.sensor_count} sensors`, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"search\", result);\n      // Display results\n      displaySearchResults(result.search_results);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Sensor search failed: ${error}`, \"error\");\n  }\n}\n\nasync function pullSensorData(): Promise<void> {\n  const sensorNamesInput = (document.getElementById(\"sensor-names\") as HTMLInputElement)?.value;\n  const startTimeInput = (document.getElementById(\"start-time\") as HTMLInputElement)?.value;\n  const endTimeInput = (document.getElementById(\"end-time\") as HTMLInputElement)?.value;\n  const gridInput = (document.getElementById(\"grid-interval\") as HTMLInputElement)?.value;\n  \n  if (!sensorNamesInput || !startTimeInput || !endTimeInput) {\n    showAuthStatus(\"Please fill in all required fields\", \"error\");\n    return;\n  }\n\n  const sensorNames = sensorNamesInput.split(',').map(name => name.trim()).filter(name => name);\n  const grid = gridInput || \"15min\";\n  \n  if (sensorNames.length === 0) {\n    showAuthStatus(\"Please enter valid sensor names\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Pulling sensor data...\", \"loading\");\n  \n  try {\n    // Use the API client to search and pull data\n    if (!seeqClient) {\n      showAuthStatus(\"Please test connection first\", \"error\");\n      return;\n    }\n    \n    const result = await seeqClient.searchAndPullSensors(sensorNames, startTimeInput, endTimeInput, grid);\n    \n    if (result.success) {\n      showAuthStatus(`Retrieved data for ${result.sensor_count} sensors`, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"data\", result);\n      // Display results\n      displayDataResults(result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Data retrieval failed: ${error}`, \"error\");\n  }\n}\n\nfunction logoutFromSeeq(): void {\n  // Clear saved credentials\n  localStorage.removeItem(\"seeq_credentials\");\n  \n  // Clear API client state\n  if (seeqClient) {\n    seeqClient.logout();\n  }\n  \n  // Update UI\n  updateAuthUI(false);\n  showAuthStatus(\"Logged out successfully\", \"info\");\n  \n  // Clear form fields\n  (document.getElementById(\"seeq-url\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"seeq-access-key\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"seeq-password\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"ignore-ssl\") as HTMLInputElement).checked = false;\n}\n\nfunction showAuthStatus(message: string, type: \"success\" | \"error\" | \"info\" | \"loading\"): void {\n  const statusElement = document.getElementById(\"auth-status\");\n  if (statusElement) {\n    statusElement.textContent = message;\n    statusElement.className = `auth-status ${type}`;\n  }\n}\n\nfunction updateAuthUI(isAuthenticated: boolean): void {\n  const testBtn = document.getElementById(\"test-connection\") as HTMLButtonElement;\n  const authBtn = document.getElementById(\"authenticate\") as HTMLButtonElement;\n  const logoutBtn = document.getElementById(\"logout\") as HTMLButtonElement;\n  const urlInput = document.getElementById(\"seeq-url\") as HTMLInputElement;\n  const accessKeyInput = document.getElementById(\"seeq-access-key\") as HTMLInputElement;\n  const passwordInput = document.getElementById(\"seeq-password\") as HTMLInputElement;\n  const sslCheckbox = document.getElementById(\"ignore-ssl\") as HTMLInputElement;\n\n  if (isAuthenticated) {\n    testBtn.style.display = \"none\";\n    authBtn.style.display = \"none\";\n    logoutBtn.style.display = \"inline-block\";\n    \n    // Disable form inputs\n    urlInput.disabled = true;\n    accessKeyInput.disabled = true;\n    passwordInput.disabled = true;\n    sslCheckbox.disabled = true;\n  } else {\n    testBtn.style.display = \"inline-block\";\n    authBtn.style.display = \"inline-block\";\n    logoutBtn.style.display = \"none\";\n    \n    // Enable form inputs\n    urlInput.disabled = false;\n    accessKeyInput.disabled = false;\n    passwordInput.disabled = false;\n    sslCheckbox.disabled = false;\n  }\n}\n\nfunction saveCredentials(url: string, accessKey: string, password: string, ignoreSsl: boolean): void {\n  const credentials = {\n    url,\n    accessKey,\n    password,\n    ignoreSsl,\n    timestamp: new Date().toISOString()\n  };\n  \n  localStorage.setItem(\"seeq_credentials\", JSON.stringify(credentials));\n}\n\n// Load saved credentials from localStorage\nfunction loadSavedCredentials(): void {\n  const saved = localStorage.getItem(\"seeq_credentials\");\n  if (saved) {\n    try {\n      const credentials = JSON.parse(saved);\n      \n      // Populate form fields\n      (document.getElementById(\"seeq-url\") as HTMLInputElement).value = credentials.url || \"\";\n      (document.getElementById(\"seeq-access-key\") as HTMLInputElement).value = credentials.accessKey || \"\";\n      (document.getElementById(\"seeq-password\") as HTMLInputElement).value = credentials.password || \"\";\n      (document.getElementById(\"ignore-ssl\") as HTMLInputElement).checked = credentials.ignoreSsl || false;\n      \n      // Check if credentials are still valid (less than 24 hours old)\n      const timestamp = new Date(credentials.timestamp);\n      const now = new Date();\n      const hoursDiff = (now.getTime() - timestamp.getTime()) / (1000 * 60 * 60);\n      \n      if (hoursDiff < 24) {\n        // Credentials are still valid, update UI\n        updateAuthUI(true);\n        showAuthStatus(\"Using saved credentials\", \"info\");\n        \n        // Recreate API client with saved URL\n        if (credentials.url) {\n          seeqClient = new SeeqAPIClient(credentials.url);\n        }\n      } else {\n        // Credentials expired, remove them\n        localStorage.removeItem(\"seeq_credentials\");\n      }\n    } catch (error) {\n      console.error(\"Failed to load saved credentials:\", error);\n      localStorage.removeItem(\"seeq_credentials\");\n    }\n  }\n}\n\n// Update Excel function cache\nfunction updateExcelCache(operationType: string, data: any): void {\n  try {\n    const jsonData = JSON.stringify(data);\n    const cacheUpdate = `=SEEQ_UPDATE_CACHE(\"${operationType}\", '${jsonData}')`;\n    \n    Excel.run(async (context) => {\n      const worksheet = context.workbook.worksheets.getActiveWorksheet();\n      const range = worksheet.getRange(\"A1\");\n      range.values = [[cacheUpdate]];\n      await context.sync();\n    }).catch(error => {\n      console.log(\"Could not update Excel cache automatically:\", error);\n      console.log(\"Manual cache update required:\", cacheUpdate);\n    });\n  } catch (error) {\n    console.error(\"Failed to update Excel cache:\", error);\n  }\n}\n\n// Display search results in the UI\nfunction displaySearchResults(results: any[]): void {\n  const resultsDiv = document.getElementById(\"search-results\");\n  if (resultsDiv && results.length > 0) {\n    let html = `\n      <h3>Search Results (${results.length} sensors)</h3>\n      <div class=\"results-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Original Name</th>\n              <th>Seeq Name</th>\n              <th>ID</th>\n              <th>Type</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n    `;\n    \n    results.forEach(result => {\n      html += `\n        <tr>\n          <td>${result.Original_Name || result.Name || \"N/A\"}</td>\n          <td>${result.Name || \"N/A\"}</td>\n          <td>${result.ID || \"Not Found\"}</td>\n          <td>${result.Type || \"N/A\"}</td>\n          <td>${result.Status || \"Unknown\"}</td>\n        </tr>\n      `;\n    });\n    \n    html += `\n          </tbody>\n        </table>\n      </div>\n    `;\n    \n    resultsDiv.innerHTML = html;\n  }\n}\n\n// Display data results in the UI\nfunction displayDataResults(result: any): void {\n  const resultsDiv = document.getElementById(\"data-results\");\n  if (resultsDiv && result.data && result.data.length > 0) {\n    const dataToShow = result.data.slice(0, 10); // Show first 10 rows\n    \n    let html = `\n      <h3>Data Results (${result.data.length} rows)</h3>\n      <div class=\"results-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Timestamp</th>\n              ${result.data_columns.map(col => `<th>${col}</th>`).join('')}\n            </tr>\n          </thead>\n          <tbody>\n    `;\n    \n    dataToShow.forEach(row => {\n      html += `\n        <tr>\n          <td>${row.Timestamp || row.index || \"N/A\"}</td>\n          ${result.data_columns.map(col => `<td>${row[col] !== undefined ? row[col] : \"N/A\"}</td>`).join('')}\n        </tr>\n      `;\n    });\n    \n    html += `\n          </tbody>\n        </table>\n        ${result.data.length > 10 ? `<p><em>Showing first 10 of ${result.data.length} rows</em></p>` : ''}\n      </div>\n    `;\n    \n    resultsDiv.innerHTML = html;\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>SqExcel Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\" alt=\\\"SqExcel\\\" title=\\\"SqExcel\\\"/> <h1 class=\\\"ms-font-su\\\">Welcome to SqExcel</h1> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <h2 class=\\\"ms-font-xl\\\">Welcome to SqExcel - Your Excel Power Tool!</h2> <div class=\\\"seeq-auth-section\\\"> <h3 class=\\\"ms-font-l\\\">Seeq Authentication</h3> <div class=\\\"auth-form\\\"> <div class=\\\"form-group\\\"> <label for=\\\"seeq-url\\\">Seeq Server URL:</label> <input type=\\\"url\\\" id=\\\"seeq-url\\\" placeholder=\\\"https://your-server.seeq.site\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"seeq-access-key\\\">Access Key:</label> <input type=\\\"text\\\" id=\\\"seeq-access-key\\\" placeholder=\\\"Your Seeq access key\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"seeq-password\\\">Password:</label> <input type=\\\"password\\\" id=\\\"seeq-password\\\" placeholder=\\\"Your Seeq password\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"ignore-ssl\\\">Ignore SSL Errors:</label> <input type=\\\"checkbox\\\" id=\\\"ignore-ssl\\\" class=\\\"ms-Checkbox-input\\\"> </div> <div class=\\\"auth-buttons\\\"> <button id=\\\"test-connection\\\" class=\\\"ms-Button ms-Button--primary\\\">Test Connection</button> <button id=\\\"authenticate\\\" class=\\\"ms-Button ms-Button--primary\\\">Authenticate</button> <button id=\\\"logout\\\" class=\\\"ms-Button ms-Button--secondary\\\" style=\\\"display:none\\\">Logout</button> </div> </div> <div id=\\\"auth-status\\\" class=\\\"auth-status\\\"></div> </div> <p><label id=\\\"item-subject\\\"></label></p> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_defineProperty","_typeof","toPrimitive","String","_toPrimitive","SeeqAPIClient","baseUrl","_classCallCheck","_testAuthEndpoint","_callee","response","_t","_context","console","log","concat","fetch","method","headers","origin","status","get","success","message","status_code","error","_testCorsPreflight","_callee2","_t2","_context2","_testConnection","_callee3","_t3","_context3","testCorsPreflight","warn","ok","name","includes","_authenticate","_callee4","accessKey","password","authProvider","ignoreSslErrors","errorData","errorMessage","errorType","_t4","_args4","_context4","credentials","body","JSON","stringify","username","authToken","user","server_url","token","json","catch","_x","_x2","_searchSensors","_callee5","sensorNames","searchResults","_iterator","_step","_loop","validSensors","_t6","_t7","_this","_context6","search_results","sensor_count","_createForOfIteratorHelper","sensorName","data","_t5","_context5","encodeURIComponent","forEach","result","push","ID","Id","id","Name","Type","Original_Name","Status","s","_regeneratorValues","filter","sensor","_x3","_searchAndPullSensors","_callee6","startTime","endTime","grid","searchResult","allData","dataColumns","_iterator2","_step2","_loop2","_t9","_t0","_t1","_this2","_args8","_context8","searchSensors","data_columns","data_index","time_range","start","end","sensorColumnName","_t8","_context7","point","existingPoint","find","Timestamp","Value","sort","Date","getTime","map","_","toString","_x4","_x5","_x6","_this$credentials","isAuthenticated","ADDIN_VERSION","seeqClient","testSeeqConnection","_testSeeqConnection","_document$getElementB","url","authEndpointResult","getElementById","showAuthStatus","testConnection","testAuthEndpoint","updateExcelCache","authenticateWithSeeq","_authenticateWithSeeq","_document$getElementB2","_document$getElementB3","_document$getElementB4","_document$getElementB5","ignoreSsl","checked","authenticate","saveCredentials","updateAuthUI","_document$getElementB6","sensorNamesInput","split","trim","displaySearchResults","pullSensorData","_pullSensorData","_document$getElementB7","_document$getElementB8","_document$getElementB9","_document$getElementB0","startTimeInput","endTimeInput","gridInput","searchAndPullSensors","displayDataResults","logoutFromSeeq","localStorage","removeItem","logout","type","statusElement","textContent","className","testBtn","authBtn","logoutBtn","urlInput","accessKeyInput","passwordInput","sslCheckbox","style","display","disabled","timestamp","toISOString","setItem","operationType","jsonData","cacheUpdate","Excel","run","_ref","context","workbook","worksheets","getActiveWorksheet","getRange","values","sync","results","resultsDiv","html","innerHTML","dataToShow","slice","col","join","row","index","Office","onReady","testConnectionBtn","authenticateBtn","searchSensorsBtn","pullDataBtn","onclick","saved","getItem","parse","loadSavedCredentials","URL"],"sourceRoot":""}