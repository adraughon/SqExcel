{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/webpack/runtime/global","webpack://excel-custom-functions/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions/webpack/runtime/publicPath","webpack://excel-custom-functions/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions/./src/taskpane/seeq-api-client.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Seeq API Client for Proxy Server (SqExcelWeb)\n * This client communicates with the FastAPI proxy server to avoid CORS issues\n */\n\nexport interface SeeqAuthResult {\n  success: boolean;\n  message: string;\n  user?: string;\n  server_url?: string;\n  error?: string;\n  token?: string;\n}\n\nexport interface SeeqConnectionResult {\n  success: boolean;\n  message: string;\n  status_code?: number;\n  error?: string;\n  diagnostics?: {\n    cors_headers?: any;\n    response_headers?: any;\n    request_timing?: number;\n    user_agent?: string;\n    origin?: string;\n    app_domain?: string;\n    network_type?: string;\n    ssl_info?: any;\n    cors_analysis?: any;\n    error_analysis?: any;\n    cors_status?: string;\n  };\n}\n\nexport interface SeeqSensor {\n  ID: string;\n  Name: string;\n  Type: string;\n  Original_Name?: string;\n  Status?: string;\n}\n\nexport interface SeeqSearchResult {\n  success: boolean;\n  message: string;\n  search_results: SeeqSensor[];\n  sensor_count: number;\n  error?: string;\n}\n\nexport interface SeeqDataResult {\n  success: boolean;\n  message: string;\n  search_results: SeeqSensor[];\n  data: any[];\n  data_columns: string[];\n  data_index: string[];\n  sensor_count: number;\n  time_range: {\n    start: string;\n    end: string;\n    mode: string;\n    modeValue: string | number;\n  };\n  error?: string;\n}\n\nexport class SeeqAPIClient {\n  private proxyUrl: string;\n  private seeqServerUrl: string;\n  private authToken: string | null = null;\n  private credentials: any = null;\n  private diagnosticLog: any[] = [];\n\n  constructor(seeqServerUrl: string) {\n    this.seeqServerUrl = seeqServerUrl.replace(/\\/$/, ''); // Remove trailing slash\n    this.proxyUrl = 'https://sqexcel.up.railway.app';\n    this.logDiagnostic('CLIENT_INIT', `SeeqAPIClient initialized with proxy: ${this.proxyUrl}, Seeq server: ${this.seeqServerUrl}`);\n  }\n\n  /**\n   * Get the user's IANA timezone from the browser/Excel webview\n   */\n  private getUserTimezone(): string {\n    try {\n      const tz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n      return tz || 'UTC';\n    } catch (_e) {\n      return 'UTC';\n    }\n  }\n\n  /**\n   * Adjust timestamps in data to account for timezone offset\n   * This ensures dates display correctly in Excel\n   */\n  private adjustTimestampsForTimezone(data: any[]): any[] {\n    if (!data || !Array.isArray(data)) return data;\n    \n    // Previously injected a debug row; now just return data unchanged\n    return data;\n  }\n\n  /**\n   * Log diagnostic information for debugging\n   */\n  private logDiagnostic(category: string, message: string, data?: any): void {\n    const logEntry = {\n      timestamp: new Date().toISOString(),\n      category,\n      message,\n      data,\n      userAgent: navigator.userAgent,\n      origin: window.location.origin,\n      appDomain: this.detectAppDomain(),\n      networkInfo: this.getNetworkInfo()\n    };\n    \n    this.diagnosticLog.push(logEntry);\n  }\n\n  /**\n   * Detect the current AppDomain context\n   */\n  private detectAppDomain(): string {\n    try {\n      if (typeof Office !== 'undefined' && Office.context) {\n        return `Office.js - ${Office.context.host || 'Unknown Host'}`;\n      }\n      if (window.location.protocol === 'https:') {\n        return 'HTTPS Web Context';\n      }\n      if (window.location.protocol === 'http:') {\n        return 'HTTP Web Context';\n      }\n      if (window.location.protocol === 'file:') {\n        return 'File Protocol Context';\n      }\n      return `Unknown Context - ${window.location.protocol}`;\n    } catch (error) {\n      return `Error detecting context: ${error}`;\n    }\n  }\n\n  /**\n   * Get network information\n   */\n  private getNetworkInfo(): any {\n    try {\n      const connection = (navigator as any).connection || (navigator as any).mozConnection || (navigator as any).webkitConnection;\n      return {\n        online: navigator.onLine,\n        connectionType: connection?.effectiveType || 'unknown',\n        downlink: connection?.downlink || 'unknown',\n        rtt: connection?.rtt || 'unknown'\n      };\n    } catch (error) {\n      return { online: navigator.onLine, error: error.toString() };\n    }\n  }\n\n  /**\n   * Get comprehensive diagnostic information\n   */\n  getDiagnostics(): any {\n    return {\n      clientInfo: {\n        proxyUrl: this.proxyUrl,\n        seeqServerUrl: this.seeqServerUrl,\n        isAuthenticated: !!this.authToken,\n        diagnosticLogCount: this.diagnosticLog.length\n      },\n      environment: {\n        userAgent: navigator.userAgent,\n        origin: window.location.origin,\n        appDomain: this.detectAppDomain(),\n        networkInfo: this.getNetworkInfo(),\n        timestamp: new Date().toISOString()\n      },\n      recentLogs: this.diagnosticLog.slice(-20) // Last 20 log entries\n    };\n  }\n\n  /**\n   * Clear diagnostic logs\n   */\n  clearDiagnostics(): void {\n    this.diagnosticLog = [];\n    this.logDiagnostic('DIAGNOSTICS_CLEARED', 'Diagnostic logs cleared');\n  }\n\n  /**\n   * Test connection to the proxy server\n   */\n  async testConnection(): Promise<SeeqConnectionResult> {\n    const startTime = Date.now();\n    const url = `${this.proxyUrl}/api/seeq/test-connection`;\n    \n    this.logDiagnostic('PROXY_CONNECTION_TEST_START', `Testing connection to proxy server: ${this.proxyUrl}`, {\n      url,\n      seeqServerUrl: this.seeqServerUrl,\n      appDomain: this.detectAppDomain(),\n      networkInfo: this.getNetworkInfo()\n    });\n    \n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seeq_url: this.seeqServerUrl\n        })\n      });\n\n      const requestTime = Date.now() - startTime;\n      \n      // Log all response headers\n      const allHeaders: any = {};\n      response.headers.forEach((value, key) => {\n        allHeaders[key] = value;\n      });\n\n      this.logDiagnostic('PROXY_CONNECTION_RESPONSE', `Proxy connection test response received`, {\n        status: response.status,\n        statusText: response.statusText,\n        requestTime,\n        allHeaders,\n        url: response.url\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.logDiagnostic('PROXY_CONNECTION_SUCCESS', 'Proxy connection test successful', data);\n        \n        return {\n          success: true,\n          message: data.message || \"Proxy server is reachable and can connect to Seeq\",\n          status_code: response.status,\n          diagnostics: {\n            response_headers: allHeaders,\n            request_timing: requestTime,\n            user_agent: navigator.userAgent,\n            origin: window.location.origin,\n            app_domain: this.detectAppDomain(),\n            network_type: this.getNetworkInfo().connectionType,\n            cors_status: 'OK'\n          }\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        this.logDiagnostic('PROXY_CONNECTION_FAILED', `Proxy connection test failed with status: ${response.status}`, {\n          status: response.status,\n          statusText: response.statusText,\n          headers: allHeaders,\n          errorData\n        });\n        \n        return {\n          success: false,\n          message: errorData.message || `Proxy server responded with status code: ${response.status}`,\n          status_code: response.status,\n          error: errorData.error || `HTTP ${response.status}`,\n          diagnostics: {\n            response_headers: allHeaders,\n            request_timing: requestTime,\n            user_agent: navigator.userAgent,\n            origin: window.location.origin,\n            app_domain: this.detectAppDomain(),\n            network_type: this.getNetworkInfo().connectionType,\n            cors_status: 'OK'\n          }\n        };\n      }\n    } catch (error: any) {\n      const requestTime = Date.now() - startTime;\n      \n      this.logDiagnostic('PROXY_CONNECTION_ERROR', `Proxy connection test error`, {\n        error: error.message,\n        errorName: error.name,\n        errorStack: error.stack,\n        requestTime,\n        url\n      });\n      \n      let message = \"Proxy connection test failed\";\n      let errorType = \"Unknown\";\n      \n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        message = \"Cannot connect to proxy server - connection refused. This may be due to network issues.\";\n        errorType = \"ConnectionError\";\n      } else if (error.name === 'AbortError') {\n        message = \"Connection timeout - the proxy server took too long to respond.\";\n        errorType = \"Timeout\";\n      } else if (error.message.includes('Failed to fetch')) {\n        message = \"Connection failed - unable to reach the proxy server. This may be due to network problems.\";\n        errorType = \"FetchError\";\n      } else {\n        message = `Proxy connection test failed: ${error.message}`;\n        errorType = error.message;\n      }\n      \n      return {\n        success: false,\n        message,\n        error: errorType,\n        diagnostics: {\n          request_timing: requestTime,\n          user_agent: navigator.userAgent,\n          origin: window.location.origin,\n          app_domain: this.detectAppDomain(),\n          network_type: this.getNetworkInfo().connectionType,\n          cors_status: 'OK'\n        }\n      };\n    }\n  }\n\n  /**\n   * Authenticate with Seeq server through proxy\n   */\n  async authenticate(accessKey: string, password: string, authProvider: string = 'Seeq', ignoreSslErrors: boolean = false): Promise<SeeqAuthResult> {\n    try {\n      // Store credentials for later use\n      this.credentials = {\n        accessKey,\n        password,\n        authProvider,\n        ignoreSslErrors,\n        seeq_url: this.seeqServerUrl\n      };\n\n      this.logDiagnostic('PROXY_AUTH_START', `Attempting to authenticate through proxy: ${this.proxyUrl}`, {\n        seeqServerUrl: this.seeqServerUrl,\n        accessKey,\n        authProvider\n      });\n\n      const response = await fetch(`${this.proxyUrl}/api/seeq/auth`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seeq_url: this.seeqServerUrl,\n          username: accessKey,\n          password: password,\n          auth_provider: authProvider,\n          ignore_ssl_errors: ignoreSslErrors\n        })\n      });\n\n      this.logDiagnostic('PROXY_AUTH_RESPONSE', `Proxy authentication response received`, {\n        status: response.status,\n        statusText: response.statusText\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.authToken = data.token || 'authenticated';\n        \n        this.logDiagnostic('PROXY_AUTH_SUCCESS', 'Proxy authentication successful', {\n          user: data.user,\n          server_url: data.server_url\n        });\n        \n        // Store credentials in backend for Excel functions to use\n        try {\n          await this.storeCredentialsForExcel();\n        } catch (storeError) {\n          // Swallow storage errors; do not spam console in production\n        }\n        \n        return {\n          success: true,\n          message: data.message || `Successfully authenticated as ${accessKey}`,\n          user: data.user || accessKey,\n          server_url: data.server_url || this.seeqServerUrl,\n          token: this.authToken || undefined\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        this.logDiagnostic('PROXY_AUTH_FAILED', 'Proxy authentication failed', {\n          status: response.status,\n          errorData\n        });\n        \n        return {\n          success: false,\n          message: errorData.message || `Authentication failed with status ${response.status}`,\n          error: errorData.error || `HTTP ${response.status}`\n        };\n      }\n    } catch (error: any) {\n      this.logDiagnostic('PROXY_AUTH_ERROR', 'Proxy authentication error', {\n        error: error.message,\n        errorName: error.name\n      });\n      \n      let errorMessage = 'Authentication failed';\n      let errorType = 'Unknown';\n      \n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        errorMessage = 'Network error: Cannot connect to proxy server. Please check your internet connection.';\n        errorType = 'NetworkError';\n      } else if (error.name === 'AbortError') {\n        errorMessage = 'Request timeout: The authentication request took too long. Please try again.';\n        errorType = 'TimeoutError';\n      } else if (error.message.includes('Failed to fetch')) {\n        errorMessage = 'Connection failed: Unable to reach the proxy server. This may be due to network issues.';\n        errorType = 'ConnectionError';\n      } else {\n        errorMessage = `Authentication failed: ${error.message}`;\n        errorType = error.name || 'UnknownError';\n      }\n      \n      return {\n        success: false,\n        message: errorMessage,\n        error: errorType\n      };\n    }\n  }\n\n  /**\n   * Store credentials in backend for Excel functions to use\n   */\n  private async storeCredentialsForExcel(): Promise<void> {\n    if (!this.credentials) {\n      throw new Error('No credentials available to store');\n    }\n\n    const response = await fetch(`${this.proxyUrl}/api/seeq/credentials`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        url: this.seeqServerUrl,\n        accessKey: this.credentials.accessKey,\n        password: this.credentials.password,\n        authProvider: this.credentials.authProvider,\n        ignoreSslErrors: this.credentials.ignoreSslErrors,\n        timestamp: new Date().toISOString()\n      })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(`Failed to store credentials: ${errorData.error || response.statusText}`);\n    }\n  }\n\n  /**\n   * Search for sensors in Seeq through proxy\n   */\n  async searchSensors(sensorNames: string[]): Promise<SeeqSearchResult> {\n    if (!this.authToken && !this.credentials) {\n      return {\n        success: false,\n        message: \"Not authenticated. Please authenticate first.\",\n        error: \"Authentication required\",\n        search_results: [],\n        sensor_count: 0\n      };\n    }\n\n    try {\n      this.logDiagnostic('PROXY_SEARCH_START', `Searching for sensors through proxy`, {\n        sensorNames,\n        seeqServerUrl: this.seeqServerUrl\n      });\n\n      const response = await fetch(`${this.proxyUrl}/api/seeq/search`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seeq_url: this.seeqServerUrl,\n          sensor_names: sensorNames,\n          username: this.credentials?.accessKey,\n          password: this.credentials?.password,\n          auth_provider: this.credentials?.authProvider || 'Seeq'\n        })\n      });\n\n      this.logDiagnostic('PROXY_SEARCH_RESPONSE', `Proxy search response received`, {\n        status: response.status,\n        statusText: response.statusText\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.logDiagnostic('PROXY_SEARCH_SUCCESS', 'Proxy search successful', {\n          sensorCount: data.sensor_count,\n          searchResults: data.search_results\n        });\n\n        return {\n          success: true,\n          message: data.message || `Found ${data.sensor_count} sensors`,\n          search_results: data.search_results || [],\n          sensor_count: data.sensor_count || 0\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        this.logDiagnostic('PROXY_SEARCH_FAILED', 'Proxy search failed', {\n          status: response.status,\n          errorData\n        });\n\n        return {\n          success: false,\n          message: errorData.message || `Search failed with status ${response.status}`,\n          error: errorData.error || `HTTP ${response.status}`,\n          search_results: [],\n          sensor_count: 0\n        };\n      }\n    } catch (error: any) {\n      this.logDiagnostic('PROXY_SEARCH_ERROR', 'Proxy search error', {\n        error: error.message,\n        errorName: error.name\n      });\n\n      return {\n        success: false,\n        message: `Sensor search failed: ${error.message}`,\n        error: error.message,\n        search_results: [],\n        sensor_count: 0\n      };\n    }\n  }\n\n  /**\n   * Search for sensors and pull their data through proxy\n   */\n  async searchAndPullSensors(sensorNames: string[], startTime: string, endTime: string, mode: string = 'points', modeValue: string | number = 1000): Promise<SeeqDataResult> {\n    try {\n      // Calculate grid based on mode\n      let grid: string;\n      if (mode === 'grid') {\n        grid = String(modeValue);\n      } else {\n        // mode === 'points' - calculate grid from number of points\n        const numPoints = typeof modeValue === 'number' ? modeValue : parseInt(String(modeValue));\n        const startDate = new Date(startTime);\n        const endDate = new Date(endTime);\n        const timeRangeMs = endDate.getTime() - startDate.getTime();\n        const timeRangeSeconds = Math.floor(timeRangeMs / 1000);\n        const secondsPerPoint = Math.floor(timeRangeSeconds / numPoints);\n        grid = `${secondsPerPoint}s`;\n      }\n\n      this.logDiagnostic('PROXY_SEARCH_PULL_START', `Searching and pulling sensor data through proxy`, {\n        sensorNames,\n        startTime,\n        endTime,\n        mode,\n        modeValue,\n        calculatedGrid: grid,\n        seeqServerUrl: this.seeqServerUrl\n      });\n\n      const response = await fetch(`${this.proxyUrl}/api/seeq/data`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seeq_url: this.seeqServerUrl,\n          sensor_names: sensorNames,\n          start_time: startTime,\n          end_time: endTime,\n          grid: grid,\n          // Provide user's timezone so backend can localize naive times\n          user_timezone: this.getUserTimezone(),\n          username: this.credentials?.accessKey,\n          password: this.credentials?.password,\n          auth_provider: this.credentials?.authProvider || 'Seeq'\n        })\n      });\n\n      this.logDiagnostic('PROXY_SEARCH_PULL_RESPONSE', `Proxy search and pull response received`, {\n        status: response.status,\n        statusText: response.statusText\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.logDiagnostic('PROXY_SEARCH_PULL_SUCCESS', 'Proxy search and pull successful', {\n          sensorCount: data.sensor_count,\n          dataLength: data.data?.length || 0,\n          dataColumns: data.data_columns\n        });\n\n        // Adjust timestamps for timezone offset before returning\n        const adjustedData = this.adjustTimestampsForTimezone(data.data || []);\n\n        return {\n          success: true,\n          message: data.message || `Successfully retrieved data for ${data.sensor_count} sensors`,\n          search_results: data.search_results || [],\n          data: adjustedData,\n          data_columns: data.data_columns || [],\n          data_index: data.data_index || [],\n          sensor_count: data.sensor_count || 0,\n          time_range: {\n            start: startTime,\n            end: endTime,\n            mode: mode,\n            modeValue: modeValue\n          }\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        this.logDiagnostic('PROXY_SEARCH_PULL_FAILED', 'Proxy search and pull failed', {\n          status: response.status,\n          errorData\n        });\n\n        return {\n          success: false,\n          message: errorData.message || `Search and pull failed with status ${response.status}`,\n          error: errorData.error || `HTTP ${response.status}`,\n          search_results: [],\n          data: [],\n          data_columns: [],\n          data_index: [],\n          sensor_count: 0,\n          time_range: { start: startTime, end: endTime, mode, modeValue }\n        };\n      }\n    } catch (error: any) {\n      this.logDiagnostic('PROXY_SEARCH_PULL_ERROR', 'Proxy search and pull error', {\n        error: error.message,\n        errorName: error.name\n      });\n\n      return {\n        success: false,\n        message: `Search and pull operation failed: ${error.message}`,\n        error: error.message,\n        search_results: [],\n        data: [],\n        data_columns: [],\n        data_index: [],\n        sensor_count: 0,\n        time_range: { start: startTime, end: endTime, mode, modeValue }\n      };\n    }\n  }\n\n  /**\n   * Get current authentication status\n   */\n  getAuthStatus(): { isAuthenticated: boolean; user?: string } {\n    return {\n      isAuthenticated: !!this.authToken,\n      user: this.credentials?.accessKey\n    };\n  }\n\n  /**\n   * Clear authentication\n   */\n  async logout(): Promise<void> {\n    try {\n      if (this.authToken) {\n        this.logDiagnostic('PROXY_LOGOUT_START', 'Logging out through proxy');\n        \n        const response = await fetch(`${this.proxyUrl}/api/seeq/auth`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            seeq_url: this.seeqServerUrl,\n            username: this.credentials?.accessKey\n          })\n        });\n\n        this.logDiagnostic('PROXY_LOGOUT_RESPONSE', `Proxy logout response received`, {\n          status: response.status,\n          statusText: response.statusText\n        });\n      }\n      \n      // Clear credentials from backend for Excel functions\n      try {\n        await fetch(`${this.proxyUrl}/api/seeq/credentials`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        });\n      } catch (clearError) {\n        // Ignore cleanup errors silently\n        // Don't fail logout if credential clearing fails\n      }\n    } catch (error: any) {\n      this.logDiagnostic('PROXY_LOGOUT_ERROR', 'Proxy logout error', {\n        error: error.message\n      });\n    } finally {\n      this.authToken = null;\n      this.credentials = null;\n    }\n  }\n\n  /**\n   * Get stored credentials for persistence\n   */\n  getCredentials(): any {\n    return this.credentials;\n  }\n\n  /**\n   * Set credentials from storage\n   */\n  setCredentials(credentials: any): void {\n    this.credentials = credentials;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n// Import CSS for styling\nimport './taskpane.css';\n\n// Import the new Seeq API client\nimport { SeeqAPIClient } from './seeq-api-client';\n\n// Version will be dynamically loaded from version.json\nlet ADDIN_VERSION = \"Loading...\";\n\n// Global API client instance\nlet seeqClient: SeeqAPIClient | null = null;\n\n// Load version information from version.json\nasync function loadVersionInfo(): Promise<void> {\n  try {\n    // Try relative path first, then fallback to full URL\n    let response = await fetch('./version.json');\n    \n    if (!response.ok) {\n      // Fallback to full URL if relative path fails\n      response = await fetch('https://adraughon.github.io/SqExcel/version.json');\n    }\n    \n    if (response.ok) {\n      const versionData = await response.json();\n      ADDIN_VERSION = versionData.version;\n    } else {\n      ADDIN_VERSION = \"Version info unavailable\";\n    }\n  } catch (error) {\n    ADDIN_VERSION = \"Version info unavailable\";\n  }\n}\n\n// The initialize function must be run each time a new page is loaded\nOffice.onReady(async () => {\n  const sideloadMsg = document.getElementById(\"sideload-msg\");\n  const appBody = document.getElementById(\"app-body\");\n  if (sideloadMsg) sideloadMsg.style.display = \"none\";\n  if (appBody) appBody.style.display = \"flex\";\n  \n  // Load version information first\n  await loadVersionInfo();\n  \n  // Initialize Seeq authentication\n  initializeSeeqAuth();\n});\n\n// Seeq Authentication Interface\ninterface SeeqAuthResult {\n  success: boolean;\n  message: string;\n  user?: string;\n  server_url?: string;\n  error?: string;\n}\n\ninterface SeeqConnectionResult {\n  success: boolean;\n  message: string;\n  status_code?: number;\n  error?: string;\n}\n\n// Seeq Authentication Functions\nfunction initializeSeeqAuth(): void {\n  const authenticateBtn = document.getElementById(\"authenticate\") as HTMLButtonElement;\n  const logoutBtn = document.getElementById(\"logout\") as HTMLButtonElement;\n  const searchSensorsBtn = document.getElementById(\"search-sensors\") as HTMLButtonElement;\n  const pullDataBtn = document.getElementById(\"pull-data\") as HTMLButtonElement;\n\n  if (authenticateBtn) {\n    authenticateBtn.onclick = authenticateWithSeeq;\n  }\n  \n  if (logoutBtn) {\n    logoutBtn.onclick = logoutFromSeeq;\n  }\n\n  if (searchSensorsBtn) {\n    searchSensorsBtn.onclick = searchSensors;\n  }\n\n  if (pullDataBtn) {\n    pullDataBtn.onclick = pullSensorData;\n  }\n\n  // Add event listener for mode selection change\n  const dataModeSelect = document.getElementById(\"data-mode\") as HTMLSelectElement;\n  if (dataModeSelect) {\n    dataModeSelect.onchange = handleModeChange;\n  }\n\n  // Load saved credentials if available\n  loadSavedCredentials();\n  \n  // Display version number to prove we're using new code\n  showAuthStatus(`Add-in Version: ${ADDIN_VERSION}`, \"info\");\n}\n\nfunction handleModeChange(): void {\n  const dataModeSelect = document.getElementById(\"data-mode\") as HTMLSelectElement;\n  const modeValueInput = document.getElementById(\"mode-value\") as HTMLInputElement;\n  const modeValueLabel = document.getElementById(\"mode-value-label\") as HTMLLabelElement;\n  \n  if (!dataModeSelect || !modeValueInput || !modeValueLabel) return;\n  \n  const selectedMode = dataModeSelect.value;\n  \n  if (selectedMode === \"grid\") {\n    modeValueLabel.textContent = \"Grid Interval:\";\n    modeValueInput.placeholder = \"15min\";\n    modeValueInput.value = \"15min\";\n    modeValueInput.type = \"text\";\n  } else {\n    modeValueLabel.textContent = \"Number of Points:\";\n    modeValueInput.placeholder = \"1000\";\n    modeValueInput.value = \"1000\";\n    modeValueInput.type = \"number\";\n  }\n}\n\nasync function authenticateWithSeeq(): Promise<void> {\n  const url = (document.getElementById(\"seeq-url\") as HTMLInputElement)?.value;\n  const accessKey = (document.getElementById(\"seeq-access-key\") as HTMLInputElement)?.value;\n  const password = (document.getElementById(\"seeq-password\") as HTMLInputElement)?.value;\n\n  if (!url || !accessKey || !password) {\n    showAuthStatus(\"Please fill in all required fields\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Authenticating...\", \"loading\");\n  \n  try {\n    // Use the API client to authenticate\n    if (!seeqClient) {\n      seeqClient = new SeeqAPIClient(url);\n    }\n    \n    const result = await seeqClient.authenticate(accessKey, password, 'Seeq', false);\n    \n    if (result.success) {\n      showAuthStatus(\"Authentication successful\", \"success\");\n      saveCredentials(url, accessKey, password, false);\n      updateAuthUI(true);\n      // Update Excel function cache\n      updateExcelCache(\"auth\", result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Authentication failed: ${error}`, \"error\");\n  }\n}\n\nasync function searchSensors(): Promise<void> {\n  const sensorNamesInput = (document.getElementById(\"sensor-names\") as HTMLInputElement)?.value;\n  \n  if (!sensorNamesInput) {\n    showAuthStatus(\"Please enter sensor names to search for\", \"error\");\n    return;\n  }\n\n  const sensorNames = sensorNamesInput.split(',').map(name => name.trim()).filter(name => name);\n  \n  if (sensorNames.length === 0) {\n    showAuthStatus(\"Please enter valid sensor names\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Searching for sensors...\", \"loading\");\n  \n  try {\n    // Use the API client to search for sensors\n    if (!seeqClient) {\n      showAuthStatus(\"Please test connection first\", \"error\");\n      return;\n    }\n    \n    const result = await seeqClient.searchSensors(sensorNames);\n    \n    if (result.success) {\n      showAuthStatus(`Found ${result.sensor_count} sensors`, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"search\", result);\n      // Display results\n      displaySearchResults(result.search_results);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Sensor search failed: ${error}`, \"error\");\n  }\n}\n\nasync function pullSensorData(): Promise<void> {\n  const sensorNamesInput = (document.getElementById(\"sensor-names\") as HTMLInputElement)?.value;\n  const startTimeInput = (document.getElementById(\"start-time\") as HTMLInputElement)?.value;\n  const endTimeInput = (document.getElementById(\"end-time\") as HTMLInputElement)?.value;\n  const dataMode = (document.getElementById(\"data-mode\") as HTMLSelectElement)?.value;\n  const modeValueInput = (document.getElementById(\"mode-value\") as HTMLInputElement)?.value;\n  \n  if (!sensorNamesInput || !startTimeInput || !endTimeInput) {\n    showAuthStatus(\"Please fill in all required fields\", \"error\");\n    return;\n  }\n\n  const sensorNames = sensorNamesInput.split(',').map(name => name.trim()).filter(name => name);\n  const mode = dataMode || \"points\";\n  const modeValue = modeValueInput || (mode === \"points\" ? \"1000\" : \"15min\");\n  \n  if (sensorNames.length === 0) {\n    showAuthStatus(\"Please enter valid sensor names\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Pulling sensor data...\", \"loading\");\n  \n  try {\n    // Use the API client to search and pull data\n    if (!seeqClient) {\n      showAuthStatus(\"Please test connection first\", \"error\");\n      return;\n    }\n    \n    const result = await seeqClient.searchAndPullSensors(sensorNames, startTimeInput, endTimeInput, mode, modeValue);\n    \n    if (result.success) {\n      showAuthStatus(`Retrieved data for ${result.sensor_count} sensors`, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"data\", result);\n      // Display results\n      displayDataResults(result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Data retrieval failed: ${error}`, \"error\");\n  }\n}\n\nfunction logoutFromSeeq(): void {\n  // Clear saved credentials\n  localStorage.removeItem(\"seeq_credentials\");\n  \n  // Clear API client state\n  if (seeqClient) {\n    seeqClient.logout();\n  }\n  \n  // Update UI\n  updateAuthUI(false);\n  showAuthStatus(\"Logged out successfully\", \"info\");\n  \n  // Clear form fields\n  (document.getElementById(\"seeq-url\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"seeq-access-key\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"seeq-password\") as HTMLInputElement).value = \"\";\n}\n\nfunction showAuthStatus(message: string, type: \"success\" | \"error\" | \"info\" | \"loading\" | \"warning\"): void {\n  const statusElement = document.getElementById(\"auth-status\");\n  if (statusElement) {\n    statusElement.textContent = message;\n    statusElement.className = `auth-status ${type}`;\n  }\n}\n\nfunction updateAuthUI(isAuthenticated: boolean): void {\n  const authBtn = document.getElementById(\"authenticate\") as HTMLButtonElement;\n  const logoutBtn = document.getElementById(\"logout\") as HTMLButtonElement;\n  const urlInput = document.getElementById(\"seeq-url\") as HTMLInputElement;\n  const accessKeyInput = document.getElementById(\"seeq-access-key\") as HTMLInputElement;\n  const passwordInput = document.getElementById(\"seeq-password\") as HTMLInputElement;\n\n  if (isAuthenticated) {\n    authBtn.style.display = \"none\";\n    logoutBtn.style.display = \"inline-block\";\n    \n    // Disable form inputs\n    urlInput.disabled = true;\n    accessKeyInput.disabled = true;\n    passwordInput.disabled = true;\n  } else {\n    authBtn.style.display = \"inline-block\";\n    logoutBtn.style.display = \"none\";\n    \n    // Enable form inputs\n    urlInput.disabled = false;\n    accessKeyInput.disabled = false;\n    passwordInput.disabled = false;\n  }\n}\n\nfunction saveCredentials(url: string, accessKey: string, password: string, ignoreSsl: boolean): void {\n  const credentials = {\n    url,\n    accessKey,\n    password,\n    ignoreSsl: false,\n    timestamp: new Date().toISOString()\n  };\n  \n  localStorage.setItem(\"seeq_credentials\", JSON.stringify(credentials));\n}\n\n// Load saved credentials from localStorage\nfunction loadSavedCredentials(): void {\n  const saved = localStorage.getItem(\"seeq_credentials\");\n  if (saved) {\n    try {\n      const credentials = JSON.parse(saved);\n      \n      // Populate form fields\n      (document.getElementById(\"seeq-url\") as HTMLInputElement).value = credentials.url || \"\";\n      (document.getElementById(\"seeq-access-key\") as HTMLInputElement).value = credentials.accessKey || \"\";\n      (document.getElementById(\"seeq-password\") as HTMLInputElement).value = credentials.password || \"\";\n      \n      // Check if credentials are still valid (less than 24 hours old)\n      const timestamp = new Date(credentials.timestamp);\n      const now = new Date();\n      const hoursDiff = (now.getTime() - timestamp.getTime()) / (1000 * 60 * 60);\n      \n      if (hoursDiff < 24) {\n        // Credentials are still valid, update UI\n        updateAuthUI(true);\n        showAuthStatus(\"Using saved credentials\", \"info\");\n        \n        // Recreate API client with saved URL\n        if (credentials.url) {\n          seeqClient = new SeeqAPIClient(credentials.url);\n        }\n      } else {\n        // Credentials expired, remove them\n        localStorage.removeItem(\"seeq_credentials\");\n      }\n    } catch (error) {\n      localStorage.removeItem(\"seeq_credentials\");\n    }\n  }\n}\n\n// Update Excel function cache\nfunction updateExcelCache(operationType: string, data: any): void {\n  try {\n    const jsonData = JSON.stringify(data);\n    const cacheUpdate = `=SEEQ_UPDATE_CACHE(\"${operationType}\", '${jsonData}')`;\n    \n    Excel.run(async (context) => {\n      const worksheet = context.workbook.worksheets.getActiveWorksheet();\n      const range = worksheet.getRange(\"A1\");\n      range.values = [[cacheUpdate]];\n      await context.sync();\n    }).catch(error => {\n      // Silent fail for cache update\n    });\n  } catch (error) {\n    // Silent fail for cache update\n  }\n}\n\n// Display search results in the UI\nfunction displaySearchResults(results: any[]): void {\n  const resultsDiv = document.getElementById(\"search-results\");\n  if (resultsDiv && results.length > 0) {\n    let html = `\n      <h3>Search Results (${results.length} sensors)</h3>\n      <div class=\"results-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Original Name</th>\n              <th>Seeq Name</th>\n              <th>ID</th>\n              <th>Type</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n    `;\n    \n    results.forEach(result => {\n      html += `\n        <tr>\n          <td>${result.Original_Name || result.Name || \"N/A\"}</td>\n          <td>${result.Name || \"N/A\"}</td>\n          <td>${result.ID || \"Not Found\"}</td>\n          <td>${result.Type || \"N/A\"}</td>\n          <td>${result.Status || \"Unknown\"}</td>\n        </tr>\n      `;\n    });\n    \n    html += `\n          </tbody>\n        </table>\n      </div>\n    `;\n    \n    resultsDiv.innerHTML = html;\n  }\n}\n\n// Display data results in the UI\nfunction displayDataResults(result: any): void {\n  const resultsDiv = document.getElementById(\"data-results\");\n  if (resultsDiv && result.data && result.data.length > 0) {\n    const dataToShow = result.data.slice(0, 10); // Show first 10 rows\n    \n    // Check if first row contains debug information\n    const firstRow = result.data[0];\n    const isDebugRow = firstRow && (firstRow.Timestamp === 'DEBUG_ROW' || Object.keys(firstRow).some(key => key.startsWith('DEBUG_')));\n    \n    let html = `\n      <h3>Data Results (${result.data.length} rows)</h3>\n      <div style=\"background-color: #e8f4f8; padding: 10px; margin: 10px 0; border-radius: 5px;\">\n        <strong>Debug Info:</strong> First row Timestamp = \"${firstRow?.Timestamp || 'undefined'}\", \n        Has DEBUG keys: ${Object.keys(firstRow || {}).filter(key => key.startsWith('DEBUG_')).length > 0 ? 'YES' : 'NO'}\n      </div>\n      <div class=\"results-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Timestamp</th>\n              ${result.data_columns.map(col => `<th>${col}</th>`).join('')}\n            </tr>\n          </thead>\n          <tbody>\n    `;\n    \n    dataToShow.forEach(row => {\n      html += `\n        <tr>\n          <td>${row.Timestamp || row.index || \"N/A\"}</td>\n          ${result.data_columns.map(col => `<td>${row[col] !== undefined ? row[col] : \"N/A\"}</td>`).join('')}\n        </tr>\n      `;\n    });\n    \n    html += `\n          </tbody>\n        </table>\n        ${result.data.length > 10 ? `<p><em>Showing first 10 of ${result.data.length} rows</em></p>` : ''}\n      </div>\n    `;\n    \n    // Add debug information if present\n    if (isDebugRow) {\n      html += `\n        <div style=\"margin-top: 20px; padding: 15px; background-color: #f0f0f0; border: 1px solid #ccc; border-radius: 5px;\">\n          <h4>Debug Information (First Row)</h4>\n          <div style=\"font-family: monospace; font-size: 12px;\">\n      `;\n      \n      Object.keys(firstRow).forEach(key => {\n        if (key.startsWith('DEBUG_')) {\n          html += `<div><strong>${key}:</strong> ${firstRow[key]}</div>`;\n        }\n      });\n      \n      html += `\n          </div>\n        </div>\n      `;\n    }\n    \n    resultsDiv.innerHTML = html;\n  }\n}\n\n// Display comprehensive diagnostics\nfunction displayDiagnostics(connectionResult: any, authResult: any = null): void {\n  const diagnosticsDiv = document.getElementById(\"diagnostics\");\n  if (!diagnosticsDiv) return;\n\n  const diagnostics = seeqClient?.getDiagnostics();\n  if (!diagnostics) return;\n\n  let html = `\n    <div class=\"diagnostics-panel\">\n      <h3>🔍 Connection Diagnostics</h3>\n      <div class=\"diagnostic-section\">\n        <h4>Environment Information</h4>\n        <div class=\"diagnostic-grid\">\n          <div class=\"diagnostic-item\">\n            <strong>App Domain:</strong> ${diagnostics.environment.appDomain}\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Origin:</strong> ${diagnostics.environment.origin}\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Network Type:</strong> ${diagnostics.environment.networkInfo.connectionType}\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Online Status:</strong> ${diagnostics.environment.networkInfo.online ? '✅ Online' : '❌ Offline'}\n          </div>\n        </div>\n      </div>\n  `;\n\n  // Connection test results\n  if (connectionResult.diagnostics) {\n    html += `\n      <div class=\"diagnostic-section\">\n        <h4>Connection Test Results</h4>\n        <div class=\"diagnostic-grid\">\n          <div class=\"diagnostic-item\">\n            <strong>Response Time:</strong> ${connectionResult.diagnostics.request_timing}ms\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Status Code:</strong> ${connectionResult.status_code}\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>CORS Status:</strong> ${connectionResult.diagnostics.cors_status}\n          </div>\n        </div>\n    `;\n\n    // Show CORS headers if available\n    if (connectionResult.diagnostics.response_headers) {\n      const corsHeaders = [\n        'access-control-allow-origin',\n        'access-control-allow-methods',\n        'access-control-allow-headers',\n        'access-control-allow-credentials'\n      ];\n      \n      html += `\n        <div class=\"cors-headers\">\n          <h5>CORS Headers:</h5>\n          <ul>\n      `;\n      \n      corsHeaders.forEach(header => {\n        const value = connectionResult.diagnostics.response_headers[header];\n        html += `<li><strong>${header}:</strong> ${value || 'Not set'}</li>`;\n      });\n      \n      html += `</ul></div>`;\n    }\n    \n    html += `</div>`;\n  }\n\n  // Auth endpoint test results\n  if (authResult && authResult.diagnostics) {\n    html += `\n      <div class=\"diagnostic-section\">\n        <h4>Authentication Endpoint Test</h4>\n        <div class=\"diagnostic-grid\">\n          <div class=\"diagnostic-item\">\n            <strong>Response Time:</strong> ${authResult.diagnostics.request_timing}ms\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Status Code:</strong> ${authResult.status_code}\n          </div>\n        </div>\n    `;\n\n    // Show CORS analysis if available\n    if (authResult.diagnostics.cors_analysis) {\n      const corsAnalysis = authResult.diagnostics.cors_analysis;\n      html += `\n        <div class=\"cors-analysis\">\n          <h5>CORS Configuration Analysis:</h5>\n          <div class=\"cors-status\">\n            <div class=\"cors-item ${corsAnalysis.allowsOrigin ? 'success' : 'error'}\">\n              <strong>Origin Allowed:</strong> ${corsAnalysis.allowsOrigin ? '✅ Yes' : '❌ No'}\n            </div>\n            <div class=\"cors-item ${corsAnalysis.allowsMethods ? 'success' : 'error'}\">\n              <strong>Methods Allowed:</strong> ${corsAnalysis.allowsMethods ? '✅ Yes' : '❌ No'}\n            </div>\n            <div class=\"cors-item ${corsAnalysis.allowsHeaders ? 'success' : 'error'}\">\n              <strong>Headers Allowed:</strong> ${corsAnalysis.allowsHeaders ? '✅ Yes' : '❌ No'}\n            </div>\n          </div>\n      `;\n\n      if (corsAnalysis.issues.length > 0) {\n        html += `\n          <div class=\"cors-issues\">\n            <h6>Issues Found:</h6>\n            <ul>\n              ${corsAnalysis.issues.map(issue => `<li>❌ ${issue}</li>`).join('')}\n            </ul>\n          </div>\n        `;\n      }\n\n      if (corsAnalysis.recommendations.length > 0) {\n        html += `\n          <div class=\"cors-recommendations\">\n            <h6>Recommendations:</h6>\n            <ul>\n              ${corsAnalysis.recommendations.map(rec => `<li>💡 ${rec}</li>`).join('')}\n            </ul>\n          </div>\n        `;\n      }\n\n      html += `</div>`;\n    }\n    \n    html += `</div>`;\n  }\n\n  // Recent diagnostic logs\n  if (diagnostics.recentLogs && diagnostics.recentLogs.length > 0) {\n    html += `\n      <div class=\"diagnostic-section\">\n        <h4>Recent Diagnostic Logs</h4>\n        <div class=\"log-entries\">\n    `;\n    \n    diagnostics.recentLogs.slice(-10).forEach((log: any) => {\n      const timestamp = new Date(log.timestamp).toLocaleTimeString();\n      html += `\n        <div class=\"log-entry\">\n          <span class=\"log-time\">${timestamp}</span>\n          <span class=\"log-category\">[${log.category}]</span>\n          <span class=\"log-message\">${log.message}</span>\n        </div>\n      `;\n    });\n    \n    html += `</div></div>`;\n  }\n\n  html += `\n      <div class=\"diagnostic-actions\">\n        <button onclick=\"clearDiagnostics()\" class=\"btn-secondary\">Clear Logs</button>\n        <button onclick=\"exportDiagnostics()\" class=\"btn-secondary\">Export Diagnostics</button>\n      </div>\n    </div>\n  `;\n\n  diagnosticsDiv.innerHTML = html;\n}\n\n// Display error diagnostics\nfunction displayErrorDiagnostics(result: any): void {\n  const diagnosticsDiv = document.getElementById(\"diagnostics\");\n  if (!diagnosticsDiv) return;\n\n  const diagnostics = seeqClient?.getDiagnostics();\n  if (!diagnostics) return;\n\n  let html = `\n    <div class=\"diagnostics-panel error\">\n      <h3>❌ Error Diagnostics</h3>\n      <div class=\"error-summary\">\n        <h4>Error Summary</h4>\n        <div class=\"error-details\">\n          <div class=\"error-item\">\n            <strong>Error Message:</strong> ${result.message}\n          </div>\n          <div class=\"error-item\">\n            <strong>Error Type:</strong> ${result.error || 'Unknown'}\n          </div>\n        </div>\n      </div>\n  `;\n\n  // Show error analysis if available\n  if (result.diagnostics && result.diagnostics.error_analysis) {\n    const errorAnalysis = result.diagnostics.error_analysis;\n    html += `\n      <div class=\"diagnostic-section\">\n        <h4>Error Analysis</h4>\n        <div class=\"error-analysis\">\n          <div class=\"analysis-item\">\n            <strong>Error Type:</strong> ${errorAnalysis.errorType}\n          </div>\n          <div class=\"analysis-item\">\n            <strong>Likely Cause:</strong> ${errorAnalysis.likelyCause}\n          </div>\n          <div class=\"analysis-flags\">\n            <div class=\"flag ${errorAnalysis.isCorsRelated ? 'active' : ''}\">CORS Related</div>\n            <div class=\"flag ${errorAnalysis.isNetworkRelated ? 'active' : ''}\">Network Related</div>\n            <div class=\"flag ${errorAnalysis.isSslRelated ? 'active' : ''}\">SSL Related</div>\n            <div class=\"flag ${errorAnalysis.isAppDomainRelated ? 'active' : ''}\">AppDomain Related</div>\n          </div>\n        </div>\n    `;\n\n    if (errorAnalysis.recommendations.length > 0) {\n      html += `\n        <div class=\"recommendations\">\n          <h5>Recommendations:</h5>\n          <ul>\n            ${errorAnalysis.recommendations.map(rec => `<li>💡 ${rec}</li>`).join('')}\n          </ul>\n        </div>\n      `;\n    }\n    \n    html += `</div>`;\n  }\n\n  // Environment information\n  html += `\n    <div class=\"diagnostic-section\">\n      <h4>Environment Information</h4>\n      <div class=\"diagnostic-grid\">\n        <div class=\"diagnostic-item\">\n          <strong>App Domain:</strong> ${diagnostics.environment.appDomain}\n        </div>\n        <div class=\"diagnostic-item\">\n          <strong>Origin:</strong> ${diagnostics.environment.origin}\n        </div>\n        <div class=\"diagnostic-item\">\n          <strong>Network Type:</strong> ${diagnostics.environment.networkInfo.connectionType}\n        </div>\n        <div class=\"diagnostic-item\">\n          <strong>Online Status:</strong> ${diagnostics.environment.networkInfo.online ? '✅ Online' : '❌ Offline'}\n        </div>\n      </div>\n    </div>\n  `;\n\n  html += `\n    <div class=\"diagnostic-actions\">\n      <button onclick=\"clearDiagnostics()\" class=\"btn-secondary\">Clear Logs</button>\n      <button onclick=\"exportDiagnostics()\" class=\"btn-secondary\">Export Diagnostics</button>\n    </div>\n  </div>\n  `;\n\n  diagnosticsDiv.innerHTML = html;\n}\n\n// Clear diagnostics\nfunction clearDiagnostics(): void {\n  if (seeqClient) {\n    seeqClient.clearDiagnostics();\n  }\n  const diagnosticsDiv = document.getElementById(\"diagnostics\");\n  if (diagnosticsDiv) {\n    diagnosticsDiv.innerHTML = '<div class=\"diagnostics-panel\"><p>Diagnostics cleared. Run a connection test to generate new diagnostics.</p></div>';\n  }\n}\n\n// Export diagnostics\nfunction exportDiagnostics(): void {\n  if (!seeqClient) return;\n  \n  const diagnostics = seeqClient.getDiagnostics();\n  const exportData = {\n    timestamp: new Date().toISOString(),\n    diagnostics,\n    userAgent: navigator.userAgent,\n    url: window.location.href\n  };\n  \n  const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `sqexcel-diagnostics-${new Date().toISOString().split('T')[0]}.json`;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n}\n\n// Make functions globally available\n(window as any).clearDiagnostics = clearDiagnostics;\n(window as any).exportDiagnostics = exportDiagnostics;\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>SqExcel Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.tailwindcss.com\\\"><\" + \"/script> </head> <body class=\\\"bg-gray-50 text-gray-800\\\"> <header class=\\\"flex items-center gap-3 p-4 border-b border-gray-200 bg-white\\\"> <img width=\\\"48\\\" height=\\\"48\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" alt=\\\"SqExcel\\\" title=\\\"SqExcel\\\" class=\\\"rounded\\\"/> <div> <h1 class=\\\"text-xl font-semibold leading-tight\\\">SqExcel</h1> <p class=\\\"text-sm text-gray-500\\\">Excel add-in for fast, reliable Seeq data access</p> </div> </header> <section id=\\\"sideload-msg\\\" class=\\\"p-4\\\"> <h2 class=\\\"text-base\\\">Please <a class=\\\"text-indigo-600 underline\\\" target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"app-body\\\" style=\\\"display:none\\\" class=\\\"p-4 flex flex-col gap-4 w-full\\\"> <div class=\\\"bg-white rounded-lg border border-gray-200 p-4 shadow-sm w-full\\\"> <h3 class=\\\"text-lg font-medium mb-3\\\">Seeq Authentication</h3> <div class=\\\"grid grid-cols-1 gap-3\\\"> <label class=\\\"block\\\"> <span class=\\\"text-sm text-gray-700\\\">Seeq Server URL</span> <input type=\\\"url\\\" id=\\\"seeq-url\\\" placeholder=\\\"https://your-server.seeq.site\\\" class=\\\"mt-1 w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-sm\\\"/> </label> <label class=\\\"block\\\"> <span class=\\\"text-sm text-gray-700\\\">Access Key</span> <input type=\\\"text\\\" id=\\\"seeq-access-key\\\" placeholder=\\\"Your Seeq access key\\\" class=\\\"mt-1 w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-sm\\\"/> </label> <label class=\\\"block\\\"> <span class=\\\"text-sm text-gray-700\\\">Password</span> <input type=\\\"password\\\" id=\\\"seeq-password\\\" placeholder=\\\"Your Seeq password\\\" class=\\\"mt-1 w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-sm\\\"/> </label> <div class=\\\"flex items-center gap-2 pt-1 flex-wrap\\\"> <button id=\\\"authenticate\\\" class=\\\"px-3 py-1.5 text-sm text-white rounded-md hover:opacity-95\\\" style=\\\"background-color:#55924c\\\">Authenticate</button> <button id=\\\"logout\\\" class=\\\"px-3 py-1.5 text-sm bg-gray-100 text-gray-800 rounded-md hover:bg-gray-200\\\" style=\\\"display:none\\\">Logout</button> </div> </div> <div id=\\\"auth-status\\\" class=\\\"mt-2 text-sm\\\"></div> </div> <div id=\\\"diagnostics\\\" class=\\\"bg-white rounded-lg border border-gray-200 p-4 shadow-sm w-full\\\"> <h3 class=\\\"text-lg font-medium mb-2\\\">Getting Started</h3> <ol class=\\\"list-decimal list-inside text-sm space-y-2 mb-3\\\"> <li> <span class=\\\"font-medium\\\">Create Access Key:</span> <div>Seeq → Profile → Access Keys → Create.</div> </li> <li> <span class=\\\"font-medium\\\">Authenticate:</span> <div>Enter URL, Key, Password → Authenticate.</div> </li> <li> <span class=\\\"font-medium\\\">Use in Excel:</span> <div>Paste formulas below.</div> </li> </ol> <h4 class=\\\"text-sm font-semibold mb-2\\\">Quick Functions</h4> <ul class=\\\"text-sm space-y-2\\\"> <li> <code class=\\\"bg-gray-100 rounded px-1.5 py-0.5 block w-fit\\\">=SqExcel.SEARCH_SENSORS(sensorNames)</code> <span class=\\\"text-gray-600\\\">verify sensors; see unit/description</span> </li> <li> <code class=\\\"bg-gray-100 rounded px-1.5 py-0.5 block w-fit\\\">=SqExcel.PULL(sensorNames, startTime, endTime, \\\"points\\\", 1000)</code> <span class=\\\"text-gray-600\\\">pull N points over time range</span> </li> <li> <code class=\\\"bg-gray-100 rounded px-1.5 py-0.5 block w-fit\\\">=SqExcel.PULL(sensorNames, startTime, endTime, \\\"grid\\\", \\\"15min\\\")</code> <span class=\\\"text-gray-600\\\">pull using N‑minute intervals</span> </li> <li> <code class=\\\"bg-gray-100 rounded px-1.5 py-0.5 block w-fit\\\">=SqExcel.CURRENT(sensorName)</code> <span class=\\\"text-gray-600\\\">get current value of a sensor</span> </li> <li> <code class=\\\"bg-gray-100 rounded px-1.5 py-0.5 block w-fit\\\">=SqExcel.AVERAGE(sensorName, startTime, endTime)</code> <span class=\\\"text-gray-600\\\">get average value over time range</span> </li> </ul> <p class=\\\"text-xs text-gray-500 mt-3\\\">Tip: Timestamp column returns Excel serials. Format as Date to see readable times.</p> <p class=\\\"text-sm text-gray-700 mt-3\\\">Need Help? → <a href=\\\"mailto:austin@radialflow.net\\\" class=\\\"text-indigo-600 underline\\\">austin@radialflow.net</a></p> </div> <div class=\\\"bg-white rounded-lg border border-gray-200 p-4 shadow-sm w-full\\\" style=\\\"display:none\\\"> <h3 class=\\\"text-lg font-medium mb-3\\\">Sensor Search</h3> <div class=\\\"grid grid-cols-1 gap-3\\\"> <label class=\\\"block\\\"> <span class=\\\"text-sm text-gray-600\\\">Sensor Names (comma-separated)</span> <input type=\\\"text\\\" id=\\\"sensor-names\\\" placeholder=\\\"Sensor1, Sensor2, Sensor3\\\" class=\\\"mt-1 w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-sm\\\"/> </label> <label class=\\\"block\\\"> <span class=\\\"text-sm text-gray-600\\\">Start Time</span> <input type=\\\"datetime-local\\\" id=\\\"start-time\\\" class=\\\"mt-1 w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-sm\\\"/> </label> <label class=\\\"block\\\"> <span class=\\\"text-sm text-gray-600\\\">End Time</span> <input type=\\\"datetime-local\\\" id=\\\"end-time\\\" class=\\\"mt-1 w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-sm\\\"/> </label> <label class=\\\"block\\\"> <span class=\\\"text-sm text-gray-600\\\">Data Mode</span> <select id=\\\"data-mode\\\" class=\\\"mt-1 w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-sm\\\"> <option value=\\\"points\\\">Points (number of data points)</option> <option value=\\\"grid\\\">Grid (time interval)</option> </select> </label> <label class=\\\"block\\\"> <span class=\\\"text-sm text-gray-600\\\" id=\\\"mode-value-label\\\">Number of Points</span> <input type=\\\"number\\\" id=\\\"mode-value\\\" placeholder=\\\"1000\\\" value=\\\"1000\\\" class=\\\"mt-1 w-full rounded-md border border-gray-300 bg-white px-3 py-2 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-sm\\\"/> </label> <div class=\\\"flex items-center gap-2 pt-1\\\"> <button id=\\\"search-sensors\\\" class=\\\"px-3 py-1.5 text-sm text-white rounded-md hover:opacity-95\\\" style=\\\"background-color:#55924c\\\">Search Sensors</button> <button id=\\\"pull-data\\\" class=\\\"px-3 py-1.5 text-sm text-white rounded-md hover:opacity-95\\\" style=\\\"background-color:#55924c\\\">Pull Data</button> </div> <div id=\\\"search-results\\\" class=\\\"text-sm\\\"></div> <div id=\\\"data-results\\\" class=\\\"text-sm\\\"></div> </div> </div> <p class=\\\"text-xs text-gray-500\\\"><label id=\\\"item-subject\\\"></label></p> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_defineProperty","_typeof","toPrimitive","String","_toPrimitive","SeeqAPIClient","seeqServerUrl","_classCallCheck","proxyUrl","logDiagnostic","concat","Intl","DateTimeFormat","resolvedOptions","timeZone","_e","data","Array","isArray","category","message","logEntry","timestamp","Date","toISOString","userAgent","navigator","origin","appDomain","detectAppDomain","networkInfo","getNetworkInfo","diagnosticLog","push","Office","context","host","protocol","error","connection","mozConnection","webkitConnection","online","onLine","connectionType","effectiveType","downlink","rtt","toString","clientInfo","isAuthenticated","authToken","diagnosticLogCount","environment","recentLogs","slice","_testConnection","_callee","startTime","url","response","requestTime","allHeaders","errorData","_requestTime","errorType","_t","_context","now","fetch","method","headers","body","JSON","stringify","seeq_url","forEach","status","statusText","ok","json","success","status_code","diagnostics","response_headers","request_timing","user_agent","app_domain","network_type","cors_status","catch","errorName","name","errorStack","stack","includes","_authenticate","_callee2","accessKey","password","authProvider","ignoreSslErrors","errorMessage","_t3","_args2","_context2","credentials","username","auth_provider","ignore_ssl_errors","token","user","server_url","storeCredentialsForExcel","_x","_x2","_storeCredentialsForExcel","_callee3","_context3","_searchSensors","_callee4","sensorNames","_this$credentials","_this$credentials2","_this$credentials3","_t4","_context4","search_results","sensor_count","sensor_names","sensorCount","searchResults","_x3","_searchAndPullSensors","_callee5","endTime","mode","modeValue","_this$credentials4","_this$credentials5","_this$credentials6","grid","numPoints","startDate","endDate","timeRangeMs","timeRangeSeconds","secondsPerPoint","_data$data","adjustedData","_t5","_args5","_context5","parseInt","getTime","Math","floor","calculatedGrid","start_time","end_time","user_timezone","getUserTimezone","dataLength","dataColumns","data_columns","adjustTimestampsForTimezone","data_index","time_range","start","end","_x4","_x5","_x6","_this$credentials7","_logout","_callee6","_this$credentials8","_t7","_context6","ADDIN_VERSION","seeqClient","loadVersionInfo","_loadVersionInfo","versionData","version","initializeSeeqAuth","authenticateBtn","getElementById","logoutBtn","searchSensorsBtn","pullDataBtn","onclick","authenticateWithSeeq","logoutFromSeeq","searchSensors","pullSensorData","dataModeSelect","onchange","handleModeChange","saved","localStorage","getItem","parse","updateAuthUI","showAuthStatus","removeItem","loadSavedCredentials","modeValueInput","modeValueLabel","textContent","placeholder","type","_authenticateWithSeeq","_document$getElementB","_document$getElementB2","_document$getElementB3","result","_t2","authenticate","saveCredentials","updateExcelCache","_document$getElementB4","sensorNamesInput","split","map","trim","filter","displaySearchResults","_pullSensorData","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","_document$getElementB9","startTimeInput","endTimeInput","dataMode","searchAndPullSensors","displayDataResults","logout","statusElement","className","authBtn","urlInput","accessKeyInput","passwordInput","style","display","disabled","ignoreSsl","setItem","operationType","jsonData","cacheUpdate","Excel","run","_ref2","workbook","worksheets","getActiveWorksheet","getRange","values","sync","results","resultsDiv","html","Original_Name","Name","ID","Type","Status","innerHTML","dataToShow","firstRow","isDebugRow","Timestamp","keys","some","startsWith","col","join","row","index","onReady","sideloadMsg","appBody","clearDiagnostics","diagnosticsDiv","exportDiagnostics","getDiagnostics","exportData","blob","Blob","URL","createObjectURL","createElement","download","appendChild","click","removeChild","revokeObjectURL"],"sourceRoot":""}