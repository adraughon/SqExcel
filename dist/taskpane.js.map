{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/webpack/runtime/global","webpack://excel-custom-functions/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions/webpack/runtime/publicPath","webpack://excel-custom-functions/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions/./src/taskpane/seeq-api-client.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.ts","webpack://excel-custom-functions/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Seeq API Client for Proxy Server (SqExcelWeb)\n * This client communicates with the FastAPI proxy server to avoid CORS issues\n */\n\nexport interface SeeqAuthResult {\n  success: boolean;\n  message: string;\n  user?: string;\n  server_url?: string;\n  error?: string;\n  token?: string;\n}\n\nexport interface SeeqConnectionResult {\n  success: boolean;\n  message: string;\n  status_code?: number;\n  error?: string;\n  diagnostics?: {\n    cors_headers?: any;\n    response_headers?: any;\n    request_timing?: number;\n    user_agent?: string;\n    origin?: string;\n    app_domain?: string;\n    network_type?: string;\n    ssl_info?: any;\n    cors_analysis?: any;\n    error_analysis?: any;\n    cors_status?: string;\n  };\n}\n\nexport interface SeeqSensor {\n  ID: string;\n  Name: string;\n  Type: string;\n  Original_Name?: string;\n  Status?: string;\n}\n\nexport interface SeeqSearchResult {\n  success: boolean;\n  message: string;\n  search_results: SeeqSensor[];\n  sensor_count: number;\n  error?: string;\n}\n\nexport interface SeeqDataResult {\n  success: boolean;\n  message: string;\n  search_results: SeeqSensor[];\n  data: any[];\n  data_columns: string[];\n  data_index: string[];\n  sensor_count: number;\n  time_range: {\n    start: string;\n    end: string;\n    grid: string;\n  };\n  error?: string;\n}\n\nexport class SeeqAPIClient {\n  private proxyUrl: string;\n  private seeqServerUrl: string;\n  private authToken: string | null = null;\n  private credentials: any = null;\n  private diagnosticLog: any[] = [];\n\n  constructor(seeqServerUrl: string) {\n    this.seeqServerUrl = seeqServerUrl.replace(/\\/$/, ''); // Remove trailing slash\n    this.proxyUrl = 'https://sqexcel.up.railway.app';\n    this.logDiagnostic('CLIENT_INIT', `SeeqAPIClient initialized with proxy: ${this.proxyUrl}, Seeq server: ${this.seeqServerUrl}`);\n  }\n\n  /**\n   * Log diagnostic information for debugging\n   */\n  private logDiagnostic(category: string, message: string, data?: any): void {\n    const logEntry = {\n      timestamp: new Date().toISOString(),\n      category,\n      message,\n      data,\n      userAgent: navigator.userAgent,\n      origin: window.location.origin,\n      appDomain: this.detectAppDomain(),\n      networkInfo: this.getNetworkInfo()\n    };\n    \n    this.diagnosticLog.push(logEntry);\n    console.log(`[${category}] ${message}`, data || '');\n  }\n\n  /**\n   * Detect the current AppDomain context\n   */\n  private detectAppDomain(): string {\n    try {\n      if (typeof Office !== 'undefined' && Office.context) {\n        return `Office.js - ${Office.context.host || 'Unknown Host'}`;\n      }\n      if (window.location.protocol === 'https:') {\n        return 'HTTPS Web Context';\n      }\n      if (window.location.protocol === 'http:') {\n        return 'HTTP Web Context';\n      }\n      if (window.location.protocol === 'file:') {\n        return 'File Protocol Context';\n      }\n      return `Unknown Context - ${window.location.protocol}`;\n    } catch (error) {\n      return `Error detecting context: ${error}`;\n    }\n  }\n\n  /**\n   * Get network information\n   */\n  private getNetworkInfo(): any {\n    try {\n      const connection = (navigator as any).connection || (navigator as any).mozConnection || (navigator as any).webkitConnection;\n      return {\n        online: navigator.onLine,\n        connectionType: connection?.effectiveType || 'unknown',\n        downlink: connection?.downlink || 'unknown',\n        rtt: connection?.rtt || 'unknown'\n      };\n    } catch (error) {\n      return { online: navigator.onLine, error: error.toString() };\n    }\n  }\n\n  /**\n   * Get comprehensive diagnostic information\n   */\n  getDiagnostics(): any {\n    return {\n      clientInfo: {\n        proxyUrl: this.proxyUrl,\n        seeqServerUrl: this.seeqServerUrl,\n        isAuthenticated: !!this.authToken,\n        diagnosticLogCount: this.diagnosticLog.length\n      },\n      environment: {\n        userAgent: navigator.userAgent,\n        origin: window.location.origin,\n        appDomain: this.detectAppDomain(),\n        networkInfo: this.getNetworkInfo(),\n        timestamp: new Date().toISOString()\n      },\n      recentLogs: this.diagnosticLog.slice(-20) // Last 20 log entries\n    };\n  }\n\n  /**\n   * Clear diagnostic logs\n   */\n  clearDiagnostics(): void {\n    this.diagnosticLog = [];\n    this.logDiagnostic('DIAGNOSTICS_CLEARED', 'Diagnostic logs cleared');\n  }\n\n  /**\n   * Test connection to the proxy server\n   */\n  async testConnection(): Promise<SeeqConnectionResult> {\n    const startTime = Date.now();\n    const url = `${this.proxyUrl}/api/seeq/test-connection`;\n    \n    this.logDiagnostic('PROXY_CONNECTION_TEST_START', `Testing connection to proxy server: ${this.proxyUrl}`, {\n      url,\n      seeqServerUrl: this.seeqServerUrl,\n      appDomain: this.detectAppDomain(),\n      networkInfo: this.getNetworkInfo()\n    });\n    \n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seeq_url: this.seeqServerUrl\n        })\n      });\n\n      const requestTime = Date.now() - startTime;\n      \n      // Log all response headers\n      const allHeaders: any = {};\n      response.headers.forEach((value, key) => {\n        allHeaders[key] = value;\n      });\n\n      this.logDiagnostic('PROXY_CONNECTION_RESPONSE', `Proxy connection test response received`, {\n        status: response.status,\n        statusText: response.statusText,\n        requestTime,\n        allHeaders,\n        url: response.url\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.logDiagnostic('PROXY_CONNECTION_SUCCESS', 'Proxy connection test successful', data);\n        \n        return {\n          success: true,\n          message: data.message || \"Proxy server is reachable and can connect to Seeq\",\n          status_code: response.status,\n          diagnostics: {\n            response_headers: allHeaders,\n            request_timing: requestTime,\n            user_agent: navigator.userAgent,\n            origin: window.location.origin,\n            app_domain: this.detectAppDomain(),\n            network_type: this.getNetworkInfo().connectionType,\n            cors_status: 'OK'\n          }\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        this.logDiagnostic('PROXY_CONNECTION_FAILED', `Proxy connection test failed with status: ${response.status}`, {\n          status: response.status,\n          statusText: response.statusText,\n          headers: allHeaders,\n          errorData\n        });\n        \n        return {\n          success: false,\n          message: errorData.message || `Proxy server responded with status code: ${response.status}`,\n          status_code: response.status,\n          error: errorData.error || `HTTP ${response.status}`,\n          diagnostics: {\n            response_headers: allHeaders,\n            request_timing: requestTime,\n            user_agent: navigator.userAgent,\n            origin: window.location.origin,\n            app_domain: this.detectAppDomain(),\n            network_type: this.getNetworkInfo().connectionType,\n            cors_status: 'OK'\n          }\n        };\n      }\n    } catch (error: any) {\n      const requestTime = Date.now() - startTime;\n      \n      this.logDiagnostic('PROXY_CONNECTION_ERROR', `Proxy connection test error`, {\n        error: error.message,\n        errorName: error.name,\n        errorStack: error.stack,\n        requestTime,\n        url\n      });\n      \n      let message = \"Proxy connection test failed\";\n      let errorType = \"Unknown\";\n      \n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        message = \"Cannot connect to proxy server - connection refused. This may be due to network issues.\";\n        errorType = \"ConnectionError\";\n      } else if (error.name === 'AbortError') {\n        message = \"Connection timeout - the proxy server took too long to respond.\";\n        errorType = \"Timeout\";\n      } else if (error.message.includes('Failed to fetch')) {\n        message = \"Connection failed - unable to reach the proxy server. This may be due to network problems.\";\n        errorType = \"FetchError\";\n      } else {\n        message = `Proxy connection test failed: ${error.message}`;\n        errorType = error.message;\n      }\n      \n      return {\n        success: false,\n        message,\n        error: errorType,\n        diagnostics: {\n          request_timing: requestTime,\n          user_agent: navigator.userAgent,\n          origin: window.location.origin,\n          app_domain: this.detectAppDomain(),\n          network_type: this.getNetworkInfo().connectionType,\n          cors_status: 'OK'\n        }\n      };\n    }\n  }\n\n  /**\n   * Authenticate with Seeq server through proxy\n   */\n  async authenticate(accessKey: string, password: string, authProvider: string = 'Seeq', ignoreSslErrors: boolean = false): Promise<SeeqAuthResult> {\n    try {\n      // Store credentials for later use\n      this.credentials = {\n        accessKey,\n        password,\n        authProvider,\n        ignoreSslErrors,\n        seeq_url: this.seeqServerUrl\n      };\n\n      this.logDiagnostic('PROXY_AUTH_START', `Attempting to authenticate through proxy: ${this.proxyUrl}`, {\n        seeqServerUrl: this.seeqServerUrl,\n        accessKey,\n        authProvider\n      });\n\n      const response = await fetch(`${this.proxyUrl}/api/seeq/auth`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seeq_url: this.seeqServerUrl,\n          username: accessKey,\n          password: password,\n          auth_provider: authProvider,\n          ignore_ssl_errors: ignoreSslErrors\n        })\n      });\n\n      this.logDiagnostic('PROXY_AUTH_RESPONSE', `Proxy authentication response received`, {\n        status: response.status,\n        statusText: response.statusText\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.authToken = data.token || 'authenticated';\n        \n        this.logDiagnostic('PROXY_AUTH_SUCCESS', 'Proxy authentication successful', {\n          user: data.user,\n          server_url: data.server_url\n        });\n        \n        return {\n          success: true,\n          message: data.message || `Successfully authenticated as ${accessKey}`,\n          user: data.user || accessKey,\n          server_url: data.server_url || this.seeqServerUrl,\n          token: this.authToken\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        this.logDiagnostic('PROXY_AUTH_FAILED', 'Proxy authentication failed', {\n          status: response.status,\n          errorData\n        });\n        \n        return {\n          success: false,\n          message: errorData.message || `Authentication failed with status ${response.status}`,\n          error: errorData.error || `HTTP ${response.status}`\n        };\n      }\n    } catch (error: any) {\n      this.logDiagnostic('PROXY_AUTH_ERROR', 'Proxy authentication error', {\n        error: error.message,\n        errorName: error.name\n      });\n      \n      let errorMessage = 'Authentication failed';\n      let errorType = 'Unknown';\n      \n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        errorMessage = 'Network error: Cannot connect to proxy server. Please check your internet connection.';\n        errorType = 'NetworkError';\n      } else if (error.name === 'AbortError') {\n        errorMessage = 'Request timeout: The authentication request took too long. Please try again.';\n        errorType = 'TimeoutError';\n      } else if (error.message.includes('Failed to fetch')) {\n        errorMessage = 'Connection failed: Unable to reach the proxy server. This may be due to network issues.';\n        errorType = 'ConnectionError';\n      } else {\n        errorMessage = `Authentication failed: ${error.message}`;\n        errorType = error.name || 'UnknownError';\n      }\n      \n      return {\n        success: false,\n        message: errorMessage,\n        error: errorType\n      };\n    }\n  }\n\n  /**\n   * Search for sensors in Seeq through proxy\n   */\n  async searchSensors(sensorNames: string[]): Promise<SeeqSearchResult> {\n    if (!this.authToken && !this.credentials) {\n      return {\n        success: false,\n        message: \"Not authenticated. Please authenticate first.\",\n        error: \"Authentication required\",\n        search_results: [],\n        sensor_count: 0\n      };\n    }\n\n    try {\n      this.logDiagnostic('PROXY_SEARCH_START', `Searching for sensors through proxy`, {\n        sensorNames,\n        seeqServerUrl: this.seeqServerUrl\n      });\n\n      const response = await fetch(`${this.proxyUrl}/api/seeq/search`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seeq_url: this.seeqServerUrl,\n          sensor_names: sensorNames,\n          username: this.credentials?.accessKey,\n          password: this.credentials?.password,\n          auth_provider: this.credentials?.authProvider || 'Seeq'\n        })\n      });\n\n      this.logDiagnostic('PROXY_SEARCH_RESPONSE', `Proxy search response received`, {\n        status: response.status,\n        statusText: response.statusText\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.logDiagnostic('PROXY_SEARCH_SUCCESS', 'Proxy search successful', {\n          sensorCount: data.sensor_count,\n          searchResults: data.search_results\n        });\n\n        return {\n          success: true,\n          message: data.message || `Found ${data.sensor_count} sensors`,\n          search_results: data.search_results || [],\n          sensor_count: data.sensor_count || 0\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        this.logDiagnostic('PROXY_SEARCH_FAILED', 'Proxy search failed', {\n          status: response.status,\n          errorData\n        });\n\n        return {\n          success: false,\n          message: errorData.message || `Search failed with status ${response.status}`,\n          error: errorData.error || `HTTP ${response.status}`,\n          search_results: [],\n          sensor_count: 0\n        };\n      }\n    } catch (error: any) {\n      this.logDiagnostic('PROXY_SEARCH_ERROR', 'Proxy search error', {\n        error: error.message,\n        errorName: error.name\n      });\n\n      return {\n        success: false,\n        message: `Sensor search failed: ${error.message}`,\n        error: error.message,\n        search_results: [],\n        sensor_count: 0\n      };\n    }\n  }\n\n  /**\n   * Search for sensors and pull their data through proxy\n   */\n  async searchAndPullSensors(sensorNames: string[], startTime: string, endTime: string, grid: string = '15min'): Promise<SeeqDataResult> {\n    try {\n      this.logDiagnostic('PROXY_SEARCH_PULL_START', `Searching and pulling sensor data through proxy`, {\n        sensorNames,\n        startTime,\n        endTime,\n        grid,\n        seeqServerUrl: this.seeqServerUrl\n      });\n\n      const response = await fetch(`${this.proxyUrl}/api/seeq/data`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          seeq_url: this.seeqServerUrl,\n          sensor_names: sensorNames,\n          start_time: startTime,\n          end_time: endTime,\n          grid: grid,\n          username: this.credentials?.accessKey,\n          password: this.credentials?.password,\n          auth_provider: this.credentials?.authProvider || 'Seeq'\n        })\n      });\n\n      this.logDiagnostic('PROXY_SEARCH_PULL_RESPONSE', `Proxy search and pull response received`, {\n        status: response.status,\n        statusText: response.statusText\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.logDiagnostic('PROXY_SEARCH_PULL_SUCCESS', 'Proxy search and pull successful', {\n          sensorCount: data.sensor_count,\n          dataLength: data.data?.length || 0,\n          dataColumns: data.data_columns\n        });\n\n        return {\n          success: true,\n          message: data.message || `Successfully retrieved data for ${data.sensor_count} sensors`,\n          search_results: data.search_results || [],\n          data: data.data || [],\n          data_columns: data.data_columns || [],\n          data_index: data.data_index || [],\n          sensor_count: data.sensor_count || 0,\n          time_range: {\n            start: startTime,\n            end: endTime,\n            grid: grid\n          }\n        };\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        this.logDiagnostic('PROXY_SEARCH_PULL_FAILED', 'Proxy search and pull failed', {\n          status: response.status,\n          errorData\n        });\n\n        return {\n          success: false,\n          message: errorData.message || `Search and pull failed with status ${response.status}`,\n          error: errorData.error || `HTTP ${response.status}`,\n          search_results: [],\n          data: [],\n          data_columns: [],\n          data_index: [],\n          sensor_count: 0,\n          time_range: { start: startTime, end: endTime, grid }\n        };\n      }\n    } catch (error: any) {\n      this.logDiagnostic('PROXY_SEARCH_PULL_ERROR', 'Proxy search and pull error', {\n        error: error.message,\n        errorName: error.name\n      });\n\n      return {\n        success: false,\n        message: `Search and pull operation failed: ${error.message}`,\n        error: error.message,\n        search_results: [],\n        data: [],\n        data_columns: [],\n        data_index: [],\n        sensor_count: 0,\n        time_range: { start: startTime, end: endTime, grid }\n      };\n    }\n  }\n\n  /**\n   * Get current authentication status\n   */\n  getAuthStatus(): { isAuthenticated: boolean; user?: string } {\n    return {\n      isAuthenticated: !!this.authToken,\n      user: this.credentials?.accessKey\n    };\n  }\n\n  /**\n   * Clear authentication\n   */\n  async logout(): Promise<void> {\n    try {\n      if (this.authToken) {\n        this.logDiagnostic('PROXY_LOGOUT_START', 'Logging out through proxy');\n        \n        const response = await fetch(`${this.proxyUrl}/api/seeq/auth`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            seeq_url: this.seeqServerUrl,\n            username: this.credentials?.accessKey\n          })\n        });\n\n        this.logDiagnostic('PROXY_LOGOUT_RESPONSE', `Proxy logout response received`, {\n          status: response.status,\n          statusText: response.statusText\n        });\n      }\n    } catch (error: any) {\n      this.logDiagnostic('PROXY_LOGOUT_ERROR', 'Proxy logout error', {\n        error: error.message\n      });\n    } finally {\n      this.authToken = null;\n      this.credentials = null;\n    }\n  }\n\n  /**\n   * Get stored credentials for persistence\n   */\n  getCredentials(): any {\n    return this.credentials;\n  }\n\n  /**\n   * Set credentials from storage\n   */\n  setCredentials(credentials: any): void {\n    this.credentials = credentials;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n// Import CSS for styling\nimport './taskpane.css';\n\n// Import the new Seeq API client\nimport { SeeqAPIClient } from './seeq-api-client';\n\n// Version will be dynamically loaded from version.json\nlet ADDIN_VERSION = \"Loading...\";\n\n// Global API client instance\nlet seeqClient: SeeqAPIClient | null = null;\n\n// Load version information from version.json\nasync function loadVersionInfo(): Promise<void> {\n  try {\n    console.log('Attempting to load version info...');\n    \n    // Try relative path first, then fallback to full URL\n    let response = await fetch('./version.json');\n    console.log('Relative path response status:', response.status);\n    \n    if (!response.ok) {\n      console.log('Relative path failed, trying full URL...');\n      // Fallback to full URL if relative path fails\n      response = await fetch('https://adraughon.github.io/SqExcel/version.json');\n      console.log('Full URL response status:', response.status);\n    }\n    \n    if (response.ok) {\n      const versionData = await response.json();\n      console.log('Version data loaded:', versionData);\n      ADDIN_VERSION = `${versionData.version} - ${versionData.description}`;\n    } else {\n      console.error('Failed to load version.json, status:', response.status);\n      ADDIN_VERSION = \"Version info unavailable\";\n    }\n  } catch (error) {\n    console.error('Failed to load version info:', error);\n    ADDIN_VERSION = \"Version info unavailable\";\n  }\n}\n\n// The initialize function must be run each time a new page is loaded\nOffice.onReady(async () => {\n  const sideloadMsg = document.getElementById(\"sideload-msg\");\n  const appBody = document.getElementById(\"app-body\");\n  if (sideloadMsg) sideloadMsg.style.display = \"none\";\n  if (appBody) appBody.style.display = \"flex\";\n  \n  // Load version information first\n  await loadVersionInfo();\n  \n  // Initialize Seeq authentication\n  initializeSeeqAuth();\n});\n\n// Seeq Authentication Interface\ninterface SeeqAuthResult {\n  success: boolean;\n  message: string;\n  user?: string;\n  server_url?: string;\n  error?: string;\n}\n\ninterface SeeqConnectionResult {\n  success: boolean;\n  message: string;\n  status_code?: number;\n  error?: string;\n}\n\n// Seeq Authentication Functions\nfunction initializeSeeqAuth(): void {\n  const testConnectionBtn = document.getElementById(\"test-connection\") as HTMLButtonElement;\n  const authenticateBtn = document.getElementById(\"authenticate\") as HTMLButtonElement;\n  const logoutBtn = document.getElementById(\"logout\") as HTMLButtonElement;\n  const searchSensorsBtn = document.getElementById(\"search-sensors\") as HTMLButtonElement;\n  const pullDataBtn = document.getElementById(\"pull-data\") as HTMLButtonElement;\n\n  if (testConnectionBtn) {\n    testConnectionBtn.onclick = testSeeqConnection;\n  }\n  \n  if (authenticateBtn) {\n    authenticateBtn.onclick = authenticateWithSeeq;\n  }\n  \n  if (logoutBtn) {\n    logoutBtn.onclick = logoutFromSeeq;\n  }\n\n  if (searchSensorsBtn) {\n    searchSensorsBtn.onclick = searchSensors;\n  }\n\n  if (pullDataBtn) {\n    pullDataBtn.onclick = pullSensorData;\n  }\n\n  // Load saved credentials if available\n  loadSavedCredentials();\n  \n  // Display version number to prove we're using new code\n  console.log(`SqExcel Add-in Version: ${ADDIN_VERSION}`);\n  showAuthStatus(`Add-in Version: ${ADDIN_VERSION}`, \"info\");\n}\n\nasync function testSeeqConnection(): Promise<void> {\n  const url = (document.getElementById(\"seeq-url\") as HTMLInputElement)?.value;\n  \n  if (!url) {\n    showAuthStatus(\"Please enter a Seeq server URL\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Testing connection...\", \"loading\");\n  \n  try {\n    // Create new API client and test connection\n    seeqClient = new SeeqAPIClient(url);\n    \n    // Test basic connection first\n    const result = await seeqClient.testConnection();\n    \n    if (result.success) {\n      showAuthStatus(result.message, \"success\");\n      \n      // Test authentication endpoint specifically\n      showAuthStatus(\"Testing authentication endpoint...\", \"loading\");\n      const authEndpointResult = await seeqClient.testAuthEndpoint();\n      \n      if (authEndpointResult.success) {\n        showAuthStatus(`${result.message} - ${authEndpointResult.message}`, \"success\");\n      } else {\n        showAuthStatus(`${result.message} - Warning: ${authEndpointResult.message}`, \"warning\");\n      }\n      \n      // Display comprehensive diagnostics\n      displayDiagnostics(result, authEndpointResult);\n      \n      // Update Excel function cache\n      updateExcelCache(\"auth\", result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n      \n      // Display error diagnostics\n      displayErrorDiagnostics(result);\n    }\n  } catch (error) {\n    showAuthStatus(`Connection test failed: ${error}`, \"error\");\n    displayErrorDiagnostics({ success: false, message: error.toString(), error: error.toString() });\n  }\n}\n\nasync function authenticateWithSeeq(): Promise<void> {\n  const url = (document.getElementById(\"seeq-url\") as HTMLInputElement)?.value;\n  const accessKey = (document.getElementById(\"seeq-access-key\") as HTMLInputElement)?.value;\n  const password = (document.getElementById(\"seeq-password\") as HTMLInputElement)?.value;\n  const ignoreSsl = (document.getElementById(\"ignore-ssl\") as HTMLInputElement)?.checked;\n\n  if (!url || !accessKey || !password) {\n    showAuthStatus(\"Please fill in all required fields\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Authenticating...\", \"loading\");\n  \n  try {\n    // Use the API client to authenticate\n    if (!seeqClient) {\n      seeqClient = new SeeqAPIClient(url);\n    }\n    \n    const result = await seeqClient.authenticate(accessKey, password, 'Seeq', ignoreSsl);\n    \n    if (result.success) {\n      showAuthStatus(\"Authentication successful\", \"success\");\n      saveCredentials(url, accessKey, password, ignoreSsl);\n      updateAuthUI(true);\n      // Update Excel function cache\n      updateExcelCache(\"auth\", result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Authentication failed: ${error}`, \"error\");\n  }\n}\n\nasync function searchSensors(): Promise<void> {\n  const sensorNamesInput = (document.getElementById(\"sensor-names\") as HTMLInputElement)?.value;\n  \n  if (!sensorNamesInput) {\n    showAuthStatus(\"Please enter sensor names to search for\", \"error\");\n    return;\n  }\n\n  const sensorNames = sensorNamesInput.split(',').map(name => name.trim()).filter(name => name);\n  \n  if (sensorNames.length === 0) {\n    showAuthStatus(\"Please enter valid sensor names\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Searching for sensors...\", \"loading\");\n  \n  try {\n    // Use the API client to search for sensors\n    if (!seeqClient) {\n      showAuthStatus(\"Please test connection first\", \"error\");\n      return;\n    }\n    \n    const result = await seeqClient.searchSensors(sensorNames);\n    \n    if (result.success) {\n      showAuthStatus(`Found ${result.sensor_count} sensors`, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"search\", result);\n      // Display results\n      displaySearchResults(result.search_results);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Sensor search failed: ${error}`, \"error\");\n  }\n}\n\nasync function pullSensorData(): Promise<void> {\n  const sensorNamesInput = (document.getElementById(\"sensor-names\") as HTMLInputElement)?.value;\n  const startTimeInput = (document.getElementById(\"start-time\") as HTMLInputElement)?.value;\n  const endTimeInput = (document.getElementById(\"end-time\") as HTMLInputElement)?.value;\n  const gridInput = (document.getElementById(\"grid-interval\") as HTMLInputElement)?.value;\n  \n  if (!sensorNamesInput || !startTimeInput || !endTimeInput) {\n    showAuthStatus(\"Please fill in all required fields\", \"error\");\n    return;\n  }\n\n  const sensorNames = sensorNamesInput.split(',').map(name => name.trim()).filter(name => name);\n  const grid = gridInput || \"15min\";\n  \n  if (sensorNames.length === 0) {\n    showAuthStatus(\"Please enter valid sensor names\", \"error\");\n    return;\n  }\n\n  showAuthStatus(\"Pulling sensor data...\", \"loading\");\n  \n  try {\n    // Use the API client to search and pull data\n    if (!seeqClient) {\n      showAuthStatus(\"Please test connection first\", \"error\");\n      return;\n    }\n    \n    const result = await seeqClient.searchAndPullSensors(sensorNames, startTimeInput, endTimeInput, grid);\n    \n    if (result.success) {\n      showAuthStatus(`Retrieved data for ${result.sensor_count} sensors`, \"success\");\n      // Update Excel function cache\n      updateExcelCache(\"data\", result);\n      // Display results\n      displayDataResults(result);\n    } else {\n      showAuthStatus(result.message, \"error\");\n    }\n  } catch (error) {\n    showAuthStatus(`Data retrieval failed: ${error}`, \"error\");\n  }\n}\n\nfunction logoutFromSeeq(): void {\n  // Clear saved credentials\n  localStorage.removeItem(\"seeq_credentials\");\n  \n  // Clear API client state\n  if (seeqClient) {\n    seeqClient.logout();\n  }\n  \n  // Update UI\n  updateAuthUI(false);\n  showAuthStatus(\"Logged out successfully\", \"info\");\n  \n  // Clear form fields\n  (document.getElementById(\"seeq-url\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"seeq-access-key\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"seeq-password\") as HTMLInputElement).value = \"\";\n  (document.getElementById(\"ignore-ssl\") as HTMLInputElement).checked = false;\n}\n\nfunction showAuthStatus(message: string, type: \"success\" | \"error\" | \"info\" | \"loading\" | \"warning\"): void {\n  const statusElement = document.getElementById(\"auth-status\");\n  if (statusElement) {\n    statusElement.textContent = message;\n    statusElement.className = `auth-status ${type}`;\n  }\n}\n\nfunction updateAuthUI(isAuthenticated: boolean): void {\n  const testBtn = document.getElementById(\"test-connection\") as HTMLButtonElement;\n  const authBtn = document.getElementById(\"authenticate\") as HTMLButtonElement;\n  const logoutBtn = document.getElementById(\"logout\") as HTMLButtonElement;\n  const urlInput = document.getElementById(\"seeq-url\") as HTMLInputElement;\n  const accessKeyInput = document.getElementById(\"seeq-access-key\") as HTMLInputElement;\n  const passwordInput = document.getElementById(\"seeq-password\") as HTMLInputElement;\n  const sslCheckbox = document.getElementById(\"ignore-ssl\") as HTMLInputElement;\n\n  if (isAuthenticated) {\n    testBtn.style.display = \"none\";\n    authBtn.style.display = \"none\";\n    logoutBtn.style.display = \"inline-block\";\n    \n    // Disable form inputs\n    urlInput.disabled = true;\n    accessKeyInput.disabled = true;\n    passwordInput.disabled = true;\n    sslCheckbox.disabled = true;\n  } else {\n    testBtn.style.display = \"inline-block\";\n    authBtn.style.display = \"inline-block\";\n    logoutBtn.style.display = \"none\";\n    \n    // Enable form inputs\n    urlInput.disabled = false;\n    accessKeyInput.disabled = false;\n    passwordInput.disabled = false;\n    sslCheckbox.disabled = false;\n  }\n}\n\nfunction saveCredentials(url: string, accessKey: string, password: string, ignoreSsl: boolean): void {\n  const credentials = {\n    url,\n    accessKey,\n    password,\n    ignoreSsl,\n    timestamp: new Date().toISOString()\n  };\n  \n  localStorage.setItem(\"seeq_credentials\", JSON.stringify(credentials));\n}\n\n// Load saved credentials from localStorage\nfunction loadSavedCredentials(): void {\n  const saved = localStorage.getItem(\"seeq_credentials\");\n  if (saved) {\n    try {\n      const credentials = JSON.parse(saved);\n      \n      // Populate form fields\n      (document.getElementById(\"seeq-url\") as HTMLInputElement).value = credentials.url || \"\";\n      (document.getElementById(\"seeq-access-key\") as HTMLInputElement).value = credentials.accessKey || \"\";\n      (document.getElementById(\"seeq-password\") as HTMLInputElement).value = credentials.password || \"\";\n      (document.getElementById(\"ignore-ssl\") as HTMLInputElement).checked = credentials.ignoreSsl || false;\n      \n      // Check if credentials are still valid (less than 24 hours old)\n      const timestamp = new Date(credentials.timestamp);\n      const now = new Date();\n      const hoursDiff = (now.getTime() - timestamp.getTime()) / (1000 * 60 * 60);\n      \n      if (hoursDiff < 24) {\n        // Credentials are still valid, update UI\n        updateAuthUI(true);\n        showAuthStatus(\"Using saved credentials\", \"info\");\n        \n        // Recreate API client with saved URL\n        if (credentials.url) {\n          seeqClient = new SeeqAPIClient(credentials.url);\n        }\n      } else {\n        // Credentials expired, remove them\n        localStorage.removeItem(\"seeq_credentials\");\n      }\n    } catch (error) {\n      console.error(\"Failed to load saved credentials:\", error);\n      localStorage.removeItem(\"seeq_credentials\");\n    }\n  }\n}\n\n// Update Excel function cache\nfunction updateExcelCache(operationType: string, data: any): void {\n  try {\n    const jsonData = JSON.stringify(data);\n    const cacheUpdate = `=SEEQ_UPDATE_CACHE(\"${operationType}\", '${jsonData}')`;\n    \n    Excel.run(async (context) => {\n      const worksheet = context.workbook.worksheets.getActiveWorksheet();\n      const range = worksheet.getRange(\"A1\");\n      range.values = [[cacheUpdate]];\n      await context.sync();\n    }).catch(error => {\n      console.log(\"Could not update Excel cache automatically:\", error);\n      console.log(\"Manual cache update required:\", cacheUpdate);\n    });\n  } catch (error) {\n    console.error(\"Failed to update Excel cache:\", error);\n  }\n}\n\n// Display search results in the UI\nfunction displaySearchResults(results: any[]): void {\n  const resultsDiv = document.getElementById(\"search-results\");\n  if (resultsDiv && results.length > 0) {\n    let html = `\n      <h3>Search Results (${results.length} sensors)</h3>\n      <div class=\"results-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Original Name</th>\n              <th>Seeq Name</th>\n              <th>ID</th>\n              <th>Type</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n    `;\n    \n    results.forEach(result => {\n      html += `\n        <tr>\n          <td>${result.Original_Name || result.Name || \"N/A\"}</td>\n          <td>${result.Name || \"N/A\"}</td>\n          <td>${result.ID || \"Not Found\"}</td>\n          <td>${result.Type || \"N/A\"}</td>\n          <td>${result.Status || \"Unknown\"}</td>\n        </tr>\n      `;\n    });\n    \n    html += `\n          </tbody>\n        </table>\n      </div>\n    `;\n    \n    resultsDiv.innerHTML = html;\n  }\n}\n\n// Display data results in the UI\nfunction displayDataResults(result: any): void {\n  const resultsDiv = document.getElementById(\"data-results\");\n  if (resultsDiv && result.data && result.data.length > 0) {\n    const dataToShow = result.data.slice(0, 10); // Show first 10 rows\n    \n    let html = `\n      <h3>Data Results (${result.data.length} rows)</h3>\n      <div class=\"results-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Timestamp</th>\n              ${result.data_columns.map(col => `<th>${col}</th>`).join('')}\n            </tr>\n          </thead>\n          <tbody>\n    `;\n    \n    dataToShow.forEach(row => {\n      html += `\n        <tr>\n          <td>${row.Timestamp || row.index || \"N/A\"}</td>\n          ${result.data_columns.map(col => `<td>${row[col] !== undefined ? row[col] : \"N/A\"}</td>`).join('')}\n        </tr>\n      `;\n    });\n    \n    html += `\n          </tbody>\n        </table>\n        ${result.data.length > 10 ? `<p><em>Showing first 10 of ${result.data.length} rows</em></p>` : ''}\n      </div>\n    `;\n    \n    resultsDiv.innerHTML = html;\n  }\n}\n\n// Display comprehensive diagnostics\nfunction displayDiagnostics(connectionResult: any, authResult: any): void {\n  const diagnosticsDiv = document.getElementById(\"diagnostics\");\n  if (!diagnosticsDiv) return;\n\n  const diagnostics = seeqClient?.getDiagnostics();\n  if (!diagnostics) return;\n\n  let html = `\n    <div class=\"diagnostics-panel\">\n      <h3>🔍 Connection Diagnostics</h3>\n      <div class=\"diagnostic-section\">\n        <h4>Environment Information</h4>\n        <div class=\"diagnostic-grid\">\n          <div class=\"diagnostic-item\">\n            <strong>App Domain:</strong> ${diagnostics.environment.appDomain}\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Origin:</strong> ${diagnostics.environment.origin}\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Network Type:</strong> ${diagnostics.environment.networkInfo.connectionType}\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Online Status:</strong> ${diagnostics.environment.networkInfo.online ? '✅ Online' : '❌ Offline'}\n          </div>\n        </div>\n      </div>\n  `;\n\n  // Connection test results\n  if (connectionResult.diagnostics) {\n    html += `\n      <div class=\"diagnostic-section\">\n        <h4>Connection Test Results</h4>\n        <div class=\"diagnostic-grid\">\n          <div class=\"diagnostic-item\">\n            <strong>Response Time:</strong> ${connectionResult.diagnostics.request_timing}ms\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Status Code:</strong> ${connectionResult.status_code}\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>CORS Status:</strong> ${connectionResult.diagnostics.cors_status}\n          </div>\n        </div>\n    `;\n\n    // Show CORS headers if available\n    if (connectionResult.diagnostics.response_headers) {\n      const corsHeaders = [\n        'access-control-allow-origin',\n        'access-control-allow-methods',\n        'access-control-allow-headers',\n        'access-control-allow-credentials'\n      ];\n      \n      html += `\n        <div class=\"cors-headers\">\n          <h5>CORS Headers:</h5>\n          <ul>\n      `;\n      \n      corsHeaders.forEach(header => {\n        const value = connectionResult.diagnostics.response_headers[header];\n        html += `<li><strong>${header}:</strong> ${value || 'Not set'}</li>`;\n      });\n      \n      html += `</ul></div>`;\n    }\n    \n    html += `</div>`;\n  }\n\n  // Auth endpoint test results\n  if (authResult.diagnostics) {\n    html += `\n      <div class=\"diagnostic-section\">\n        <h4>Authentication Endpoint Test</h4>\n        <div class=\"diagnostic-grid\">\n          <div class=\"diagnostic-item\">\n            <strong>Response Time:</strong> ${authResult.diagnostics.request_timing}ms\n          </div>\n          <div class=\"diagnostic-item\">\n            <strong>Status Code:</strong> ${authResult.status_code}\n          </div>\n        </div>\n    `;\n\n    // Show CORS analysis if available\n    if (authResult.diagnostics.cors_analysis) {\n      const corsAnalysis = authResult.diagnostics.cors_analysis;\n      html += `\n        <div class=\"cors-analysis\">\n          <h5>CORS Configuration Analysis:</h5>\n          <div class=\"cors-status\">\n            <div class=\"cors-item ${corsAnalysis.allowsOrigin ? 'success' : 'error'}\">\n              <strong>Origin Allowed:</strong> ${corsAnalysis.allowsOrigin ? '✅ Yes' : '❌ No'}\n            </div>\n            <div class=\"cors-item ${corsAnalysis.allowsMethods ? 'success' : 'error'}\">\n              <strong>Methods Allowed:</strong> ${corsAnalysis.allowsMethods ? '✅ Yes' : '❌ No'}\n            </div>\n            <div class=\"cors-item ${corsAnalysis.allowsHeaders ? 'success' : 'error'}\">\n              <strong>Headers Allowed:</strong> ${corsAnalysis.allowsHeaders ? '✅ Yes' : '❌ No'}\n            </div>\n          </div>\n      `;\n\n      if (corsAnalysis.issues.length > 0) {\n        html += `\n          <div class=\"cors-issues\">\n            <h6>Issues Found:</h6>\n            <ul>\n              ${corsAnalysis.issues.map(issue => `<li>❌ ${issue}</li>`).join('')}\n            </ul>\n          </div>\n        `;\n      }\n\n      if (corsAnalysis.recommendations.length > 0) {\n        html += `\n          <div class=\"cors-recommendations\">\n            <h6>Recommendations:</h6>\n            <ul>\n              ${corsAnalysis.recommendations.map(rec => `<li>💡 ${rec}</li>`).join('')}\n            </ul>\n          </div>\n        `;\n      }\n\n      html += `</div>`;\n    }\n    \n    html += `</div>`;\n  }\n\n  // Recent diagnostic logs\n  if (diagnostics.recentLogs && diagnostics.recentLogs.length > 0) {\n    html += `\n      <div class=\"diagnostic-section\">\n        <h4>Recent Diagnostic Logs</h4>\n        <div class=\"log-entries\">\n    `;\n    \n    diagnostics.recentLogs.slice(-10).forEach((log: any) => {\n      const timestamp = new Date(log.timestamp).toLocaleTimeString();\n      html += `\n        <div class=\"log-entry\">\n          <span class=\"log-time\">${timestamp}</span>\n          <span class=\"log-category\">[${log.category}]</span>\n          <span class=\"log-message\">${log.message}</span>\n        </div>\n      `;\n    });\n    \n    html += `</div></div>`;\n  }\n\n  html += `\n      <div class=\"diagnostic-actions\">\n        <button onclick=\"clearDiagnostics()\" class=\"btn-secondary\">Clear Logs</button>\n        <button onclick=\"exportDiagnostics()\" class=\"btn-secondary\">Export Diagnostics</button>\n      </div>\n    </div>\n  `;\n\n  diagnosticsDiv.innerHTML = html;\n}\n\n// Display error diagnostics\nfunction displayErrorDiagnostics(result: any): void {\n  const diagnosticsDiv = document.getElementById(\"diagnostics\");\n  if (!diagnosticsDiv) return;\n\n  const diagnostics = seeqClient?.getDiagnostics();\n  if (!diagnostics) return;\n\n  let html = `\n    <div class=\"diagnostics-panel error\">\n      <h3>❌ Error Diagnostics</h3>\n      <div class=\"error-summary\">\n        <h4>Error Summary</h4>\n        <div class=\"error-details\">\n          <div class=\"error-item\">\n            <strong>Error Message:</strong> ${result.message}\n          </div>\n          <div class=\"error-item\">\n            <strong>Error Type:</strong> ${result.error || 'Unknown'}\n          </div>\n        </div>\n      </div>\n  `;\n\n  // Show error analysis if available\n  if (result.diagnostics && result.diagnostics.error_analysis) {\n    const errorAnalysis = result.diagnostics.error_analysis;\n    html += `\n      <div class=\"diagnostic-section\">\n        <h4>Error Analysis</h4>\n        <div class=\"error-analysis\">\n          <div class=\"analysis-item\">\n            <strong>Error Type:</strong> ${errorAnalysis.errorType}\n          </div>\n          <div class=\"analysis-item\">\n            <strong>Likely Cause:</strong> ${errorAnalysis.likelyCause}\n          </div>\n          <div class=\"analysis-flags\">\n            <div class=\"flag ${errorAnalysis.isCorsRelated ? 'active' : ''}\">CORS Related</div>\n            <div class=\"flag ${errorAnalysis.isNetworkRelated ? 'active' : ''}\">Network Related</div>\n            <div class=\"flag ${errorAnalysis.isSslRelated ? 'active' : ''}\">SSL Related</div>\n            <div class=\"flag ${errorAnalysis.isAppDomainRelated ? 'active' : ''}\">AppDomain Related</div>\n          </div>\n        </div>\n    `;\n\n    if (errorAnalysis.recommendations.length > 0) {\n      html += `\n        <div class=\"recommendations\">\n          <h5>Recommendations:</h5>\n          <ul>\n            ${errorAnalysis.recommendations.map(rec => `<li>💡 ${rec}</li>`).join('')}\n          </ul>\n        </div>\n      `;\n    }\n    \n    html += `</div>`;\n  }\n\n  // Environment information\n  html += `\n    <div class=\"diagnostic-section\">\n      <h4>Environment Information</h4>\n      <div class=\"diagnostic-grid\">\n        <div class=\"diagnostic-item\">\n          <strong>App Domain:</strong> ${diagnostics.environment.appDomain}\n        </div>\n        <div class=\"diagnostic-item\">\n          <strong>Origin:</strong> ${diagnostics.environment.origin}\n        </div>\n        <div class=\"diagnostic-item\">\n          <strong>Network Type:</strong> ${diagnostics.environment.networkInfo.connectionType}\n        </div>\n        <div class=\"diagnostic-item\">\n          <strong>Online Status:</strong> ${diagnostics.environment.networkInfo.online ? '✅ Online' : '❌ Offline'}\n        </div>\n      </div>\n    </div>\n  `;\n\n  html += `\n    <div class=\"diagnostic-actions\">\n      <button onclick=\"clearDiagnostics()\" class=\"btn-secondary\">Clear Logs</button>\n      <button onclick=\"exportDiagnostics()\" class=\"btn-secondary\">Export Diagnostics</button>\n    </div>\n  </div>\n  `;\n\n  diagnosticsDiv.innerHTML = html;\n}\n\n// Clear diagnostics\nfunction clearDiagnostics(): void {\n  if (seeqClient) {\n    seeqClient.clearDiagnostics();\n  }\n  const diagnosticsDiv = document.getElementById(\"diagnostics\");\n  if (diagnosticsDiv) {\n    diagnosticsDiv.innerHTML = '<div class=\"diagnostics-panel\"><p>Diagnostics cleared. Run a connection test to generate new diagnostics.</p></div>';\n  }\n}\n\n// Export diagnostics\nfunction exportDiagnostics(): void {\n  if (!seeqClient) return;\n  \n  const diagnostics = seeqClient.getDiagnostics();\n  const exportData = {\n    timestamp: new Date().toISOString(),\n    diagnostics,\n    userAgent: navigator.userAgent,\n    url: window.location.href\n  };\n  \n  const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `sqexcel-diagnostics-${new Date().toISOString().split('T')[0]}.json`;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n}\n\n// Make functions globally available\n(window as any).clearDiagnostics = clearDiagnostics;\n(window as any).exportDiagnostics = exportDiagnostics;\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>SqExcel Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" alt=\\\"SqExcel\\\" title=\\\"SqExcel\\\"/> <h1 class=\\\"ms-font-su\\\">Welcome to SqExcel</h1> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <h2 class=\\\"ms-font-xl\\\">Welcome to SqExcel - Your Excel Power Tool!</h2> <div class=\\\"seeq-auth-section\\\"> <h3 class=\\\"ms-font-l\\\">Seeq Authentication</h3> <div class=\\\"auth-form\\\"> <div class=\\\"form-group\\\"> <label for=\\\"seeq-url\\\">Seeq Server URL:</label> <input type=\\\"url\\\" id=\\\"seeq-url\\\" placeholder=\\\"https://your-server.seeq.site\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"seeq-access-key\\\">Access Key:</label> <input type=\\\"text\\\" id=\\\"seeq-access-key\\\" placeholder=\\\"Your Seeq access key\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"seeq-password\\\">Password:</label> <input type=\\\"password\\\" id=\\\"seeq-password\\\" placeholder=\\\"Your Seeq password\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"ignore-ssl\\\">Ignore SSL Errors:</label> <input type=\\\"checkbox\\\" id=\\\"ignore-ssl\\\" class=\\\"ms-Checkbox-input\\\"> </div> <div class=\\\"auth-buttons\\\"> <button id=\\\"test-connection\\\" class=\\\"ms-Button ms-Button--primary\\\">Test Connection</button> <button id=\\\"authenticate\\\" class=\\\"ms-Button ms-Button--primary\\\">Authenticate</button> <button id=\\\"logout\\\" class=\\\"ms-Button ms-Button--secondary\\\" style=\\\"display:none\\\">Logout</button> </div> </div> <div id=\\\"auth-status\\\" class=\\\"auth-status\\\"></div> </div> <div id=\\\"diagnostics\\\" class=\\\"diagnostics-section\\\"> <div class=\\\"diagnostics-panel\\\"> <p>Run a connection test to see detailed diagnostics and troubleshoot CORS or AppDomain issues.</p> </div> </div> <div class=\\\"search-section\\\" style=\\\"display:none\\\"> <h3 class=\\\"ms-font-l\\\">Sensor Search</h3> <div class=\\\"form-group\\\"> <label for=\\\"sensor-names\\\">Sensor Names (comma-separated):</label> <input type=\\\"text\\\" id=\\\"sensor-names\\\" placeholder=\\\"Sensor1, Sensor2, Sensor3\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"start-time\\\">Start Time:</label> <input type=\\\"datetime-local\\\" id=\\\"start-time\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"end-time\\\">End Time:</label> <input type=\\\"datetime-local\\\" id=\\\"end-time\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"form-group\\\"> <label for=\\\"grid-interval\\\">Grid Interval:</label> <input type=\\\"text\\\" id=\\\"grid-interval\\\" placeholder=\\\"15min\\\" class=\\\"ms-TextField-field\\\"> </div> <div class=\\\"search-buttons\\\"> <button id=\\\"search-sensors\\\" class=\\\"ms-Button ms-Button--primary\\\">Search Sensors</button> <button id=\\\"pull-data\\\" class=\\\"ms-Button ms-Button--primary\\\">Pull Data</button> </div> <div id=\\\"search-results\\\" class=\\\"results-section\\\"></div> <div id=\\\"data-results\\\" class=\\\"results-section\\\"></div> </div> <p><label id=\\\"item-subject\\\"></label></p> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_defineProperty","_typeof","toPrimitive","String","_toPrimitive","SeeqAPIClient","seeqServerUrl","_classCallCheck","proxyUrl","logDiagnostic","concat","category","message","data","logEntry","timestamp","Date","toISOString","userAgent","navigator","origin","appDomain","detectAppDomain","networkInfo","getNetworkInfo","diagnosticLog","push","console","log","Office","context","host","protocol","error","connection","mozConnection","webkitConnection","online","onLine","connectionType","effectiveType","downlink","rtt","toString","clientInfo","isAuthenticated","authToken","diagnosticLogCount","environment","recentLogs","slice","_testConnection","_callee","startTime","url","response","requestTime","allHeaders","errorData","_requestTime","errorType","_t","_context","now","fetch","method","headers","body","JSON","stringify","seeq_url","forEach","status","statusText","ok","json","success","status_code","diagnostics","response_headers","request_timing","user_agent","app_domain","network_type","cors_status","catch","errorName","name","errorStack","stack","includes","_authenticate","_callee2","accessKey","password","authProvider","ignoreSslErrors","errorMessage","_t2","_args2","_context2","credentials","username","auth_provider","ignore_ssl_errors","token","user","server_url","_x","_x2","_searchSensors","_callee3","sensorNames","_this$credentials","_this$credentials2","_this$credentials3","_t3","_context3","search_results","sensor_count","sensor_names","sensorCount","searchResults","_x3","_searchAndPullSensors","_callee4","endTime","grid","_this$credentials4","_this$credentials5","_this$credentials6","_data$data","_t4","_args4","_context4","start_time","end_time","dataLength","dataColumns","data_columns","data_index","time_range","start","end","_x4","_x5","_x6","_this$credentials7","_logout","_callee5","_this$credentials8","_t5","_context5","ADDIN_VERSION","seeqClient","loadVersionInfo","_loadVersionInfo","versionData","version","description","initializeSeeqAuth","testConnectionBtn","getElementById","authenticateBtn","logoutBtn","searchSensorsBtn","pullDataBtn","onclick","testSeeqConnection","authenticateWithSeeq","logoutFromSeeq","searchSensors","pullSensorData","saved","localStorage","getItem","parse","checked","ignoreSsl","getTime","updateAuthUI","showAuthStatus","removeItem","loadSavedCredentials","_testSeeqConnection","_document$getElementB","result","authEndpointResult","testConnection","testAuthEndpoint","displayDiagnostics","updateExcelCache","displayErrorDiagnostics","_authenticateWithSeeq","_document$getElementB2","_document$getElementB3","_document$getElementB4","_document$getElementB5","authenticate","saveCredentials","_callee6","_document$getElementB6","sensorNamesInput","_context6","split","map","trim","filter","displaySearchResults","_pullSensorData","_callee7","_document$getElementB7","_document$getElementB8","_document$getElementB9","_document$getElementB0","startTimeInput","endTimeInput","gridInput","_context7","searchAndPullSensors","displayDataResults","logout","type","statusElement","textContent","className","testBtn","authBtn","urlInput","accessKeyInput","passwordInput","sslCheckbox","style","display","disabled","setItem","operationType","jsonData","cacheUpdate","Excel","run","_ref2","workbook","worksheets","getActiveWorksheet","getRange","values","sync","results","resultsDiv","html","Original_Name","Name","ID","Type","Status","innerHTML","dataToShow","col","join","row","Timestamp","index","connectionResult","authResult","_seeqClient","diagnosticsDiv","getDiagnostics","header","cors_analysis","corsAnalysis","allowsOrigin","allowsMethods","allowsHeaders","issues","issue","recommendations","rec","toLocaleTimeString","_seeqClient2","error_analysis","errorAnalysis","likelyCause","isCorsRelated","isNetworkRelated","isSslRelated","isAppDomainRelated","onReady","sideloadMsg","appBody","clearDiagnostics","exportDiagnostics","exportData","blob","Blob","URL","createObjectURL","createElement","download","appendChild","click","removeChild","revokeObjectURL"],"sourceRoot":""}